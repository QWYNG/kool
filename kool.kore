[topCellInitializer{}(LblinitGeneratedTopCell{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)")]

module BASIC-K
    sort SortK{} []
    sort SortKItem{} []
endmodule
[]
module KSEQ
    import BASIC-K []
    symbol kseq{}(SortKItem{}, SortK{}) : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol dotk{}() : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol append{}(SortK{}, SortK{}) : SortK{} [function{}(), functional{}()]
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, dotk{}()),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                TAIL:SortK{},
                \top{SortK{}}()
            )
        )
    ) []
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, kseq{}(K:SortKItem{}, KS:SortK{})),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                kseq{}(K:SortKItem{}, append{}(KS:SortK{}, TAIL:SortK{})),
                \top{SortK{}}()
            )
        )
    ) []
endmodule
[]
module INJ
    symbol inj{From, To}(From) : To [sortInjection{}()]
    axiom {S1, S2, S3, R} \equals{S3, R}(inj{S2, S3}(inj{S1, S2}(T:S1)), inj{S1, S3}(T:S1)) [simplification{}()]
endmodule
[]
module K
    import KSEQ []
    import INJ []
    alias weakExistsFinally{A}(A) : A where weakExistsFinally{A}(@X:A) := @X:A []
    alias weakAlwaysFinally{A}(A) : A where weakAlwaysFinally{A}(@X:A) := @X:A []
    alias allPathGlobally{A}(A) : A where allPathGlobally{A}(@X:A) := @X:A []
endmodule
[]

module KOOL

// imports
  import K []

// sorts
  sort SortStoreCellOpt{} []
  hooked-sort SortThreadCellSet{} [element{}(LblThreadCellSetItem{}()), cellCollection{}(), concat{}(Lbl'Unds'ThreadCellSet'Unds'{}()), unit{}(Lbl'Stop'ThreadCellSet{}()), hook{}("SET.Set")]
  sort SortBaseClassCell{} []
  sort SortIds{} []
  sort SortTCellFragment{} []
  sort SortControlCellFragment{} []
  sort SortIdCell{} []
  sort SortCrntObjCellOpt{} []
  sort SortCrntObjCellFragment{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(99,3,99,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)")]
  sort SortStoreCell{} []
  sort SortKCellOpt{} []
  sort SortEnvCell{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,3,96,17)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)")]
  sort SortEnvStackCellOpt{} []
  sort SortThreadsCell{} []
  sort SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,3,50,13)")]
  sort SortDeclarationsCell{} []
  sort SortThreadCell{} []
  sort SortControlCellOpt{} []
  hooked-sort SortClassDataCellMap{} [element{}(LblClassDataCellMapItem{}()), cellCollection{}(), concat{}(Lbl'Unds'ClassDataCellMap'Unds'{}()), unit{}(Lbl'Stop'ClassDataCellMap{}()), hook{}("MAP.Map")]
  sort SortIOInt{} []
  sort SortXstackCellOpt{} []
  sort SortClassesCell{} []
  sort SortVals{} []
  sort SortThreadsCellOpt{} []
  sort SortGeneratedTopCellFragment{} []
  sort SortIOFile{} []
  hooked-sort SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), element{}(LblListItem{}()), concat{}(Lbl'Unds'List'Unds'{}()), unit{}(Lbl'Stop'List{}()), hook{}("LIST.List"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(723,3,723,32)")]
  sort SortClassDataCellFragment{} []
  sort SortNextLocCellOpt{} []
  sort SortEnvStackCell{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(98,3,98,22)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)")]
  sort SortKCell{} []
  sort SortInputCell{} []
  sort SortEnvCellOpt{} []
  sort SortGeneratedTopCell{} []
  sort SortGeneratedCounterCell{} []
  sort SortFstackCell{} []
  sort SortOutputCellOpt{} []
  hooked-sort SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1291,3,1291,35)"), hook{}("FLOAT.Float"), hasDomainValues{}()]
  sort SortDeclarationsCellOpt{} []
  sort SortOutputCell{} []
  sort SortBusyCell{} []
  sort SortTCellOpt{} []
  sort SortBaseClassCellOpt{} []
  hooked-sort SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), concat{}(Lbl'Unds'Map'Unds'{}()), unit{}(Lbl'Stop'Map{}()), hook{}("MAP.Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,3,218,29)")]
  hooked-sort SortString{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1504,3,1504,38)"), hook{}("STRING.String"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), hasDomainValues{}()]
  sort SortClassesCellOpt{} []
  sort SortIOString{} []
  sort SortId{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2135,3,2135,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), token{}(), hasDomainValues{}()]
  sort SortBlock{} []
  sort SortGeneratedCounterCellOpt{} []
  sort SortThreadsCellFragment{} []
  sort SortIdCellOpt{} []
  sort SortKConfigVar{} [token{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/kast.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,3,40,28)"), hasDomainValues{}()]
  sort SortExp{} []
  sort SortCrntObjCell{} []
  sort SortTerminatedCellOpt{} []
  hooked-sort SortInt{} [hook{}("INT.Int"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(999,3,999,29)"), hasDomainValues{}()]
  sort SortBusyCellOpt{} []
  sort SortIOError{} []
  sort SortCrntClassCell{} []
  sort SortInputCellOpt{} []
  hooked-sort SortSet{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), element{}(LblSetItem{}()), concat{}(Lbl'Unds'Set'Unds'{}()), unit{}(Lbl'Stop'Set{}()), hook{}("SET.Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(510,3,510,29)")]
  sort SortXstackCell{} []
  sort SortClassNameCellOpt{} []
  sort SortHoldsCellOpt{} []
  sort SortNextLocCell{} []
  sort SortClassesCellFragment{} []
  sort SortExps{} []
  sort SortFstackCellOpt{} []
  sort SortTerminatedCell{} []
  sort SortClassNameCell{} []
  sort SortClassDataCell{} []
  sort SortCrntClassCellOpt{} []
  sort SortThreadCellFragment{} []
  sort SortKResult{} []
  sort SortControlCell{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,3,97,21)")]
  sort SortHoldsCell{} []
  sort SortLocationCellOpt{} []
  sort SortStream{} []
  sort SortLocationCell{} []
  sort SortTCell{} []
  sort SortStmt{} []
  hooked-sort SortBool{} [hook{}("BOOL.Bool"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(878,3,878,32)"), hasDomainValues{}()]

// symbols
  symbol Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,18,40,50)"), left{}(), format{}("%c!%r %1"), injective{}()]
  symbol Lbl'Hash'E2BIG{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#E2BIG"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2317,22,2317,55)"), left{}(), format{}("%c#E2BIG%r"), injective{}()]
  symbol Lbl'Hash'EACCES{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EACCES"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2318,22,2318,57)"), left{}(), format{}("%c#EACCES%r"), injective{}()]
  symbol Lbl'Hash'EADDRINUSE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EADDRINUSE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2367,22,2367,65)"), left{}(), format{}("%c#EADDRINUSE%r"), injective{}()]
  symbol Lbl'Hash'EADDRNOTAVAIL{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EADDRNOTAVAIL"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2368,22,2368,71)"), left{}(), format{}("%c#EADDRNOTAVAIL%r"), injective{}()]
  symbol Lbl'Hash'EAFNOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EAFNOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2366,22,2366,69)"), left{}(), format{}("%c#EAFNOSUPPORT%r"), injective{}()]
  symbol Lbl'Hash'EAGAIN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EAGAIN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2319,22,2319,57)"), left{}(), format{}("%c#EAGAIN%r"), injective{}()]
  symbol Lbl'Hash'EALREADY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EALREADY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2356,22,2356,61)"), left{}(), format{}("%c#EALREADY%r"), injective{}()]
  symbol Lbl'Hash'EBADF{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EBADF"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2320,22,2320,55)"), left{}(), format{}("%c#EBADF%r"), injective{}()]
  symbol Lbl'Hash'EBUSY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EBUSY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2321,22,2321,55)"), left{}(), format{}("%c#EBUSY%r"), injective{}()]
  symbol Lbl'Hash'ECHILD{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ECHILD"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2322,22,2322,57)"), left{}(), format{}("%c#ECHILD%r"), injective{}()]
  symbol Lbl'Hash'ECONNABORTED{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ECONNABORTED"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2372,22,2372,69)"), left{}(), format{}("%c#ECONNABORTED%r"), injective{}()]
  symbol Lbl'Hash'ECONNREFUSED{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ECONNREFUSED"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2380,22,2380,69)"), left{}(), format{}("%c#ECONNREFUSED%r"), injective{}()]
  symbol Lbl'Hash'ECONNRESET{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ECONNRESET"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2373,22,2373,65)"), left{}(), format{}("%c#ECONNRESET%r"), injective{}()]
  symbol Lbl'Hash'EDEADLK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EDEADLK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2323,22,2323,59)"), left{}(), format{}("%c#EDEADLK%r"), injective{}()]
  symbol Lbl'Hash'EDESTADDRREQ{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EDESTADDRREQ"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2358,22,2358,69)"), left{}(), format{}("%c#EDESTADDRREQ%r"), injective{}()]
  symbol Lbl'Hash'EDOM{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EDOM"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2324,22,2324,53)"), left{}(), format{}("%c#EDOM%r"), injective{}()]
  symbol Lbl'Hash'EEXIST{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EEXIST"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2325,22,2325,57)"), left{}(), format{}("%c#EEXIST%r"), injective{}()]
  symbol Lbl'Hash'EFAULT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EFAULT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2326,22,2326,57)"), left{}(), format{}("%c#EFAULT%r"), injective{}()]
  symbol Lbl'Hash'EFBIG{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EFBIG"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2327,22,2327,55)"), left{}(), format{}("%c#EFBIG%r"), injective{}()]
  symbol Lbl'Hash'EHOSTDOWN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EHOSTDOWN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2381,22,2381,63)"), left{}(), format{}("%c#EHOSTDOWN%r"), injective{}()]
  symbol Lbl'Hash'EHOSTUNREACH{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EHOSTUNREACH"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2382,22,2382,69)"), left{}(), format{}("%c#EHOSTUNREACH%r"), injective{}()]
  symbol Lbl'Hash'EINPROGRESS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EINPROGRESS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2355,22,2355,67)"), left{}(), format{}("%c#EINPROGRESS%r"), injective{}()]
  symbol Lbl'Hash'EINTR{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EINTR"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2328,22,2328,55)"), left{}(), format{}("%c#EINTR%r"), injective{}()]
  symbol Lbl'Hash'EINVAL{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EINVAL"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2329,22,2329,57)"), left{}(), format{}("%c#EINVAL%r"), injective{}()]
  symbol Lbl'Hash'EIO{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EIO"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2330,22,2330,51)"), left{}(), format{}("%c#EIO%r"), injective{}()]
  symbol Lbl'Hash'EISCONN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EISCONN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2375,22,2375,59)"), left{}(), format{}("%c#EISCONN%r"), injective{}()]
  symbol Lbl'Hash'EISDIR{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EISDIR"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2331,22,2331,57)"), left{}(), format{}("%c#EISDIR%r"), injective{}()]
  symbol Lbl'Hash'ELOOP{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ELOOP"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2383,22,2383,55)"), left{}(), format{}("%c#ELOOP%r"), injective{}()]
  symbol Lbl'Hash'EMFILE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EMFILE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2332,22,2332,57)"), left{}(), format{}("%c#EMFILE%r"), injective{}()]
  symbol Lbl'Hash'EMLINK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EMLINK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2333,22,2333,57)"), left{}(), format{}("%c#EMLINK%r"), injective{}()]
  symbol Lbl'Hash'EMSGSIZE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EMSGSIZE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2359,22,2359,61)"), left{}(), format{}("%c#EMSGSIZE%r"), injective{}()]
  symbol Lbl'Hash'ENAMETOOLONG{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENAMETOOLONG"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2334,22,2334,69)"), left{}(), format{}("%c#ENAMETOOLONG%r"), injective{}()]
  symbol Lbl'Hash'ENETDOWN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENETDOWN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2369,22,2369,61)"), left{}(), format{}("%c#ENETDOWN%r"), injective{}()]
  symbol Lbl'Hash'ENETRESET{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENETRESET"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2371,22,2371,63)"), left{}(), format{}("%c#ENETRESET%r"), injective{}()]
  symbol Lbl'Hash'ENETUNREACH{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENETUNREACH"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2370,22,2370,67)"), left{}(), format{}("%c#ENETUNREACH%r"), injective{}()]
  symbol Lbl'Hash'ENFILE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENFILE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2335,22,2335,57)"), left{}(), format{}("%c#ENFILE%r"), injective{}()]
  symbol Lbl'Hash'ENOBUFS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOBUFS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2374,22,2374,59)"), left{}(), format{}("%c#ENOBUFS%r"), injective{}()]
  symbol Lbl'Hash'ENODEV{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENODEV"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2336,22,2336,57)"), left{}(), format{}("%c#ENODEV%r"), injective{}()]
  symbol Lbl'Hash'ENOENT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOENT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2337,22,2337,57)"), left{}(), format{}("%c#ENOENT%r"), injective{}()]
  symbol Lbl'Hash'ENOEXEC{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOEXEC"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2338,22,2338,59)"), left{}(), format{}("%c#ENOEXEC%r"), injective{}()]
  symbol Lbl'Hash'ENOLCK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOLCK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2339,22,2339,57)"), left{}(), format{}("%c#ENOLCK%r"), injective{}()]
  symbol Lbl'Hash'ENOMEM{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOMEM"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2340,22,2340,57)"), left{}(), format{}("%c#ENOMEM%r"), injective{}()]
  symbol Lbl'Hash'ENOPROTOOPT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOPROTOOPT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2361,22,2361,67)"), left{}(), format{}("%c#ENOPROTOOPT%r"), injective{}()]
  symbol Lbl'Hash'ENOSPC{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOSPC"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2341,22,2341,57)"), left{}(), format{}("%c#ENOSPC%r"), injective{}()]
  symbol Lbl'Hash'ENOSYS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOSYS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2342,22,2342,57)"), left{}(), format{}("%c#ENOSYS%r"), injective{}()]
  symbol Lbl'Hash'ENOTCONN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOTCONN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2376,22,2376,61)"), left{}(), format{}("%c#ENOTCONN%r"), injective{}()]
  symbol Lbl'Hash'ENOTDIR{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOTDIR"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2343,22,2343,59)"), left{}(), format{}("%c#ENOTDIR%r"), injective{}()]
  symbol Lbl'Hash'ENOTEMPTY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOTEMPTY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2344,22,2344,63)"), left{}(), format{}("%c#ENOTEMPTY%r"), injective{}()]
  symbol Lbl'Hash'ENOTSOCK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOTSOCK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2357,22,2357,61)"), left{}(), format{}("%c#ENOTSOCK%r"), injective{}()]
  symbol Lbl'Hash'ENOTTY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOTTY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2345,22,2345,57)"), left{}(), format{}("%c#ENOTTY%r"), injective{}()]
  symbol Lbl'Hash'ENXIO{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENXIO"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2346,22,2346,55)"), left{}(), format{}("%c#ENXIO%r"), injective{}()]
  symbol Lbl'Hash'EOF{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EOF"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2316,22,2316,51)"), left{}(), format{}("%c#EOF%r"), injective{}()]
  symbol Lbl'Hash'EOPNOTSUPP{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EOPNOTSUPP"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2364,22,2364,65)"), left{}(), format{}("%c#EOPNOTSUPP%r"), injective{}()]
  symbol Lbl'Hash'EOVERFLOW{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EOVERFLOW"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2384,22,2384,63)"), left{}(), format{}("%c#EOVERFLOW%r"), injective{}()]
  symbol Lbl'Hash'EPERM{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EPERM"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2347,22,2347,55)"), left{}(), format{}("%c#EPERM%r"), injective{}()]
  symbol Lbl'Hash'EPFNOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EPFNOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2365,22,2365,69)"), left{}(), format{}("%c#EPFNOSUPPORT%r"), injective{}()]
  symbol Lbl'Hash'EPIPE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EPIPE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2348,22,2348,55)"), left{}(), format{}("%c#EPIPE%r"), injective{}()]
  symbol Lbl'Hash'EPROTONOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EPROTONOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2362,22,2362,75)"), left{}(), format{}("%c#EPROTONOSUPPORT%r"), injective{}()]
  symbol Lbl'Hash'EPROTOTYPE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EPROTOTYPE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2360,22,2360,65)"), left{}(), format{}("%c#EPROTOTYPE%r"), injective{}()]
  symbol Lbl'Hash'ERANGE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ERANGE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2349,22,2349,57)"), left{}(), format{}("%c#ERANGE%r"), injective{}()]
  symbol Lbl'Hash'EROFS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EROFS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2350,22,2350,55)"), left{}(), format{}("%c#EROFS%r"), injective{}()]
  symbol Lbl'Hash'ESHUTDOWN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ESHUTDOWN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2377,22,2377,63)"), left{}(), format{}("%c#ESHUTDOWN%r"), injective{}()]
  symbol Lbl'Hash'ESOCKTNOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ESOCKTNOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2363,22,2363,75)"), left{}(), format{}("%c#ESOCKTNOSUPPORT%r"), injective{}()]
  symbol Lbl'Hash'ESPIPE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ESPIPE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2351,22,2351,57)"), left{}(), format{}("%c#ESPIPE%r"), injective{}()]
  symbol Lbl'Hash'ESRCH{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ESRCH"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2352,22,2352,55)"), left{}(), format{}("%c#ESRCH%r"), injective{}()]
  symbol Lbl'Hash'ETIMEDOUT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ETIMEDOUT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2379,22,2379,63)"), left{}(), format{}("%c#ETIMEDOUT%r"), injective{}()]
  symbol Lbl'Hash'ETOOMANYREFS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ETOOMANYREFS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2378,22,2378,69)"), left{}(), format{}("%c#ETOOMANYREFS%r"), injective{}()]
  symbol Lbl'Hash'EWOULDBLOCK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EWOULDBLOCK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2354,22,2354,67)"), left{}(), format{}("%c#EWOULDBLOCK%r"), injective{}()]
  symbol Lbl'Hash'EXDEV{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EXDEV"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2353,22,2353,55)"), left{}(), format{}("%c#EXDEV%r"), injective{}()]
  hooked-symbol Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), hook{}("IO.accept"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2482,20,2482,81)"), left{}(), format{}("%c#accept%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(SortK{}) : SortStream{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#buffer"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2586,21,2586,31)"), left{}(), format{}("%c#buffer%r %c(%r %1 %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), hook{}("IO.close"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2456,16,2456,75)"), left{}(), format{}("%c#close%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezer!__KOOL-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer(_)__KOOL-SYNTAX_Exp_Id_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezer++__KOOL-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezer-__KOOL-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(484,20,484,47)"), left{}(), format{}("%c#freezerFunCall%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_!=__KOOL-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_!=__KOOL-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_%%__KOOL-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_%%__KOOL-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_&&__KOOL-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(SortK{}, SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("110101"), left{}(), format{}("%c#freezer_(_)_KOOL-SYNTAX_Exp_Exp_Exps0_%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_(_)_KOOL-SYNTAX_Exp_Exp_Exps1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_*__KOOL-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_*__KOOL-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_+__KOOL-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_+__KOOL-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_,__KOOL-SYNTAX_Exps_Exp_Exps0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_,__KOOL-SYNTAX_Exps_Exp_Exps1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_-__KOOL-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_-__KOOL-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_.__KOOL-SYNTAX_Exp_Exp_Id0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_/__KOOL-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_/__KOOL-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezer_;_KOOL-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<=__KOOL-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<=__KOOL-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<__KOOL-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<__KOOL-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_==__KOOL-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_==__KOOL-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_=__KOOL-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_=__KOOL-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>=__KOOL-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>=__KOOL-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>__KOOL-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>__KOOL-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_[_]_KOOL-SYNTAX_Exp_Exp_Exps0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_[_]_KOOL-SYNTAX_Exp_Exp_Exps1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_instanceOf__KOOL-SYNTAX_Exp_Exp_Id0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_||__KOOL-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezeracquire_;_KOOL-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(SortK{}, SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("110101"), left{}(), format{}("%c#freezerif(_)_else__KOOL-SYNTAX_Stmt_Exp_Block_Block0_%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezerjoin_;_KOOL-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezerlvalue(_)_KOOL_Exp_K0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezerlvalue(_)_KOOL_Exp_K0_2%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezerlvalue(_)_KOOL_Exp_K1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezernew_(_)_KOOL-SYNTAX_Exp_Id_Exps1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezerprint(_);_KOOL-SYNTAX_Stmt_Exps0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezerrelease_;_KOOL-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezerrendezvous_;_KOOL-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezerreturn_;_KOOL-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezersizeOf(_)_KOOL-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezerthrow_;_KOOL-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezervar_;_KOOL-SYNTAX_Stmt_Exps1_%r %c(%r %1 %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), hook{}("IO.getc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2437,20,2437,89)"), left{}(), format{}("%c#getc%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(SortBool{}, SortSort, SortSort) : SortSort [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("ite"), right{}(), terminals{}("1010101"), hook{}("KEQUAL.ite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2186,26,2186,121)"), left{}(), format{}("%c#if%r %1 %c#then%r %2 %c#else%r %3 %c#fi%r"), function{}()]
  symbol Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(SortInt{}) : SortStream{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#istream"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2587,21,2587,34)"), left{}(), format{}("%c#istream%r %c(%r %1 %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.lock"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2468,16,2468,91)"), left{}(), format{}("%c#lock%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'log{}(SortString{}) : SortK{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), returnsUnit{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("#log"), hook{}("IO.logString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2562,16,2562,102)"), left{}(), format{}("%c#log%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'logToFile{}(SortString{}, SortString{}) : SortK{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), returnsUnit{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("110101"), impure{}(), klabel{}("#logToFile"), hook{}("IO.log"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2553,16,2553,116)"), left{}(), format{}("%c#logToFile%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String{}(SortString{}) : SortIOFile{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("#mkstemp"), hook{}("IO.mkstemp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2530,21,2530,84)"), left{}(), format{}("%c#mkstemp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(SortString{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2407,20,2407,59)"), left{}(), format{}("%c#open%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.open"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2408,18,2408,97)"), left{}(), format{}("%c#open%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(SortInt{}) : SortStream{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#ostream"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2589,21,2589,34)"), left{}(), format{}("%c#ostream%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortStream{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#parseInput"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2588,21,2588,48)"), left{}(), format{}("%c#parseInput%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.putc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2447,16,2447,93)"), left{}(), format{}("%c#putc%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortIOString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.read"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2438,23,2438,99)"), left{}(), format{}("%c#read%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(SortString{}) : SortK{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("#remove"), hook{}("IO.remove"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2541,16,2541,80)"), left{}(), format{}("%c#remove%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.seek"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2423,16,2423,88)"), left{}(), format{}("%c#seek%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.seekEnd"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2424,16,2424,96)"), left{}(), format{}("%c#seekEnd%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), hook{}("IO.shutdownWrite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2483,16,2483,91)"), left{}(), format{}("%c#shutdownWrite%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}() : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2503,19,2503,46)"), left{}(), format{}("%c#stderr%r"), function{}()]
  symbol Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}() : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2501,18,2501,46)"), left{}(), format{}("%c#stdin%r"), function{}()]
  symbol Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}() : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2502,19,2502,46)"), left{}(), format{}("%c#stdout%r"), function{}()]
  hooked-symbol Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("#system"), hook{}("IO.system"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2519,20,2519,74)"), left{}(), format{}("%c#system%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'systemResult{}(SortInt{}, SortString{}, SortString{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("#systemResult"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2520,20,2520,143)"), left{}(), format{}("%c#systemResult%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), hook{}("IO.tell"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2422,20,2422,77)"), left{}(), format{}("%c#tell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'tempFile{}(SortString{}, SortInt{}) : SortIOFile{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#tempFile"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2532,21,2532,93)"), left{}(), format{}("%c#tempFile%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int{}() : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("111"), impure{}(), hook{}("IO.time"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2492,18,2492,67)"), left{}(), format{}("%c#time%r %c(%r %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'trace{}(SortKItem{}) : SortK{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), returnsUnit{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("#trace"), hook{}("IO.traceTerm"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2573,16,2573,103)"), left{}(), format{}("%c#trace%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'traceK{}(SortK{}) : SortK{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), returnsUnit{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("#traceK"), hook{}("IO.traceTerm"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2574,16,2574,103)"), left{}(), format{}("%c#traceK%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'unknownIOError{}(SortInt{}) : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#unknownIOError"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2316,54,2316,90)"), left{}(), format{}("%c#unknownIOError%r %c(%r %1 %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.unlock"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2469,16,2469,95)"), left{}(), format{}("%c#unlock%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String{}(SortInt{}, SortString{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.write"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2448,16,2448,93)"), left{}(), format{}("%c#write%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(SortId{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("1010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,18,18,53)"), left{}(), format{}("%c(%r %1 %c)%r %2"), injective{}()]
  symbol Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(SortMap{}, SortK{}, SortK{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1010101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(561,20,561,29)"), left{}(), format{}("%c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  symbol Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(SortId{}, SortStmt{}, SortK{}, SortMap{}, SortK{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("10101010101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(558,20,558,37)"), left{}(), format{}("%c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c,%r %5 %c)%r"), injective{}()]
  symbol Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(16,18,16,26)"), left{}(), format{}("%c++%r %1"), injective{}()]
  symbol Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,18,23,50)"), left{}(), format{}("%c-%r %1"), injective{}()]
  hooked-symbol Lbl'Stop'ClassDataCellMap{}() : SortClassDataCellMap{} [priorities{}(), right{}(), terminals{}("1"), hook{}("MAP.unit"), left{}(), format{}("%c.ClassDataCellMap%r"), function{}()]
  hooked-symbol Lbl'Stop'List{}() : SortList{} [latex{}("\\dotCt{List}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), smtlib{}("smt_seq_nil"), terminals{}("1"), klabel{}(".List"), hook{}("LIST.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(747,19,747,142)"), left{}(), format{}("%c.List%r"), function{}()]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}() : SortExps{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), anywhere{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"exps\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,64)"), left{}(), format{}("%c.Exps%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids{}() : SortIds{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"_,__KOOL-SYNTAX\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(47,19,47,31)"), left{}(), format{}("%c.Ids%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}() : SortVals{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"exps\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,19,51,56)"), left{}(), format{}("%c.Vals%r"), injective{}()]
  symbol Lbl'Stop'LocationCell{}() : SortLocationCell{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%c.LocationCell%r"), injective{}()]
  hooked-symbol Lbl'Stop'Map{}() : SortMap{} [latex{}("\\dotCt{Map}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".Map"), hook{}("MAP.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(248,18,248,124)"), left{}(), format{}("%c.Map%r"), function{}()]
  hooked-symbol Lbl'Stop'Set{}() : SortSet{} [latex{}("\\dotCt{Set}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".Set"), hook{}("SET.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(539,18,539,118)"), left{}(), format{}("%c.Set%r"), function{}()]
  hooked-symbol Lbl'Stop'ThreadCellSet{}() : SortThreadCellSet{} [priorities{}(), right{}(), terminals{}("1"), hook{}("SET.unit"), left{}(), format{}("%c.ThreadCellSet%r"), function{}()]
  symbol Lbl'-LT-'T'-GT-'{}(SortThreadsCell{}, SortStoreCell{}, SortBusyCell{}, SortTerminatedCell{}, SortInputCell{}, SortOutputCell{}, SortNextLocCell{}, SortClassesCell{}) : SortTCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("red"), cellName{}("T"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("1000000001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(104,17,140,21)"), left{}(), format{}("%c<T>%r%i%n%1%n%2%n%3%n%4%n%5%n%6%n%7%n%8%d%n%c</T>%r"), colors{}("red,red"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'T'-GT-'-fragment{}(SortThreadsCellOpt{}, SortStoreCellOpt{}, SortBusyCellOpt{}, SortTerminatedCellOpt{}, SortInputCellOpt{}, SortOutputCellOpt{}, SortNextLocCellOpt{}, SortClassesCellOpt{}) : SortTCellFragment{} [functional{}(), constructor{}(), cellFragment{}("TCell"), priorities{}(), right{}(), terminals{}("1000000001"), left{}(), format{}("%c<T>-fragment%r %1 %2 %3 %4 %5 %6 %7 %8 %c</T>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'baseClass'-GT-'{}(SortId{}) : SortBaseClassCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("Fuchsia"), cellName{}("baseClass"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(136,25,136,72)"), left{}(), format{}("%c<baseClass>%r%i%n%1%d%n%c</baseClass>%r"), colors{}("Fuchsia,Fuchsia"), injective{}(), cell{}()]
  symbol Lbl'-LT-'busy'-GT-'{}(SortSet{}) : SortBusyCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("cyan"), cellName{}("busy"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(127,19,127,50)"), left{}(), format{}("%c<busy>%r%i%n%1%d%n%c</busy>%r"), colors{}("cyan,cyan"), injective{}(), cell{}()]
  symbol Lbl'-LT-'classData'-GT-'{}(SortClassNameCell{}, SortBaseClassCell{}, SortDeclarationsCell{}) : SortClassDataCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("Fuchsia"), cellName{}("classData"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("10001"), type{}("Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(134,22,138,34)"), left{}(), format{}("%c<classData>%r%i%n%1%n%2%n%3%d%n%c</classData>%r"), colors{}("Fuchsia,Fuchsia"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'classData'-GT-'-fragment{}(SortClassNameCellOpt{}, SortBaseClassCellOpt{}, SortDeclarationsCellOpt{}) : SortClassDataCellFragment{} [functional{}(), constructor{}(), cellFragment{}("ClassDataCell"), priorities{}(), right{}(), terminals{}("10001"), left{}(), format{}("%c<classData>-fragment%r %1 %2 %3 %c</classData>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'className'-GT-'{}(SortId{}) : SortClassNameCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("Fuchsia"), cellName{}("className"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(135,25,135,70)"), left{}(), format{}("%c<className>%r%i%n%1%d%n%c</className>%r"), colors{}("Fuchsia,Fuchsia"), injective{}(), cell{}()]
  symbol Lbl'-LT-'classes'-GT-'{}(SortClassDataCellMap{}) : SortClassesCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("Fuchsia"), cellName{}("classes"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(133,19,139,29)"), left{}(), format{}("%c<classes>%r%i%n%1%d%n%c</classes>%r"), colors{}("Fuchsia,Fuchsia"), injective{}(), cell{}()]
  symbol Lbl'-LT-'classes'-GT-'-fragment{}(SortClassDataCellMap{}) : SortClassesCellFragment{} [functional{}(), constructor{}(), cellFragment{}("ClassesCell"), priorities{}(), right{}(), terminals{}("101"), left{}(), format{}("%c<classes>-fragment%r %1 %c</classes>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'control'-GT-'{}(SortFstackCell{}, SortXstackCell{}, SortCrntObjCell{}) : SortControlCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("cyan"), cellName{}("control"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("10001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(109,23,118,33)"), left{}(), format{}("%c<control>%r%i%n%1%n%2%n%3%d%n%c</control>%r"), colors{}("cyan,cyan"), injective{}(), cell{}()]
  symbol Lbl'-LT-'control'-GT-'-fragment{}(SortFstackCellOpt{}, SortXstackCellOpt{}, SortCrntObjCellOpt{}) : SortControlCellFragment{} [functional{}(), constructor{}(), cellFragment{}("ControlCell"), priorities{}(), right{}(), terminals{}("10001"), left{}(), format{}("%c<control>-fragment%r %1 %2 %3 %c</control>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'crntClass'-GT-'{}(SortId{}) : SortCrntClassCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cellName{}("crntClass"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(114,28,114,59)"), left{}(), format{}("%c<crntClass>%r%i%n%1%d%n%c</crntClass>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'crntObj'-GT-'{}(SortCrntClassCell{}, SortEnvStackCell{}, SortLocationCell{}) : SortCrntObjCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("Fuchsia"), cellName{}("crntObj"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("10001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(113,25,117,35)"), left{}(), format{}("%c<crntObj>%r%i%n%1%n%2%n%3%d%n%c</crntObj>%r"), colors{}("Fuchsia,Fuchsia"), injective{}(), cell{}()]
  symbol Lbl'-LT-'crntObj'-GT-'-fragment{}(SortCrntClassCellOpt{}, SortEnvStackCellOpt{}, SortLocationCellOpt{}) : SortCrntObjCellFragment{} [functional{}(), constructor{}(), cellFragment{}("CrntObjCell"), priorities{}(), right{}(), terminals{}("10001"), left{}(), format{}("%c<crntObj>-fragment%r %1 %2 %3 %c</crntObj>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'declarations'-GT-'{}(SortK{}) : SortDeclarationsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("Fuchsia"), cellName{}("declarations"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(137,25,137,74)"), left{}(), format{}("%c<declarations>%r%i%n%1%d%n%c</declarations>%r"), colors{}("Fuchsia,Fuchsia"), injective{}(), cell{}()]
  symbol Lbl'-LT-'env'-GT-'{}(SortMap{}) : SortEnvCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("violet"), cellName{}("env"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(120,23,120,55)"), left{}(), format{}("%c<env>%r%i%n%1%d%n%c</env>%r"), colors{}("violet,violet"), injective{}(), cell{}()]
  symbol Lbl'-LT-'envStack'-GT-'{}(SortList{}) : SortEnvStackCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cellName{}("envStack"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(115,28,115,56)"), left{}(), format{}("%c<envStack>%r%i%n%1%d%n%c</envStack>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fstack'-GT-'{}(SortList{}) : SortFstackCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("blue"), cellName{}("fstack"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(110,25,110,62)"), left{}(), format{}("%c<fstack>%r%i%n%1%d%n%c</fstack>%r"), colors{}("blue,blue"), injective{}(), cell{}()]
  symbol Lbl'-LT-'generatedCounter'-GT-'{}(SortInt{}) : SortGeneratedCounterCell{} [functional{}(), constructor{}(), cellName{}("generatedCounter"), priorities{}(), right{}(), terminals{}("101"), left{}(), format{}("%c<generatedCounter>%r%i%n%1%d%n%c</generatedCounter>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'{}(SortTCell{}, SortGeneratedCounterCell{}) : SortGeneratedTopCell{} [functional{}(), constructor{}(), cellName{}("generatedTop"), priorities{}(), right{}(), terminals{}("1001"), left{}(), format{}("%1"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'-fragment{}(SortTCellOpt{}, SortGeneratedCounterCellOpt{}) : SortGeneratedTopCellFragment{} [functional{}(), constructor{}(), cellFragment{}("GeneratedTopCell"), priorities{}(), right{}(), terminals{}("1001"), left{}(), format{}("%c<generatedTop>-fragment%r %1 %2 %c</generatedTop>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'holds'-GT-'{}(SortMap{}) : SortHoldsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("black"), cellName{}("holds"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(121,23,121,58)"), left{}(), format{}("%c<holds>%r%i%n%1%d%n%c</holds>%r"), colors{}("black,black"), injective{}(), cell{}()]
  symbol Lbl'-LT-'id'-GT-'{}(SortInt{}) : SortIdCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("pink"), cellName{}("id"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(122,23,122,48)"), left{}(), format{}("%c<id>%r%i%n%1%d%n%c</id>%r"), colors{}("pink,pink"), injective{}(), cell{}()]
  symbol Lbl'-LT-'input'-GT-'{}(SortList{}) : SortInputCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("magenta"), cellName{}("input"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(129,19,129,57)"), left{}(), format{}("%c<input>%r%i%n%1%d%n%c</input>%r"), colors{}("magenta,magenta"), injective{}(), cell{}()]
  symbol Lbl'-LT-'k'-GT-'{}(SortK{}) : SortKCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("green"), cellName{}("k"), maincell{}(), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(107,23,107,66)"), left{}(), format{}("%c<k>%r%i%n%1%d%n%c</k>%r"), colors{}("green,green"), injective{}(), cell{}()]
  symbol Lbl'-LT-'location'-GT-'{}(SortK{}) : SortLocationCell{} [unit{}(Lbl'Stop'LocationCell{}()), functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cellName{}("location"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(116,28,116,70)"), left{}(), format{}("%c<location>%r%i%n%1%d%n%c</location>%r"), multiplicity{}("?"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextLoc'-GT-'{}(SortInt{}) : SortNextLocCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("gray"), cellName{}("nextLoc"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(131,19,131,54)"), left{}(), format{}("%c<nextLoc>%r%i%n%1%d%n%c</nextLoc>%r"), colors{}("gray,gray"), injective{}(), cell{}()]
  symbol Lbl'-LT-'output'-GT-'{}(SortList{}) : SortOutputCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("brown"), cellName{}("output"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(130,19,130,58)"), left{}(), format{}("%c<output>%r%i%n%1%d%n%c</output>%r"), colors{}("brown,brown"), injective{}(), cell{}()]
  symbol Lbl'-LT-'store'-GT-'{}(SortMap{}) : SortStoreCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("white"), cellName{}("store"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(126,19,126,54)"), left{}(), format{}("%c<store>%r%i%n%1%d%n%c</store>%r"), colors{}("white,white"), injective{}(), cell{}()]
  symbol Lbl'-LT-'terminated'-GT-'{}(SortSet{}) : SortTerminatedCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("red"), cellName{}("terminated"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(128,19,128,62)"), left{}(), format{}("%c<terminated>%r%i%n%1%d%n%c</terminated>%r"), colors{}("red,red"), injective{}(), cell{}()]
  symbol Lbl'-LT-'thread'-GT-'{}(SortKCell{}, SortControlCell{}, SortEnvCell{}, SortHoldsCell{}, SortIdCell{}) : SortThreadCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("yellow"), cellName{}("thread"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("1000001"), type{}("Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(106,21,123,30)"), left{}(), format{}("%c<thread>%r%i%n%1%n%2%n%3%n%4%n%5%d%n%c</thread>%r"), colors{}("yellow,yellow"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'thread'-GT-'-fragment{}(SortKCellOpt{}, SortControlCellOpt{}, SortEnvCellOpt{}, SortHoldsCellOpt{}, SortIdCellOpt{}) : SortThreadCellFragment{} [functional{}(), constructor{}(), cellFragment{}("ThreadCell"), priorities{}(), right{}(), terminals{}("1000001"), left{}(), format{}("%c<thread>-fragment%r %1 %2 %3 %4 %5 %c</thread>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'threads'-GT-'{}(SortThreadCellSet{}) : SortThreadsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("orange"), cellName{}("threads"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(105,19,124,29)"), left{}(), format{}("%c<threads>%r%i%n%1%d%n%c</threads>%r"), colors{}("orange,orange"), injective{}(), cell{}()]
  symbol Lbl'-LT-'threads'-GT-'-fragment{}(SortThreadCellSet{}) : SortThreadsCellFragment{} [functional{}(), constructor{}(), cellFragment{}("ThreadsCell"), priorities{}(), right{}(), terminals{}("101"), left{}(), format{}("%c<threads>-fragment%r %1 %c</threads>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'xstack'-GT-'{}(SortList{}) : SortXstackCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), color{}("purple"), cellName{}("xstack"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(111,25,111,64)"), left{}(), format{}("%c<xstack>%r%i%n%1%d%n%c</xstack>%r"), colors{}("purple,purple"), injective{}(), cell{}()]
  hooked-symbol LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("Base2String"), hook{}("STRING.base2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1633,21,1633,99)"), left{}(), format{}("%cBase2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(SortBool{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Bool2String"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1583,21,1583,56)"), left{}(), format{}("%cBool2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblClassDataCellMap'Coln'in'Unds'keys{}(SortClassNameCell{}, SortClassDataCellMap{}) : SortBool{} [functional{}(), total{}(), priorities{}(), right{}(), terminals{}("01101"), hook{}("MAP.in_keys"), left{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}()]
  hooked-symbol LblClassDataCellMapItem{}(SortClassNameCell{}, SortClassDataCell{}) : SortClassDataCellMap{} [priorities{}(), right{}(), terminals{}("110101"), hook{}("MAP.element"), left{}(), format{}("%2"), function{}()]
  symbol LblClassDataCellMapKey{}(SortClassDataCell{}) : SortClassNameCell{} [functional{}(), total{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cClassDataCellMapKey%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(SortFloat{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Float2String"), hook{}("STRING.float2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1610,21,1610,101)"), left{}(), format{}("%cFloat2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String{}(SortFloat{}, SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("FloatFormat"), hook{}("STRING.floatFormat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1611,21,1611,122)"), left{}(), format{}("%cFloat2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(SortId{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Id2String"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2142,21,2142,85)"), left{}(), format{}("%cId2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Int2String"), hook{}("STRING.int2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1632,21,1632,99)"), left{}(), format{}("%cInt2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblList'Coln'get{}(SortList{}, SortInt{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("0101"), klabel{}("List:get"), hook{}("LIST.get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(766,20,766,99)"), left{}(), format{}("%1 %c[%r %2 %c]%r"), function{}()]
  hooked-symbol LblList'Coln'range{}(SortList{}, SortInt{}, SortInt{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("List:range"), hook{}("LIST.range"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(813,19,813,120)"), left{}(), format{}("%crange%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblListItem{}(SortKItem{}) : SortList{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), smtlib{}("smt_seq_elem"), terminals{}("1101"), klabel{}("ListItem"), hook{}("LIST.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(755,19,755,132)"), left{}(), format{}("%cListItem%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblMap'Coln'lookup{}(SortMap{}, SortKItem{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("0101"), klabel{}("Map:lookup"), hook{}("MAP.lookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,20,271,113)"), left{}(), format{}("%1 %c[%r %2 %c]%r"), function{}()]
  hooked-symbol LblMap'Coln'update{}(SortMap{}, SortKItem{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), prefer{}(), right{}(), terminals{}("010101"), klabel{}("Map:update"), hook{}("MAP.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(290,18,290,140)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}()]
  hooked-symbol LblSet'Coln'difference{}(SortSet{}, SortSet{}) : SortSet{} [latex{}("{#1}-_{\\it Set}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("Set:difference"), hook{}("SET.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(579,18,579,142)"), left{}(), format{}("%1 %c-Set%r %2"), function{}()]
  hooked-symbol LblSet'Coln'in{}(SortKItem{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("Set:in"), hook{}("SET.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(587,19,587,102)"), left{}(), format{}("%1 %cin%r %2"), function{}()]
  hooked-symbol LblSetItem{}(SortKItem{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("SetItem"), hook{}("SET.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(547,18,547,119)"), left{}(), format{}("%cSetItem%r %c(%r %1 %c)%r"), injective{}(), function{}()]
  hooked-symbol LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("String2Base"), hook{}("STRING.string2base"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1634,21,1634,99)"), left{}(), format{}("%cString2Base%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(SortString{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1589,19,1589,49)"), left{}(), format{}("%cString2Bool%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String{}(SortString{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Float"), hook{}("STRING.string2float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1612,21,1612,94)"), left{}(), format{}("%cString2Float%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(SortString{}) : SortId{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Id"), hook{}("STRING.string2token"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2143,17,2143,80)"), left{}(), format{}("%cString2Id%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Int"), hook{}("STRING.string2int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1631,21,1631,92)"), left{}(), format{}("%cString2Int%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblThreadCellSetItem{}(SortThreadCell{}) : SortThreadCellSet{} [priorities{}(), right{}(), terminals{}("1101"), hook{}("SET.element"), left{}(), format{}("%1"), function{}()]
  symbol Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), non-assoc{}(), priorities{}(Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,18,39,61)"), left{}(Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c!=%r %2"), injective{}()]
  hooked-symbol Lbl'UndsPerc'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("mod"), right{}(), terminals{}("010"), klabel{}("_%Int_"), hook{}("INT.tmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1047,18,1047,171)"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), format{}("%1 %c%%Int%r %2"), function{}()]
  symbol Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), left{}(Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c%%%r %2"), injective{}()]
  symbol Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(42,18,42,59)"), left{}(Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c&&%r %2"), injective{}()]
  hooked-symbol Lbl'UndsAnd-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\&_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), comm{}(), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("andInt"), terminals{}("010"), klabel{}("_&Int_"), hook{}("INT.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1058,18,1058,184)"), left{}(Lbl'UndsAnd-'Int'Unds'{}()), format{}("%1 %c&Int%r %2"), function{}()]
  symbol Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortExp{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("0101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,53)"), left{}(), format{}("%1 %c(%r %2 %c)%r"), injective{}()]
  hooked-symbol Lbl'UndsStar'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), comm{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("*"), right{}(), terminals{}("010"), klabel{}("_*Int_"), hook{}("INT.mul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1043,18,1043,183)"), left{}(Lbl'Unds'modInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), format{}("%1 %c*Int%r %2"), function{}()]
  symbol Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), left{}(Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c*%r %2"), injective{}()]
  hooked-symbol Lbl'UndsPlus'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), comm{}(), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), smt-hook{}("+"), right{}(), terminals{}("010"), klabel{}("_+Int_"), hook{}("INT.add"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1052,18,1052,180)"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), format{}("%1 %c+Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortString{} [latex{}("{#1}+_{\\scriptstyle\\it String}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1522,21,1522,135)"), left{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}()), format{}("%1 %c+String%r %2"), function{}()]
  symbol Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,56)"), left{}(Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c+%r %2"), injective{}()]
  symbol Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortExps{} [functional{}(), userList{}("*"), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), anywhere{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("exps"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,64)"), left{}(), format{}("%1 %c,%r %2"), injective{}()]
  symbol Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids{}(SortId{}, SortIds{}) : SortIds{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(47,19,47,31)"), left{}(), format{}("%1 %c,%r %2"), injective{}()]
  symbol Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(SortVal{}, SortVals{}) : SortVals{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("010"), klabel{}("exps"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,19,51,56)"), left{}(), format{}("%1 %c,%r %2"), injective{}()]
  hooked-symbol Lbl'Unds'-Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), smt-hook{}("-"), right{}(), terminals{}("010"), klabel{}("_-Int_"), hook{}("INT.sub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1053,18,1053,174)"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), format{}("%1 %c-Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [latex{}("{#1}-_{\\it Map}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("MAP.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(311,18,311,116)"), left{}(), format{}("%1 %c-Map%r %2"), function{}()]
  symbol Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,56)"), left{}(Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c-%r %2"), injective{}()]
  symbol Lbl'UndsStopStopStopUndsPipe'-'-GT-UndsUnds'KOOL'Unds'Map'Unds'Int'Unds'Int'Unds'K{}(SortInt{}, SortInt{}, SortK{}) : SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("01010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(581,18,581,50)"), left{}(), format{}("%1 %c...%r %2 %c|->%r %3"), function{}()]
  symbol Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(SortExp{}, SortId{}) : SortExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,18,20,28)"), left{}(), format{}("%1 %c.%r %2"), injective{}()]
  hooked-symbol Lbl'UndsSlsh'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("div"), right{}(), terminals{}("010"), klabel{}("_/Int_"), hook{}("INT.tdiv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1046,18,1046,173)"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), format{}("%1 %c/Int%r %2"), function{}()]
  symbol Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,18,28,56)"), left{}(Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c/%r %2"), injective{}()]
  symbol Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("01"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,19,57,65)"), left{}(), format{}("%1 %c;%r"), injective{}()]
  hooked-symbol Lbl'Unds-LT--LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ll_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shlInt"), terminals{}("010"), klabel{}("_<<Int_"), hook{}("INT.shl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1056,18,1056,173)"), left{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}()), format{}("%1 %c<<Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("<="), right{}(), terminals{}("010"), klabel{}("_<=Int_"), hook{}("INT.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1114,19,1114,172)"), left{}(Lbl'Unds-LT-Eqls'Int'Unds'{}()), format{}("%1 %c<=Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("MAP.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,19,383,87)"), left{}(), format{}("%1 %c<=Map%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("SET.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(596,19,596,81)"), left{}(), format{}("%1 %c<=Set%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1667,19,1667,78)"), left{}(), format{}("%1 %c<=String%r %2"), function{}()]
  symbol Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), non-assoc{}(), priorities{}(Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), left{}(Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c<=%r %2"), injective{}()]
  hooked-symbol Lbl'Unds-LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("<"), right{}(), terminals{}("010"), klabel{}("_<Int_"), hook{}("INT.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1115,19,1115,167)"), left{}(Lbl'Unds-LT-'Int'Unds'{}()), format{}("%1 %c<Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1666,19,1666,78)"), left{}(), format{}("%1 %c<String%r %2"), function{}()]
  symbol Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), non-assoc{}(), priorities{}(Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), left{}(Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c<%r %2"), injective{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("distinct"), right{}(), terminals{}("010"), klabel{}("_=/=Bool_"), hook{}("BOOL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(919,19,919,128)"), left{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}()), format{}("%1 %c=/=Bool%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{/}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("distinct"), right{}(), terminals{}("010"), klabel{}("_=/=Int_"), hook{}("INT.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1119,19,1119,184)"), left{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}()), format{}("%1 %c=/=Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{\\neq_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), notEqualEqualK{}(), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), smt-hook{}("distinct"), right{}(), terminals{}("010"), klabel{}("_=/=K_"), hook{}("KEQUAL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2182,19,2182,166)"), left{}(Lbl'UndsEqlsEqls'K'Unds'{}(),Lbl'UndsEqlsSlshEqls'K'Unds'{}()), format{}("%1 %c=/=K%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1663,19,1663,90)"), left{}(Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}()), format{}("%1 %c=/=String%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("="), right{}(), terminals{}("010"), klabel{}("_==Bool_"), hook{}("BOOL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(918,19,918,120)"), left{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), format{}("%1 %c==Bool%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("="), right{}(), terminals{}("010"), klabel{}("_==Int_"), hook{}("INT.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1118,19,1118,173)"), left{}(Lbl'UndsEqlsEqls'Int'Unds'{}()), format{}("%1 %c==Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{=_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), smt-hook{}("="), right{}(), terminals{}("010"), equalEqualK{}(), klabel{}("_==K_"), hook{}("KEQUAL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2181,19,2181,152)"), left{}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(),Lbl'UndsEqlsEqls'K'Unds'{}()), format{}("%1 %c==K%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1662,19,1662,84)"), left{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}()), format{}("%1 %c==String%r %2"), function{}()]
  symbol Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), non-assoc{}(), priorities{}(Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,61)"), left{}(Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c==%r %2"), injective{}()]
  symbol Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,18,45,60)"), left{}(), format{}("%1 %c=%r %2"), injective{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}(">="), right{}(), terminals{}("010"), klabel{}("_>=Int_"), hook{}("INT.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1116,19,1116,172)"), left{}(Lbl'Unds-GT-Eqls'Int'Unds'{}()), format{}("%1 %c>=Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1669,19,1669,78)"), left{}(), format{}("%1 %c>=String%r %2"), function{}()]
  symbol Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), non-assoc{}(), priorities{}(Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), left{}(Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c>=%r %2"), injective{}()]
  hooked-symbol Lbl'Unds-GT--GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\gg_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shrInt"), terminals{}("010"), klabel{}("_>>Int_"), hook{}("INT.shr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1055,18,1055,173)"), left{}(Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}()), format{}("%1 %c>>Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}(">"), right{}(), terminals{}("010"), klabel{}("_>Int_"), hook{}("INT.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1117,19,1117,167)"), left{}(Lbl'Unds-GT-'Int'Unds'{}()), format{}("%1 %c>Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1668,19,1668,78)"), left{}(), format{}("%1 %c>String%r %2"), function{}()]
  symbol Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), non-assoc{}(), priorities{}(Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), left{}(Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c>%r %2"), injective{}()]
  hooked-symbol Lbl'Unds'ClassDataCellMap'Unds'{}(SortClassDataCellMap{}, SortClassDataCellMap{}) : SortClassDataCellMap{} [unit{}(Lbl'Stop'ClassDataCellMap{}()), element{}(LblClassDataCellMapItem{}()), comm{}(), priorities{}(), cellCollection{}(), right{}(), assoc{}(), terminals{}("00"), hook{}("MAP.concat"), left{}(), format{}("%1 %2"), avoid{}(), function{}(), wrapElement{}("<classData>")]
  hooked-symbol Lbl'Unds'List'Unds'{}(SortList{}, SortList{}) : SortList{} [unit{}(Lbl'Stop'List{}()), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), element{}(LblListItem{}()), symbol'Kywd'{}(), priorities{}(), right{}(), assoc{}(), smtlib{}("smt_seq_concat"), terminals{}("00"), klabel{}("_List_"), hook{}("LIST.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(739,19,739,188)"), left{}(Lbl'Unds'List'Unds'{}()), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'Map'Unds'{}(SortMap{}, SortMap{}) : SortMap{} [unit{}(Lbl'Stop'Map{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), symbol'Kywd'{}(), comm{}(), priorities{}(), right{}(), assoc{}(), terminals{}("00"), index{}("0"), klabel{}("_Map_"), hook{}("MAP.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(240,18,240,173)"), left{}(Lbl'Unds'Map'Unds'{}()), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'Set'Unds'{}(SortSet{}, SortSet{}) : SortSet{} [unit{}(Lbl'Stop'Set{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), element{}(LblSetItem{}()), symbol'Kywd'{}(), idem{}(), comm{}(), priorities{}(), right{}(), assoc{}(), terminals{}("00"), klabel{}("_Set_"), hook{}("SET.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(531,18,531,165)"), left{}(Lbl'Unds'Set'Unds'{}()), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'ThreadCellSet'Unds'{}(SortThreadCellSet{}, SortThreadCellSet{}) : SortThreadCellSet{} [unit{}(Lbl'Stop'ThreadCellSet{}()), element{}(LblThreadCellSetItem{}()), idem{}(), comm{}(), priorities{}(), cellCollection{}(), right{}(), assoc{}(), terminals{}("00"), hook{}("SET.concat"), left{}(), format{}("%1 %2"), avoid{}(), function{}(), wrapElement{}("<thread>")]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010101"), klabel{}("List:set"), hook{}("LIST.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(775,19,775,108)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(SortMap{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010111"), klabel{}("_[_<-undef]"), hook{}("MAP.remove"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,18,299,117)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %cundef%r %c]%r"), function{}()]
  symbol Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("0101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), left{}(), format{}("%1 %c[%r %2 %c]%r"), injective{}()]
  hooked-symbol Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(SortMap{}, SortKItem{}, SortKItem{}) : SortKItem{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010110"), klabel{}("Map:lookupOrDefault"), hook{}("MAP.lookupOrDefault"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,20,281,134)"), left{}(), format{}("%1 %c[%r %2 %c]%r %corDefault%r %3"), function{}()]
  hooked-symbol Lbl'UndsXor-Perc'Int'UndsUnds'{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("(mod (^ #1 #2) #3)"), right{}(), terminals{}("0100"), klabel{}("_^%Int__"), hook{}("INT.powmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1041,18,1041,139)"), left{}(Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'UndsXor-'Int'Unds'{}()), format{}("%1 %c^%%Int%r %2 %3"), function{}()]
  hooked-symbol Lbl'UndsXor-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{{\\char`\\^}_{\\!\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("^"), right{}(), terminals{}("010"), klabel{}("_^Int_"), hook{}("INT.pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1040,18,1040,178)"), left{}(Lbl'UndsXor-'Int'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}()), format{}("%1 %c^Int%r %2"), function{}()]
  symbol Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(SortStmt{}, SortStmt{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}()), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(72,19,72,61)"), left{}(), format{}("%1 %2"), injective{}()]
  hooked-symbol Lbl'Unds'andBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\wedge_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("and"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_andBool_"), hook{}("BOOL.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(911,19,911,185)"), left{}(Lbl'Unds'andBool'Unds'{}()), format{}("%1 %candBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'andThenBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("and"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_andThenBool_"), hook{}("BOOL.andThen"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(912,19,912,147)"), left{}(Lbl'Unds'andThenBool'Unds'{}()), format{}("%1 %candThenBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'divInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("div"), right{}(), terminals{}("010"), klabel{}("_divInt_"), hook{}("INT.ediv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1049,18,1049,122)"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}()), format{}("%1 %cdivInt%r %2"), function{}()]
  symbol Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1128,19,1128,53)"), left{}(), format{}("%1 %cdividesInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds'impliesBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("=>"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_impliesBool_"), hook{}("BOOL.implies"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(916,19,916,146)"), left{}(Lbl'Unds'impliesBool'Unds'{}()), format{}("%1 %cimpliesBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(SortKItem{}, SortList{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("_inList_"), hook{}("LIST.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(822,19,822,97)"), left{}(), format{}("%1 %cin%r %2"), function{}()]
  hooked-symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(SortKItem{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("01101"), hook{}("MAP.in_keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,19,357,89)"), left{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}()]
  symbol Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(SortExp{}, SortId{}) : SortExp{} [functional{}(), constructor{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,18,17,53)"), left{}(), format{}("%1 %cinstanceOf%r %2"), injective{}()]
  hooked-symbol Lbl'Unds'modInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("mod"), right{}(), terminals{}("010"), klabel{}("_modInt_"), hook{}("INT.emod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1050,18,1050,122)"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), format{}("%1 %cmodInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds'orBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\vee_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("or"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_orBool_"), hook{}("BOOL.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(914,19,914,180)"), left{}(Lbl'Unds'orBool'Unds'{}()), format{}("%1 %corBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'orElseBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("or"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_orElseBool_"), hook{}("BOOL.orElse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(915,19,915,144)"), left{}(Lbl'Unds'orElseBool'Unds'{}()), format{}("%1 %corElseBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'xorBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("xor"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_xorBool_"), hook{}("BOOL.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(913,19,913,139)"), left{}(Lbl'Unds'xorBool'Unds'{}()), format{}("%1 %cxorBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'xorInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\oplus_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), comm{}(), priorities{}(Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("xorInt"), terminals{}("010"), klabel{}("_xorInt_"), hook{}("INT.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1060,18,1060,190)"), left{}(Lbl'Unds'xorInt'Unds'{}()), format{}("%1 %cxorInt%r %2"), function{}()]
  hooked-symbol Lbl'UndsPipe'-'-GT-Unds'{}(SortKItem{}, SortKItem{}) : SortMap{} [latex{}("{#1}\\mapsto{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'Stop'Map{}(),Lbl'Unds'Map'Unds'{}()), right{}(Lbl'UndsPipe'-'-GT-Unds'{}()), terminals{}("010"), klabel{}("_|->_"), hook{}("MAP.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,18,257,151)"), left{}(Lbl'UndsPipe'-'-GT-Unds'{}()), format{}("%1 %c|->%r %2"), injective{}(), function{}()]
  hooked-symbol Lbl'UndsPipe'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{|_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), comm{}(), priorities{}(), right{}(), smtlib{}("orInt"), terminals{}("010"), klabel{}("_|Int_"), hook{}("INT.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1062,18,1062,181)"), left{}(Lbl'UndsPipe'Int'Unds'{}()), format{}("%1 %c|Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), comm{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("SET.union"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(558,18,558,92)"), left{}(Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}()), format{}("%1 %c|Set%r %2"), function{}()]
  symbol Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,18,43,59)"), left{}(Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c||%r %2"), injective{}()]
  hooked-symbol LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("(ite (< #1 0) (- 0 #1) #1)"), right{}(), terminals{}("1101"), klabel{}("absInt"), hook{}("INT.abs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1079,18,1079,119)"), left{}(), format{}("%cabsInt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,19,68,65)"), left{}(), format{}("%cacquire%r %1 %c;%r"), injective{}()]
  symbol LbladdEnvLayer'Unds'KOOL'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(407,20,407,33)"), left{}(), format{}("%caddEnvLayer%r"), injective{}()]
  symbol Lblarray'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortVal{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("array"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(89,18,89,32)"), left{}(), format{}("%carray%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  hooked-symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("bitRangeInt"), hook{}("INT.bitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1104,18,1104,103)"), left{}(), format{}("%cbitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("categoryChar"), hook{}("STRING.category"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1679,21,1679,81)"), left{}(), format{}("%ccategoryChar%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Map:choice"), hook{}("MAP.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,20,393,101)"), left{}(), format{}("%cchoice%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set{}(SortSet{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Set:choice"), hook{}("SET.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(614,20,614,95)"), left{}(), format{}("%cchoice%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("chrChar"), hook{}("STRING.chr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1539,21,1539,70)"), left{}(), format{}("%cchrChar%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(SortId{}, SortBlock{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("100"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(9,19,9,35)"), left{}(), format{}("%cclass%r %1 %2"), injective{}()]
  symbol Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(SortId{}, SortId{}, SortBlock{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("10100"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(10,19,10,48)"), left{}(), format{}("%cclass%r %1 %cextends%r %2 %3"), injective{}()]
  hooked-symbol LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("110101"), hook{}("STRING.countAllOccurrences"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1652,18,1652,146)"), left{}(), format{}("%ccountAllOccurrences%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(SortId{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("create"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(392,20,392,30)"), left{}(), format{}("%ccreate%r %c(%r %1 %c)%r"), injective{}()]
  hooked-symbol LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("directionalityChar"), hook{}("STRING.directionality"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1680,21,1680,87)"), left{}(), format{}("%cdirectionalityChar%r %c(%r %1 %c)%r"), function{}()]
  symbol LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(SortId{}, SortMap{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("110101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(377,20,377,54)"), left{}(), format{}("%cenvStackFrame%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol Lblexecute'Unds'KOOL'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(553,20,553,29)"), left{}(), format{}("%cexecute%r"), injective{}()]
  hooked-symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101010101"), klabel{}("fillList"), hook{}("LIST.fill"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(803,19,803,100)"), left{}(), format{}("%cfillList%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}()]
  hooked-symbol LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("findChar"), hook{}("STRING.findChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1576,18,1576,116)"), left{}(), format{}("%cfindChar%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("findString"), hook{}("STRING.find"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1565,18,1565,111)"), left{}(), format{}("%cfindString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lblfor'LParUndsUndsSClnUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Exp'Unds'Exp'Unds'Block{}(SortStmt{}, SortExp{}, SortExp{}, SortBlock{}) : SortStmt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), macro{}(), priorities{}(), right{}(), terminals{}("11001010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(61,19,61,64)"), left{}(), format{}("%cfor%r %c(%r %1 %2 %c;%r %3 %c)%r %4"), injective{}()]
  symbol LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(SortInt{}) : SortId{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), freshGenerator{}(), klabel{}("freshId"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2144,17,2144,75)"), left{}(), format{}("%cfreshId%r %c(%r %1 %c)%r"), private{}(), function{}()]
  symbol LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), freshGenerator{}(), klabel{}("freshInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1253,18,1253,77)"), left{}(), format{}("%cfreshInt%r %c(%r %1 %c)%r"), private{}(), function{}()]
  symbol LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(SortMap{}, SortK{}, SortList{}, SortK{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1101010101"), klabel{}("fstackFrame"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(560,20,560,45)"), left{}(), format{}("%cfstackFrame%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), injective{}()]
  symbol LblgetGeneratedCounterCell{}(SortGeneratedTopCell{}) : SortGeneratedCounterCell{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cgetGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblif'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(SortExp{}, SortBlock{}) : SortStmt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), macro{}(), priorities{}(), right{}(), terminals{}("11010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(59,19,59,64)"), left{}(), format{}("%cif%r %c(%r %1 %c)%r %2"), injective{}()]
  symbol Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(SortExp{}, SortBlock{}, SortBlock{}) : SortStmt{} [functional{}(), constructor{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1101010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,19,58,75)"), left{}(), format{}("%cif%r %c(%r %1 %c)%r %2 %celse%r %3"), injective{}(), avoid{}()]
  symbol LblinitBaseClassCell{}() : SortBaseClassCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitBaseClassCell%r"), function{}()]
  symbol LblinitBusyCell{}() : SortBusyCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitBusyCell%r"), function{}()]
  symbol LblinitClassDataCell{}() : SortClassDataCellMap{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitClassDataCell%r"), function{}()]
  symbol LblinitClassNameCell{}() : SortClassNameCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitClassNameCell%r"), function{}()]
  symbol LblinitClassesCell{}() : SortClassesCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitClassesCell%r"), function{}()]
  symbol LblinitControlCell{}() : SortControlCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitControlCell%r"), function{}()]
  symbol LblinitCrntClassCell{}() : SortCrntClassCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitCrntClassCell%r"), function{}()]
  symbol LblinitCrntObjCell{}() : SortCrntObjCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitCrntObjCell%r"), function{}()]
  symbol LblinitDeclarationsCell{}() : SortDeclarationsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitDeclarationsCell%r"), function{}()]
  symbol LblinitEnvCell{}() : SortEnvCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitEnvCell%r"), function{}()]
  symbol LblinitEnvStackCell{}() : SortEnvStackCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitEnvStackCell%r"), function{}()]
  symbol LblinitFstackCell{}() : SortFstackCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitFstackCell%r"), function{}()]
  symbol LblinitGeneratedCounterCell{}() : SortGeneratedCounterCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitGeneratedCounterCell%r"), function{}()]
  symbol LblinitGeneratedTopCell{}(SortMap{}) : SortGeneratedTopCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), initializer{}(), format{}("%cinitGeneratedTopCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblinitHoldsCell{}() : SortHoldsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitHoldsCell%r"), function{}()]
  symbol LblinitIdCell{}() : SortIdCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitIdCell%r"), function{}()]
  symbol LblinitInputCell{}() : SortInputCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitInputCell%r"), function{}()]
  symbol LblinitKCell{}(SortMap{}) : SortKCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), initializer{}(), format{}("%cinitKCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblinitLocationCell{}() : SortLocationCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitLocationCell%r"), function{}()]
  symbol LblinitNextLocCell{}() : SortNextLocCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitNextLocCell%r"), function{}()]
  symbol LblinitOutputCell{}() : SortOutputCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitOutputCell%r"), function{}()]
  symbol LblinitStoreCell{}() : SortStoreCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitStoreCell%r"), function{}()]
  symbol LblinitTCell{}(SortMap{}) : SortTCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), initializer{}(), format{}("%cinitTCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblinitTerminatedCell{}() : SortTerminatedCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitTerminatedCell%r"), function{}()]
  symbol LblinitThreadCell{}(SortMap{}) : SortThreadCellSet{} [noThread{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), initializer{}(), format{}("%cinitThreadCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblinitThreadsCell{}(SortMap{}) : SortThreadsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), initializer{}(), format{}("%cinitThreadsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblinitXstackCell{}() : SortXstackCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitXstackCell%r"), function{}()]
  hooked-symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), comm{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("intersectSet"), hook{}("SET.intersection"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(569,18,569,90)"), left{}(), format{}("%cintersectSet%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblisBaseClassCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("BaseClassCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBaseClassCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBaseClassCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("BaseClassCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBaseClassCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBlock{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Block"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBlock%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBool{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Bool"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBool%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBusyCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("BusyCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBusyCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBusyCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("BusyCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBusyCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassDataCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassDataCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassDataCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassDataCellFragment{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassDataCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassDataCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassDataCellMap{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassDataCellMap"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassDataCellMap%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassNameCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassNameCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassNameCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassNameCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassNameCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassNameCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassesCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassesCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassesCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassesCellFragment{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassesCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassesCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassesCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassesCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassesCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisControlCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ControlCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisControlCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisControlCellFragment{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ControlCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisControlCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisControlCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ControlCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisControlCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCrntClassCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("CrntClassCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCrntClassCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCrntClassCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("CrntClassCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCrntClassCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCrntObjCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("CrntObjCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCrntObjCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCrntObjCellFragment{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("CrntObjCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCrntObjCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCrntObjCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("CrntObjCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCrntObjCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisDeclarationsCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("DeclarationsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisDeclarationsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisDeclarationsCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("DeclarationsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisDeclarationsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisEnvCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("EnvCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisEnvCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisEnvCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("EnvCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisEnvCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisEnvStackCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("EnvStackCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisEnvStackCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisEnvStackCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("EnvStackCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisEnvStackCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisExp{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Exp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisExp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisExps{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Exps"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisExps%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFloat{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Float"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFstackCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("FstackCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFstackCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFstackCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("FstackCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFstackCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedCounterCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("GeneratedCounterCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedCounterCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("GeneratedCounterCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedCounterCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedTopCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("GeneratedTopCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedTopCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedTopCellFragment{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("GeneratedTopCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisHoldsCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("HoldsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisHoldsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisHoldsCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("HoldsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisHoldsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIOError{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("IOError"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIOError%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIOFile{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("IOFile"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIOFile%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIOInt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("IOInt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIOInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIOString{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("IOString"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIOString%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisId{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Id"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisId%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIdCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("IdCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIdCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIdCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("IdCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIdCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIds{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Ids"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIds%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInputCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("InputCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInputCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInputCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("InputCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInputCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Int"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisK{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("K"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisK%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("KCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("KCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKConfigVar{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("KConfigVar"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKConfigVar%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKItem{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("KItem"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKItem%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKResult{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("KResult"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKResult%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisList{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("List"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisList%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisLocationCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("LocationCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisLocationCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisLocationCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("LocationCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisLocationCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMap{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Map"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMap%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextLocCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("NextLocCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextLocCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextLocCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("NextLocCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextLocCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisOutputCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("OutputCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisOutputCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisOutputCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("OutputCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisOutputCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisSet{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Set"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisSet%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisStmt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Stmt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisStmt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisStoreCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("StoreCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisStoreCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisStoreCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("StoreCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisStoreCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisStream{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Stream"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisStream%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisString{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("String"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisString%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTCellFragment{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTerminatedCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TerminatedCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTerminatedCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTerminatedCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TerminatedCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTerminatedCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisThreadCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ThreadCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisThreadCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisThreadCellFragment{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ThreadCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisThreadCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisThreadCellSet{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ThreadCellSet"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisThreadCellSet%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisThreadsCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ThreadsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisThreadsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisThreadsCellFragment{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ThreadsCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisThreadsCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisThreadsCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ThreadsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisThreadsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisVal{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Val"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisVal%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisVals{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Vals"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisVals%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisXstackCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("XstackCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisXstackCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisXstackCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("XstackCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisXstackCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,19,67,65)"), left{}(), format{}("%cjoin%r %1 %c;%r"), injective{}()]
  hooked-symbol Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(SortMap{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("keys"), hook{}("MAP.keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,18,341,82)"), left{}(), format{}("%ckeys%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), hook{}("MAP.keys_list"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,19,349,80)"), left{}(), format{}("%ckeys_list%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("lengthString"), hook{}("STRING.length"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1530,18,1530,80)"), left{}(), format{}("%clengthString%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblloc'LParUndsRParUnds'KOOL'Unds'Val'Unds'Int{}(SortInt{}) : SortVal{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("loc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(232,18,232,26)"), left{}(), format{}("%cloc%r %c(%r %1 %c)%r"), injective{}()]
  hooked-symbol Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("log2Int"), hook{}("INT.log2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1090,18,1090,75)"), left{}(), format{}("%clog2Int%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(SortInt{}) : SortExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("lookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(187,18,187,29)"), left{}(), format{}("%clookup%r %c(%r %1 %c)%r"), injective{}()]
  symbol LbllookupMember'LParUndsCommUndsRParUnds'KOOL'Unds'Exp'Unds'List'Unds'Id{}(SortList{}, SortId{}) : SortExp{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("lookupMember"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(503,20,503,54)"), left{}(), format{}("%clookupMember%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(SortK{}) : SortExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("lvalue"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(227,18,227,27)"), left{}(), format{}("%clvalue%r %c(%r %1 %c)%r"), injective{}()]
  hooked-symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem{}(SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("makeList"), hook{}("LIST.make"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(784,19,784,82)"), left{}(), format{}("%cmakeList%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("(ite (< #1 #2) #2 #1)"), right{}(), terminals{}("110101"), hook{}("INT.max"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1071,18,1071,114)"), left{}(), format{}("%cmaxInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblmethodClosure'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'Int'Unds'Ids'Unds'Stmt{}(SortId{}, SortInt{}, SortIds{}, SortStmt{}) : SortVal{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1101010101"), klabel{}("methodClosure"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(360,18,360,48)"), left{}(), format{}("%cmethodClosure%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), injective{}()]
  symbol Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(SortId{}, SortIds{}, SortBlock{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("101010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(8,19,8,48)"), left{}(), format{}("%cmethod%r %1 %c(%r %2 %c)%r %3"), injective{}()]
  hooked-symbol LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("(ite (< #1 #2) #1 #2)"), right{}(), terminals{}("110101"), hook{}("INT.min"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1070,18,1070,114)"), left{}(), format{}("%cminInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblmkDecls'LParUndsCommUndsRParUnds'KOOL'Unds'Stmt'Unds'Ids'Unds'Vals{}(SortIds{}, SortVals{}) : SortStmt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("mkDecls"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(200,19,200,48)"), left{}(), format{}("%cmkDecls%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblnewUUID'Unds'STRING-COMMON'Unds'String{}() : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1"), impure{}(), hook{}("STRING.uuid"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1682,21,1682,68)"), left{}(), format{}("%cnewUUID%r"), function{}()]
  symbol Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(SortId{}, SortExps{}) : SortExp{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("10101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,53)"), left{}(), format{}("%cnew%r %1 %c(%r %2 %c)%r"), injective{}()]
  symbol LblnoBaseClassCell{}() : SortBaseClassCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("BaseClassCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoBaseClassCell%r"), injective{}()]
  symbol LblnoBusyCell{}() : SortBusyCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("BusyCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoBusyCell%r"), injective{}()]
  symbol LblnoClassNameCell{}() : SortClassNameCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ClassNameCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoClassNameCell%r"), injective{}()]
  symbol LblnoClassesCell{}() : SortClassesCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ClassesCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoClassesCell%r"), injective{}()]
  symbol LblnoControlCell{}() : SortControlCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ControlCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoControlCell%r"), injective{}()]
  symbol LblnoCrntClassCell{}() : SortCrntClassCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("CrntClassCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoCrntClassCell%r"), injective{}()]
  symbol LblnoCrntObjCell{}() : SortCrntObjCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("CrntObjCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoCrntObjCell%r"), injective{}()]
  symbol LblnoDeclarationsCell{}() : SortDeclarationsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("DeclarationsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoDeclarationsCell%r"), injective{}()]
  symbol LblnoEnvCell{}() : SortEnvCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("EnvCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoEnvCell%r"), injective{}()]
  symbol LblnoEnvStackCell{}() : SortEnvStackCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("EnvStackCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoEnvStackCell%r"), injective{}()]
  symbol LblnoFstackCell{}() : SortFstackCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FstackCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoFstackCell%r"), injective{}()]
  symbol LblnoGeneratedCounterCell{}() : SortGeneratedCounterCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GeneratedCounterCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoGeneratedCounterCell%r"), injective{}()]
  symbol LblnoHoldsCell{}() : SortHoldsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("HoldsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoHoldsCell%r"), injective{}()]
  symbol LblnoIdCell{}() : SortIdCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("IdCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoIdCell%r"), injective{}()]
  symbol LblnoInputCell{}() : SortInputCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("InputCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoInputCell%r"), injective{}()]
  symbol LblnoKCell{}() : SortKCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("KCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoKCell%r"), injective{}()]
  symbol LblnoLocationCell{}() : SortLocationCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("LocationCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoLocationCell%r"), injective{}()]
  symbol LblnoNextLocCell{}() : SortNextLocCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextLocCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoNextLocCell%r"), injective{}()]
  symbol LblnoOutputCell{}() : SortOutputCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("OutputCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoOutputCell%r"), injective{}()]
  symbol LblnoStoreCell{}() : SortStoreCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("StoreCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoStoreCell%r"), injective{}()]
  symbol LblnoTCell{}() : SortTCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoTCell%r"), injective{}()]
  symbol LblnoTerminatedCell{}() : SortTerminatedCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TerminatedCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoTerminatedCell%r"), injective{}()]
  symbol LblnoThreadsCell{}() : SortThreadsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ThreadsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoThreadsCell%r"), injective{}()]
  symbol LblnoXstackCell{}() : SortXstackCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("XstackCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoXstackCell%r"), injective{}()]
  hooked-symbol LblnotBool'Unds'{}(SortBool{}) : SortBool{} [latex{}("\\neg_{\\scriptstyle\\it Bool}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), smt-hook{}("not"), boolOperation{}(), right{}(), terminals{}("10"), klabel{}("notBool_"), hook{}("BOOL.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(910,19,910,172)"), left{}(), format{}("%cnotBool%r %1"), function{}()]
  symbol Lblnothing'Unds'KOOL'Unds'Val{}() : SortVal{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(220,18,220,27)"), left{}(), format{}("%cnothing%r"), injective{}()]
  symbol LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(SortId{}, SortList{}) : SortVal{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("objectClosure"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(359,18,359,41)"), left{}(), format{}("%cobjectClosure%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  hooked-symbol LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("ordChar"), hook{}("STRING.ord"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1540,18,1540,70)"), left{}(), format{}("%cordChar%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblpopx'Unds'KOOL'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(276,20,276,26)"), left{}(), format{}("%cpopx%r"), injective{}()]
  symbol Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(SortExps{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("11011"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,19,64,65)"), left{}(), format{}("%cprint%r %c(%r %1 %c)%r %c;%r"), injective{}()]
  symbol Lblproject'ColnHash'tempFile'Coln'fd{}(SortIOFile{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cfd%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'ColnHash'tempFile'Coln'path{}(SortIOFile{}) : SortString{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cpath%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'ColnHash'unknownIOError'Coln'errno{}(SortIOError{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cerrno%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'BaseClassCell{}(SortK{}) : SortBaseClassCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:BaseClassCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'BaseClassCellOpt{}(SortK{}) : SortBaseClassCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:BaseClassCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Block{}(SortK{}) : SortBlock{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Block%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Bool{}(SortK{}) : SortBool{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Bool%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'BusyCell{}(SortK{}) : SortBusyCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:BusyCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'BusyCellOpt{}(SortK{}) : SortBusyCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:BusyCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassDataCell{}(SortK{}) : SortClassDataCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassDataCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassDataCellFragment{}(SortK{}) : SortClassDataCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassDataCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassDataCellMap{}(SortK{}) : SortClassDataCellMap{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassDataCellMap%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassNameCell{}(SortK{}) : SortClassNameCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassNameCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassNameCellOpt{}(SortK{}) : SortClassNameCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassNameCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassesCell{}(SortK{}) : SortClassesCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassesCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassesCellFragment{}(SortK{}) : SortClassesCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassesCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassesCellOpt{}(SortK{}) : SortClassesCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassesCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ControlCell{}(SortK{}) : SortControlCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ControlCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ControlCellFragment{}(SortK{}) : SortControlCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ControlCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ControlCellOpt{}(SortK{}) : SortControlCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ControlCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'CrntClassCell{}(SortK{}) : SortCrntClassCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:CrntClassCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'CrntClassCellOpt{}(SortK{}) : SortCrntClassCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:CrntClassCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'CrntObjCell{}(SortK{}) : SortCrntObjCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:CrntObjCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'CrntObjCellFragment{}(SortK{}) : SortCrntObjCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:CrntObjCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'CrntObjCellOpt{}(SortK{}) : SortCrntObjCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:CrntObjCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'DeclarationsCell{}(SortK{}) : SortDeclarationsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:DeclarationsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'DeclarationsCellOpt{}(SortK{}) : SortDeclarationsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:DeclarationsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'EnvCell{}(SortK{}) : SortEnvCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:EnvCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'EnvCellOpt{}(SortK{}) : SortEnvCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:EnvCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'EnvStackCell{}(SortK{}) : SortEnvStackCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:EnvStackCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'EnvStackCellOpt{}(SortK{}) : SortEnvStackCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:EnvStackCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Exp{}(SortK{}) : SortExp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Exp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Exps{}(SortK{}) : SortExps{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Exps%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Float{}(SortK{}) : SortFloat{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Float%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FstackCell{}(SortK{}) : SortFstackCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FstackCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FstackCellOpt{}(SortK{}) : SortFstackCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FstackCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedCounterCell{}(SortK{}) : SortGeneratedCounterCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedCounterCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedCounterCellOpt{}(SortK{}) : SortGeneratedCounterCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedCounterCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedTopCell{}(SortK{}) : SortGeneratedTopCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedTopCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedTopCellFragment{}(SortK{}) : SortGeneratedTopCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'HoldsCell{}(SortK{}) : SortHoldsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:HoldsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'HoldsCellOpt{}(SortK{}) : SortHoldsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:HoldsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IOError{}(SortK{}) : SortIOError{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IOError%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IOFile{}(SortK{}) : SortIOFile{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IOFile%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IOInt{}(SortK{}) : SortIOInt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IOInt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IOString{}(SortK{}) : SortIOString{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IOString%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Id{}(SortK{}) : SortId{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Id%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IdCell{}(SortK{}) : SortIdCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IdCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IdCellOpt{}(SortK{}) : SortIdCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IdCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Ids{}(SortK{}) : SortIds{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Ids%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'InputCell{}(SortK{}) : SortInputCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:InputCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'InputCellOpt{}(SortK{}) : SortInputCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:InputCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Int{}(SortK{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Int%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'K{}(SortK{}) : SortK{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:K%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KCell{}(SortK{}) : SortKCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KCellOpt{}(SortK{}) : SortKCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KItem{}(SortK{}) : SortKItem{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KItem%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KResult{}(SortK{}) : SortKResult{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KResult%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'List{}(SortK{}) : SortList{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:List%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'LocationCell{}(SortK{}) : SortLocationCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:LocationCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'LocationCellOpt{}(SortK{}) : SortLocationCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:LocationCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Map{}(SortK{}) : SortMap{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Map%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextLocCell{}(SortK{}) : SortNextLocCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextLocCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextLocCellOpt{}(SortK{}) : SortNextLocCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextLocCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'OutputCell{}(SortK{}) : SortOutputCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:OutputCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'OutputCellOpt{}(SortK{}) : SortOutputCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:OutputCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Set{}(SortK{}) : SortSet{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Set%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Stmt{}(SortK{}) : SortStmt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Stmt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'StoreCell{}(SortK{}) : SortStoreCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:StoreCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'StoreCellOpt{}(SortK{}) : SortStoreCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:StoreCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Stream{}(SortK{}) : SortStream{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Stream%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'String{}(SortK{}) : SortString{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:String%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TCell{}(SortK{}) : SortTCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TCellFragment{}(SortK{}) : SortTCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TCellOpt{}(SortK{}) : SortTCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TerminatedCell{}(SortK{}) : SortTerminatedCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TerminatedCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TerminatedCellOpt{}(SortK{}) : SortTerminatedCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TerminatedCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ThreadCell{}(SortK{}) : SortThreadCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ThreadCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ThreadCellFragment{}(SortK{}) : SortThreadCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ThreadCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ThreadCellSet{}(SortK{}) : SortThreadCellSet{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ThreadCellSet%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ThreadsCell{}(SortK{}) : SortThreadsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ThreadsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ThreadsCellFragment{}(SortK{}) : SortThreadsCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ThreadsCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ThreadsCellOpt{}(SortK{}) : SortThreadsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ThreadsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Val{}(SortK{}) : SortVal{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Val%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Vals{}(SortK{}) : SortVals{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Vals%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'XstackCell{}(SortK{}) : SortXstackCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:XstackCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'XstackCellOpt{}(SortK{}) : SortXstackCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:XstackCellOpt%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblrandInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("randInt"), hook{}("INT.rand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1138,18,1138,65)"), left{}(), format{}("%crandInt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}() : SortExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("111"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,18,25,32)"), left{}(), format{}("%cread%r %c(%r %c)%r"), injective{}()]
  symbol Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(69,19,69,65)"), left{}(), format{}("%crelease%r %1 %c;%r"), injective{}()]
  hooked-symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("removeAll"), hook{}("MAP.removeAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,18,333,87)"), left{}(), format{}("%cremoveAll%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(70,19,70,65)"), left{}(), format{}("%crendezvous%r %1 %c;%r"), injective{}()]
  hooked-symbol Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortString{}, SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101010101"), hook{}("STRING.replace"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1650,21,1650,146)"), left{}(), format{}("%creplace%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}()]
  hooked-symbol LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("11010101"), hook{}("STRING.replaceAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1649,21,1649,149)"), left{}(), format{}("%creplaceAll%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("11010101"), hook{}("STRING.replaceFirst"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1651,21,1651,151)"), left{}(), format{}("%creplaceFirst%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lblreturn'SClnUnds'KOOL-SYNTAX'Unds'Stmt{}() : SortStmt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), macro{}(), priorities{}(), right{}(), terminals{}("11"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,19,63,64)"), left{}(), format{}("%creturn%r %c;%r"), injective{}()]
  symbol Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,19,62,65)"), left{}(), format{}("%creturn%r %1 %c;%r"), injective{}()]
  hooked-symbol LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("rfindChar"), hook{}("STRING.rfindChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1577,18,1577,117)"), left{}(), format{}("%crfindChar%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("rfindString"), hook{}("STRING.rfind"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1566,18,1566,112)"), left{}(), format{}("%crfindString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(SortId{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("setCrntClass"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(402,20,402,36)"), left{}(), format{}("%csetCrntClass%r %c(%r %1 %c)%r"), injective{}()]
  symbol LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("setEnv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(576,20,576,31)"), left{}(), format{}("%csetEnv%r %c(%r %1 %c)%r"), injective{}()]
  hooked-symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("signExtendBitRangeInt"), hook{}("INT.signExtendBitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1105,18,1105,113)"), left{}(), format{}("%csignExtendBitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(SortList{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), smtlib{}("smt_seq_len"), terminals{}("1101"), klabel{}("sizeList"), hook{}("LIST.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(830,18,830,117)"), left{}(), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(SortMap{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("sizeMap"), hook{}("MAP.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,18,373,99)"), left{}(), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(SortSet{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("size"), hook{}("SET.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(604,18,604,76)"), left{}(), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  symbol LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("1101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,18,24,50)"), left{}(), format{}("%csizeOf%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(SortBlock{}) : SortExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,18,44,31)"), left{}(), format{}("%cspawn%r %1"), injective{}()]
  hooked-symbol LblsrandInt'LParUndsRParUnds'INT-COMMON'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("srandInt"), hook{}("INT.srand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1139,16,1139,65)"), left{}(), format{}("%csrandInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblstoreObj'Unds'KOOL'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(414,20,414,30)"), left{}(), format{}("%cstoreObj%r"), injective{}()]
  hooked-symbol LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(SortString{}, SortInt{}, SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("substrString"), hook{}("STRING.substr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1555,21,1555,117)"), left{}(), format{}("%csubstrString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}() : SortExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,18,14,25)"), left{}(), format{}("%csuper%r"), injective{}()]
  symbol Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}() : SortExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,18,13,24)"), left{}(), format{}("%cthis%r"), injective{}()]
  symbol Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(66,19,66,65)"), left{}(), format{}("%cthrow%r %1 %c;%r"), injective{}()]
  symbol Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(SortBlock{}, SortId{}, SortBlock{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1011010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,19,65,55)"), left{}(), format{}("%ctry%r %1 %ccatch%r %c(%r %2 %c)%r %3"), injective{}()]
  symbol Lblundefined'Unds'KOOL'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(145,20,145,31)"), left{}(), format{}("%cundefined%r"), injective{}()]
  hooked-symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List{}(SortList{}, SortInt{}, SortList{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("updateList"), hook{}("LIST.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(794,19,794,97)"), left{}(), format{}("%cupdateList%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("updateMap"), hook{}("MAP.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,18,324,87)"), left{}(), format{}("%cupdateMap%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("values"), hook{}("MAP.values"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(365,19,365,77)"), left{}(), format{}("%cvalues%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(SortExps{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(7,19,7,33)"), left{}(), format{}("%cvar%r %1 %c;%r"), injective{}()]
  symbol Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(SortExp{}, SortBlock{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("11010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(60,19,60,44)"), left{}(), format{}("%cwhile%r %c(%r %1 %c)%r %2"), injective{}()]
  symbol LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(SortId{}, SortStmt{}, SortK{}, SortMap{}, SortK{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("110101010101"), klabel{}("xstackFrame"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(557,20,557,48)"), left{}(), format{}("%cxstackFrame%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c,%r %5 %c)%r"), injective{}()]
  symbol Lbl'LBraUndsRBraUnds'KOOL-SYNTAX'Unds'Block'Unds'Stmt{}(SortStmt{}) : SortBlock{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(54,19,54,31)"), left{}(), format{}("%c{%r %1 %c}%r"), injective{}()]
  symbol Lbl'LBraRBraUnds'KOOL-SYNTAX'Unds'Block{}() : SortBlock{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), priorities{}(), right{}(), terminals{}("11"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,20,53,27)"), left{}(), format{}("%c{%r %c}%r"), injective{}()]
  hooked-symbol Lbl'Tild'Int'Unds'{}(SortInt{}) : SortInt{} [latex{}("\\mathop{\\sim_{\\scriptstyle\\it Int}}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsXor-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smtlib{}("notInt"), terminals{}("10"), klabel{}("~Int_"), hook{}("INT.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1038,18,1038,168)"), left{}(), format{}("%c~Int%r %1"), function{}()]

// generated axioms
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDeclarationsCell{}, SortKItem{}} (From:SortDeclarationsCell{}))) [subsort{SortDeclarationsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreCellOpt{}, SortKItem{}} (From:SortStoreCellOpt{}))) [subsort{SortStoreCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOString{}, SortKItem{}} (From:SortIOString{}))) [subsort{SortIOString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortString{}, SortKItem{}} (From:SortString{}))) [subsort{SortString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCell{}, SortKItem{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortBool{}, SortVal{}} (From:SortBool{}))) [subsort{SortBool{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFstackCell{}, SortKItem{}} (From:SortFstackCell{}))) [subsort{SortFstackCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassesCellOpt{}, SortKItem{}} (From:SortClassesCellOpt{}))) [subsort{SortClassesCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadCellSet{}, SortKItem{}} (From:SortThreadCellSet{}))) [subsort{SortThreadCellSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}} (From:SortKCellOpt{}))) [subsort{SortKCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFstackCellOpt{}, SortKItem{}} (From:SortFstackCellOpt{}))) [subsort{SortFstackCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIds{}, SortKItem{}} (From:SortIds{}))) [subsort{SortIds{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (From:SortGeneratedCounterCellOpt{}))) [subsort{SortGeneratedCounterCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKResult{}, SortKItem{}} (From:SortKResult{}))) [subsort{SortKResult{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEnvCellOpt{}, SortKItem{}} (From:SortEnvCellOpt{}))) [subsort{SortEnvCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCell{}, SortKItem{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassDataCellFragment{}, SortKItem{}} (From:SortClassDataCellFragment{}))) [subsort{SortClassDataCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellOpt{}, SortKItem{}} (From:SortTCellOpt{}))) [subsort{SortTCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortControlCell{}, SortKItem{}} (From:SortControlCell{}))) [subsort{SortControlCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortVals{}, SortKResult{}} (From:SortVals{}))) [subsort{SortVals{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassDataCellMap{}, SortKItem{}} (From:SortClassDataCellMap{}))) [subsort{SortClassDataCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextLocCellOpt{}, \equals{SortNextLocCellOpt{}, R} (Val:SortNextLocCellOpt{}, inj{SortNextLocCell{}, SortNextLocCellOpt{}} (From:SortNextLocCell{}))) [subsort{SortNextLocCell{}, SortNextLocCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBusyCellOpt{}, SortKItem{}} (From:SortBusyCellOpt{}))) [subsort{SortBusyCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadsCellFragment{}, SortKItem{}} (From:SortThreadsCellFragment{}))) [subsort{SortThreadsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortVal{}, SortKResult{}} (From:SortVal{}))) [subsort{SortVal{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOutputCellOpt{}, \equals{SortOutputCellOpt{}, R} (Val:SortOutputCellOpt{}, inj{SortOutputCell{}, SortOutputCellOpt{}} (From:SortOutputCell{}))) [subsort{SortOutputCell{}, SortOutputCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEnvStackCell{}, SortKItem{}} (From:SortEnvStackCell{}))) [subsort{SortEnvStackCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortIOError{}, SortIOInt{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocationCell{}, SortKItem{}} (From:SortLocationCell{}))) [subsort{SortLocationCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortControlCellOpt{}, SortKItem{}} (From:SortControlCellOpt{}))) [subsort{SortControlCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBaseClassCell{}, SortKItem{}} (From:SortBaseClassCell{}))) [subsort{SortBaseClassCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortThreadCellSet{}, \equals{SortThreadCellSet{}, R} (Val:SortThreadCellSet{}, inj{SortThreadCell{}, SortThreadCellSet{}} (From:SortThreadCell{}))) [subsort{SortThreadCell{}, SortThreadCellSet{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFstackCellOpt{}, \equals{SortFstackCellOpt{}, R} (Val:SortFstackCellOpt{}, inj{SortFstackCell{}, SortFstackCellOpt{}} (From:SortFstackCell{}))) [subsort{SortFstackCell{}, SortFstackCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortXstackCell{}, SortKItem{}} (From:SortXstackCell{}))) [subsort{SortXstackCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSet{}, SortKItem{}} (From:SortSet{}))) [subsort{SortSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreCell{}, SortKItem{}} (From:SortStoreCell{}))) [subsort{SortStoreCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOError{}, SortKItem{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBlock{}, SortKItem{}} (From:SortBlock{}))) [subsort{SortBlock{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocationCellOpt{}, SortKItem{}} (From:SortLocationCellOpt{}))) [subsort{SortLocationCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextLocCellOpt{}, SortKItem{}} (From:SortNextLocCellOpt{}))) [subsort{SortNextLocCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadsCell{}, SortKItem{}} (From:SortThreadsCell{}))) [subsort{SortThreadsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortInt{}, SortIOInt{}} (From:SortInt{}))) [subsort{SortInt{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOutputCellOpt{}, SortKItem{}} (From:SortOutputCellOpt{}))) [subsort{SortOutputCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, inj{SortTCell{}, SortTCellOpt{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortTCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInputCellOpt{}, SortKItem{}} (From:SortInputCellOpt{}))) [subsort{SortInputCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellFragment{}, SortKItem{}} (From:SortTCellFragment{}))) [subsort{SortTCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortString{}, SortExp{}} (From:SortString{}))) [subsort{SortString{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassDataCell{}, SortKItem{}} (From:SortClassDataCell{}))) [subsort{SortClassDataCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCrntObjCellOpt{}, \equals{SortCrntObjCellOpt{}, R} (Val:SortCrntObjCellOpt{}, inj{SortCrntObjCell{}, SortCrntObjCellOpt{}} (From:SortCrntObjCell{}))) [subsort{SortCrntObjCell{}, SortCrntObjCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBaseClassCellOpt{}, SortKItem{}} (From:SortBaseClassCellOpt{}))) [subsort{SortBaseClassCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCrntObjCellOpt{}, SortKItem{}} (From:SortCrntObjCellOpt{}))) [subsort{SortCrntObjCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEnvStackCellOpt{}, SortKItem{}} (From:SortEnvStackCellOpt{}))) [subsort{SortEnvStackCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIdCellOpt{}, \equals{SortIdCellOpt{}, R} (Val:SortIdCellOpt{}, inj{SortIdCell{}, SortIdCellOpt{}} (From:SortIdCell{}))) [subsort{SortIdCell{}, SortIdCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExps{}, SortKItem{}} (From:SortExps{}))) [subsort{SortExps{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTerminatedCell{}, SortKItem{}} (From:SortTerminatedCell{}))) [subsort{SortTerminatedCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVals{}, SortKItem{}} (From:SortVals{}))) [subsort{SortVals{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortThreadsCellOpt{}, \equals{SortThreadsCellOpt{}, R} (Val:SortThreadsCellOpt{}, inj{SortThreadsCell{}, SortThreadsCellOpt{}} (From:SortThreadsCell{}))) [subsort{SortThreadsCell{}, SortThreadsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdCellOpt{}, SortKItem{}} (From:SortIdCellOpt{}))) [subsort{SortIdCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTerminatedCellOpt{}, SortKItem{}} (From:SortTerminatedCellOpt{}))) [subsort{SortTerminatedCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStream{}, SortKItem{}} (From:SortStream{}))) [subsort{SortStream{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortHoldsCell{}, SortKItem{}} (From:SortHoldsCell{}))) [subsort{SortHoldsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOFile{}, SortKItem{}} (From:SortIOFile{}))) [subsort{SortIOFile{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortInt{}, SortVal{}} (From:SortInt{}))) [subsort{SortInt{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}} (From:SortGeneratedTopCell{}))) [subsort{SortGeneratedTopCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDeclarationsCellOpt{}, \equals{SortDeclarationsCellOpt{}, R} (Val:SortDeclarationsCellOpt{}, inj{SortDeclarationsCell{}, SortDeclarationsCellOpt{}} (From:SortDeclarationsCell{}))) [subsort{SortDeclarationsCell{}, SortDeclarationsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCrntClassCell{}, SortKItem{}} (From:SortCrntClassCell{}))) [subsort{SortCrntClassCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBusyCellOpt{}, \equals{SortBusyCellOpt{}, R} (Val:SortBusyCellOpt{}, inj{SortBusyCell{}, SortBusyCellOpt{}} (From:SortBusyCell{}))) [subsort{SortBusyCell{}, SortBusyCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassNameCellOpt{}, SortKItem{}} (From:SortClassNameCellOpt{}))) [subsort{SortClassNameCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortHoldsCellOpt{}, \equals{SortHoldsCellOpt{}, R} (Val:SortHoldsCellOpt{}, inj{SortHoldsCell{}, SortHoldsCellOpt{}} (From:SortHoldsCell{}))) [subsort{SortHoldsCell{}, SortHoldsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortEnvCellOpt{}, \equals{SortEnvCellOpt{}, R} (Val:SortEnvCellOpt{}, inj{SortEnvCell{}, SortEnvCellOpt{}} (From:SortEnvCell{}))) [subsort{SortEnvCell{}, SortEnvCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOInt{}, SortKItem{}} (From:SortIOInt{}))) [subsort{SortIOInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStoreCellOpt{}, \equals{SortStoreCellOpt{}, R} (Val:SortStoreCellOpt{}, inj{SortStoreCell{}, SortStoreCellOpt{}} (From:SortStoreCell{}))) [subsort{SortStoreCell{}, SortStoreCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortClassesCellOpt{}, \equals{SortClassesCellOpt{}, R} (Val:SortClassesCellOpt{}, inj{SortClassesCell{}, SortClassesCellOpt{}} (From:SortClassesCell{}))) [subsort{SortClassesCell{}, SortClassesCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortHoldsCellOpt{}, SortKItem{}} (From:SortHoldsCellOpt{}))) [subsort{SortHoldsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCrntObjCellFragment{}, SortKItem{}} (From:SortCrntObjCellFragment{}))) [subsort{SortCrntObjCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCrntClassCellOpt{}, \equals{SortCrntClassCellOpt{}, R} (Val:SortCrntClassCellOpt{}, inj{SortCrntClassCell{}, SortCrntClassCellOpt{}} (From:SortCrntClassCell{}))) [subsort{SortCrntClassCell{}, SortCrntClassCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInputCell{}, SortKItem{}} (From:SortInputCell{}))) [subsort{SortInputCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBaseClassCellOpt{}, \equals{SortBaseClassCellOpt{}, R} (Val:SortBaseClassCellOpt{}, inj{SortBaseClassCell{}, SortBaseClassCellOpt{}} (From:SortBaseClassCell{}))) [subsort{SortBaseClassCell{}, SortBaseClassCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBusyCell{}, SortKItem{}} (From:SortBusyCell{}))) [subsort{SortBusyCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTerminatedCellOpt{}, \equals{SortTerminatedCellOpt{}, R} (Val:SortTerminatedCellOpt{}, inj{SortTerminatedCell{}, SortTerminatedCellOpt{}} (From:SortTerminatedCell{}))) [subsort{SortTerminatedCell{}, SortTerminatedCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassNameCell{}, SortKItem{}} (From:SortClassNameCell{}))) [subsort{SortClassNameCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLocationCellOpt{}, \equals{SortLocationCellOpt{}, R} (Val:SortLocationCellOpt{}, inj{SortLocationCell{}, SortLocationCellOpt{}} (From:SortLocationCell{}))) [subsort{SortLocationCell{}, SortLocationCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortList{}, SortKItem{}} (From:SortList{}))) [subsort{SortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKConfigVar{}, SortKItem{}} (From:SortKConfigVar{}))) [subsort{SortKConfigVar{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortString{}, SortIOString{}} (From:SortString{}))) [subsort{SortString{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortBlock{}, SortStmt{}} (From:SortBlock{}))) [subsort{SortBlock{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassesCell{}, SortKItem{}} (From:SortClassesCell{}))) [subsort{SortClassesCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortId{}, SortKItem{}} (From:SortId{}))) [subsort{SortId{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFloat{}, SortKItem{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBool{}, SortKItem{}} (From:SortBool{}))) [subsort{SortBool{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortVal{}, SortExp{}} (From:SortVal{}))) [subsort{SortVal{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOutputCell{}, SortKItem{}} (From:SortOutputCell{}))) [subsort{SortOutputCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadsCellOpt{}, SortKItem{}} (From:SortThreadsCellOpt{}))) [subsort{SortThreadsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortId{}, SortExp{}} (From:SortId{}))) [subsort{SortId{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVal{}, SortKItem{}} (From:SortVal{}))) [subsort{SortVal{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortXstackCellOpt{}, \equals{SortXstackCellOpt{}, R} (Val:SortXstackCellOpt{}, inj{SortXstackCell{}, SortXstackCellOpt{}} (From:SortXstackCell{}))) [subsort{SortXstackCell{}, SortXstackCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortEnvStackCellOpt{}, \equals{SortEnvStackCellOpt{}, R} (Val:SortEnvStackCellOpt{}, inj{SortEnvStackCell{}, SortEnvStackCellOpt{}} (From:SortEnvStackCell{}))) [subsort{SortEnvStackCell{}, SortEnvStackCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortClassDataCellMap{}, \equals{SortClassDataCellMap{}, R} (Val:SortClassDataCellMap{}, inj{SortClassDataCell{}, SortClassDataCellMap{}} (From:SortClassDataCell{}))) [subsort{SortClassDataCell{}, SortClassDataCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassesCellFragment{}, SortKItem{}} (From:SortClassesCellFragment{}))) [subsort{SortClassesCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInt{}, SortKItem{}} (From:SortInt{}))) [subsort{SortInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (From:SortGeneratedTopCellFragment{}))) [subsort{SortGeneratedTopCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortControlCellFragment{}, SortKItem{}} (From:SortControlCellFragment{}))) [subsort{SortControlCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExp{}, SortKItem{}} (From:SortExp{}))) [subsort{SortExp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadCell{}, SortKItem{}} (From:SortThreadCell{}))) [subsort{SortThreadCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEnvCell{}, SortKItem{}} (From:SortEnvCell{}))) [subsort{SortEnvCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCrntClassCellOpt{}, SortKItem{}} (From:SortCrntClassCellOpt{}))) [subsort{SortCrntClassCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdCell{}, SortKItem{}} (From:SortIdCell{}))) [subsort{SortIdCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCrntObjCell{}, SortKItem{}} (From:SortCrntObjCell{}))) [subsort{SortCrntObjCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDeclarationsCellOpt{}, SortKItem{}} (From:SortDeclarationsCellOpt{}))) [subsort{SortDeclarationsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortString{}, SortVal{}} (From:SortString{}))) [subsort{SortString{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, inj{SortVals{}, SortExps{}} (From:SortVals{}))) [subsort{SortVals{}, SortExps{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStmt{}, SortKItem{}} (From:SortStmt{}))) [subsort{SortStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMap{}, SortKItem{}} (From:SortMap{}))) [subsort{SortMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortXstackCellOpt{}, SortKItem{}} (From:SortXstackCellOpt{}))) [subsort{SortXstackCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortInt{}, SortExp{}} (From:SortInt{}))) [subsort{SortInt{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextLocCell{}, SortKItem{}} (From:SortNextLocCell{}))) [subsort{SortNextLocCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortIOError{}, SortIOString{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadCellFragment{}, SortKItem{}} (From:SortThreadCellFragment{}))) [subsort{SortThreadCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortBool{}, SortExp{}} (From:SortBool{}))) [subsort{SortBool{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, inj{SortIOError{}, SortIOFile{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOFile{}}()] // subsort
  axiom{R} \exists{R} (Val:SortClassNameCellOpt{}, \equals{SortClassNameCellOpt{}, R} (Val:SortClassNameCellOpt{}, inj{SortClassNameCell{}, SortClassNameCellOpt{}} (From:SortClassNameCell{}))) [subsort{SortClassNameCell{}, SortClassNameCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortControlCellOpt{}, \equals{SortControlCellOpt{}, R} (Val:SortControlCellOpt{}, inj{SortControlCell{}, SortControlCellOpt{}} (From:SortControlCell{}))) [subsort{SortControlCell{}, SortControlCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInputCellOpt{}, \equals{SortInputCellOpt{}, R} (Val:SortInputCellOpt{}, inj{SortInputCell{}, SortInputCellOpt{}} (From:SortInputCell{}))) [subsort{SortInputCell{}, SortInputCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(Y0:SortId{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'E2BIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EACCES{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EACCES{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRINUSE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRNOTAVAIL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAGAIN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EALREADY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBADF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBUSY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECHILD{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNABORTED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNREFUSED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDEADLK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDESTADDRREQ{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDOM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EEXIST{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFAULT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFBIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINPROGRESS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINTR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINVAL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ELOOP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMLINK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMSGSIZE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENAMETOOLONG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOBUFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENODEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOENT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOEXEC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOLCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOMEM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOPROTOOPT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSPC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSYS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTEMPTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTSOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENXIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOPNOTSUPP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOVERFLOW{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPERM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTONOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTOTYPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ERANGE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EROFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESHUTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESOCKTNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESRCH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETIMEDOUT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETOOMANYREFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EWOULDBLOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EXDEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EXDEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(Y0:SortK{})), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(Y0:SortK{})), Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{})), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R, SortSort} \exists{R} (Val:SortSort, \equals{SortSort, R} (Val:SortSort, Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{})), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'log{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'logToFile{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{})), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(X0:SortString{}, X1:SortString{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{})), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortString{}} (X1:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'systemResult{}(K0:SortInt{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{})), Lbl'Hash'systemResult{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortString{}} (X1:SortString{}, Y1:SortString{}), \and{SortString{}} (X2:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, Lbl'Hash'tempFile{}(K0:SortString{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOFile{}} (\and{SortIOFile{}} (Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}), Lbl'Hash'tempFile{}(Y0:SortString{}, Y1:SortInt{})), Lbl'Hash'tempFile{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'trace{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'traceK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'unknownIOError{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'unknownIOError{}(X0:SortInt{}), Lbl'Hash'unknownIOError{}(Y0:SortInt{})), Lbl'Hash'unknownIOError{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(K0:SortId{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(Y0:SortId{}, Y1:SortExp{})), Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(K0:SortMap{}, K1:SortK{}, K2:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortK{}), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortK{})), Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}), \and{SortK{}} (X2:SortK{}, Y2:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(K0:SortId{}, K1:SortStmt{}, K2:SortK{}, K3:SortMap{}, K4:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(X0:SortId{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{})), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortStmt{}} (X1:SortStmt{}, Y1:SortStmt{}), \and{SortK{}} (X2:SortK{}, Y2:SortK{}), \and{SortMap{}} (X3:SortMap{}, Y3:SortMap{}), \and{SortK{}} (X4:SortK{}, Y4:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(X0:SortId{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortK{}), LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(X0:SortId{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortK{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(X0:SortId{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortK{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(X0:SortId{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortK{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(X0:SortId{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(X0:SortId{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(X0:SortId{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(X0:SortId{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(X0:SortId{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(X0:SortId{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(X0:SortId{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Stop'List{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}())) [functional{}()] // functional
  axiom{}\not{SortExps{}} (\and{SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIds{}, \equals{SortIds{}, R} (Val:SortIds{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids{}())) [functional{}()] // functional
  axiom{}\not{SortIds{}} (\and{SortIds{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids{}(), Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids{}(Y0:SortId{}, Y1:SortIds{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVals{}, \equals{SortVals{}, R} (Val:SortVals{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())) [functional{}()] // functional
  axiom{}\not{SortVals{}} (\and{SortVals{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}(), Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(Y0:SortVal{}, Y1:SortVals{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLocationCell{}, \equals{SortLocationCell{}, R} (Val:SortLocationCell{}, Lbl'Stop'LocationCell{}())) [functional{}()] // functional
  axiom{}\not{SortLocationCell{}} (\and{SortLocationCell{}} (Lbl'Stop'LocationCell{}(), Lbl'-LT-'location'-GT-'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Stop'Map{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Stop'Set{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCell{}, \equals{SortTCell{}, R} (Val:SortTCell{}, Lbl'-LT-'T'-GT-'{}(K0:SortThreadsCell{}, K1:SortStoreCell{}, K2:SortBusyCell{}, K3:SortTerminatedCell{}, K4:SortInputCell{}, K5:SortOutputCell{}, K6:SortNextLocCell{}, K7:SortClassesCell{}))) [functional{}()] // functional
  axiom{}\implies{SortTCell{}} (\and{SortTCell{}} (Lbl'-LT-'T'-GT-'{}(X0:SortThreadsCell{}, X1:SortStoreCell{}, X2:SortBusyCell{}, X3:SortTerminatedCell{}, X4:SortInputCell{}, X5:SortOutputCell{}, X6:SortNextLocCell{}, X7:SortClassesCell{}), Lbl'-LT-'T'-GT-'{}(Y0:SortThreadsCell{}, Y1:SortStoreCell{}, Y2:SortBusyCell{}, Y3:SortTerminatedCell{}, Y4:SortInputCell{}, Y5:SortOutputCell{}, Y6:SortNextLocCell{}, Y7:SortClassesCell{})), Lbl'-LT-'T'-GT-'{}(\and{SortThreadsCell{}} (X0:SortThreadsCell{}, Y0:SortThreadsCell{}), \and{SortStoreCell{}} (X1:SortStoreCell{}, Y1:SortStoreCell{}), \and{SortBusyCell{}} (X2:SortBusyCell{}, Y2:SortBusyCell{}), \and{SortTerminatedCell{}} (X3:SortTerminatedCell{}, Y3:SortTerminatedCell{}), \and{SortInputCell{}} (X4:SortInputCell{}, Y4:SortInputCell{}), \and{SortOutputCell{}} (X5:SortOutputCell{}, Y5:SortOutputCell{}), \and{SortNextLocCell{}} (X6:SortNextLocCell{}, Y6:SortNextLocCell{}), \and{SortClassesCell{}} (X7:SortClassesCell{}, Y7:SortClassesCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTCellFragment{}, \equals{SortTCellFragment{}, R} (Val:SortTCellFragment{}, Lbl'-LT-'T'-GT-'-fragment{}(K0:SortThreadsCellOpt{}, K1:SortStoreCellOpt{}, K2:SortBusyCellOpt{}, K3:SortTerminatedCellOpt{}, K4:SortInputCellOpt{}, K5:SortOutputCellOpt{}, K6:SortNextLocCellOpt{}, K7:SortClassesCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortTCellFragment{}} (\and{SortTCellFragment{}} (Lbl'-LT-'T'-GT-'-fragment{}(X0:SortThreadsCellOpt{}, X1:SortStoreCellOpt{}, X2:SortBusyCellOpt{}, X3:SortTerminatedCellOpt{}, X4:SortInputCellOpt{}, X5:SortOutputCellOpt{}, X6:SortNextLocCellOpt{}, X7:SortClassesCellOpt{}), Lbl'-LT-'T'-GT-'-fragment{}(Y0:SortThreadsCellOpt{}, Y1:SortStoreCellOpt{}, Y2:SortBusyCellOpt{}, Y3:SortTerminatedCellOpt{}, Y4:SortInputCellOpt{}, Y5:SortOutputCellOpt{}, Y6:SortNextLocCellOpt{}, Y7:SortClassesCellOpt{})), Lbl'-LT-'T'-GT-'-fragment{}(\and{SortThreadsCellOpt{}} (X0:SortThreadsCellOpt{}, Y0:SortThreadsCellOpt{}), \and{SortStoreCellOpt{}} (X1:SortStoreCellOpt{}, Y1:SortStoreCellOpt{}), \and{SortBusyCellOpt{}} (X2:SortBusyCellOpt{}, Y2:SortBusyCellOpt{}), \and{SortTerminatedCellOpt{}} (X3:SortTerminatedCellOpt{}, Y3:SortTerminatedCellOpt{}), \and{SortInputCellOpt{}} (X4:SortInputCellOpt{}, Y4:SortInputCellOpt{}), \and{SortOutputCellOpt{}} (X5:SortOutputCellOpt{}, Y5:SortOutputCellOpt{}), \and{SortNextLocCellOpt{}} (X6:SortNextLocCellOpt{}, Y6:SortNextLocCellOpt{}), \and{SortClassesCellOpt{}} (X7:SortClassesCellOpt{}, Y7:SortClassesCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBaseClassCell{}, \equals{SortBaseClassCell{}, R} (Val:SortBaseClassCell{}, Lbl'-LT-'baseClass'-GT-'{}(K0:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortBaseClassCell{}} (\and{SortBaseClassCell{}} (Lbl'-LT-'baseClass'-GT-'{}(X0:SortId{}), Lbl'-LT-'baseClass'-GT-'{}(Y0:SortId{})), Lbl'-LT-'baseClass'-GT-'{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBusyCell{}, \equals{SortBusyCell{}, R} (Val:SortBusyCell{}, Lbl'-LT-'busy'-GT-'{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortBusyCell{}} (\and{SortBusyCell{}} (Lbl'-LT-'busy'-GT-'{}(X0:SortSet{}), Lbl'-LT-'busy'-GT-'{}(Y0:SortSet{})), Lbl'-LT-'busy'-GT-'{}(\and{SortSet{}} (X0:SortSet{}, Y0:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortClassDataCell{}, \equals{SortClassDataCell{}, R} (Val:SortClassDataCell{}, Lbl'-LT-'classData'-GT-'{}(K0:SortClassNameCell{}, K1:SortBaseClassCell{}, K2:SortDeclarationsCell{}))) [functional{}()] // functional
  axiom{}\implies{SortClassDataCell{}} (\and{SortClassDataCell{}} (Lbl'-LT-'classData'-GT-'{}(X0:SortClassNameCell{}, X1:SortBaseClassCell{}, X2:SortDeclarationsCell{}), Lbl'-LT-'classData'-GT-'{}(Y0:SortClassNameCell{}, Y1:SortBaseClassCell{}, Y2:SortDeclarationsCell{})), Lbl'-LT-'classData'-GT-'{}(\and{SortClassNameCell{}} (X0:SortClassNameCell{}, Y0:SortClassNameCell{}), \and{SortBaseClassCell{}} (X1:SortBaseClassCell{}, Y1:SortBaseClassCell{}), \and{SortDeclarationsCell{}} (X2:SortDeclarationsCell{}, Y2:SortDeclarationsCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortClassDataCellFragment{}, \equals{SortClassDataCellFragment{}, R} (Val:SortClassDataCellFragment{}, Lbl'-LT-'classData'-GT-'-fragment{}(K0:SortClassNameCellOpt{}, K1:SortBaseClassCellOpt{}, K2:SortDeclarationsCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortClassDataCellFragment{}} (\and{SortClassDataCellFragment{}} (Lbl'-LT-'classData'-GT-'-fragment{}(X0:SortClassNameCellOpt{}, X1:SortBaseClassCellOpt{}, X2:SortDeclarationsCellOpt{}), Lbl'-LT-'classData'-GT-'-fragment{}(Y0:SortClassNameCellOpt{}, Y1:SortBaseClassCellOpt{}, Y2:SortDeclarationsCellOpt{})), Lbl'-LT-'classData'-GT-'-fragment{}(\and{SortClassNameCellOpt{}} (X0:SortClassNameCellOpt{}, Y0:SortClassNameCellOpt{}), \and{SortBaseClassCellOpt{}} (X1:SortBaseClassCellOpt{}, Y1:SortBaseClassCellOpt{}), \and{SortDeclarationsCellOpt{}} (X2:SortDeclarationsCellOpt{}, Y2:SortDeclarationsCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortClassNameCell{}, \equals{SortClassNameCell{}, R} (Val:SortClassNameCell{}, Lbl'-LT-'className'-GT-'{}(K0:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortClassNameCell{}} (\and{SortClassNameCell{}} (Lbl'-LT-'className'-GT-'{}(X0:SortId{}), Lbl'-LT-'className'-GT-'{}(Y0:SortId{})), Lbl'-LT-'className'-GT-'{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortClassesCell{}, \equals{SortClassesCell{}, R} (Val:SortClassesCell{}, Lbl'-LT-'classes'-GT-'{}(K0:SortClassDataCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortClassesCell{}} (\and{SortClassesCell{}} (Lbl'-LT-'classes'-GT-'{}(X0:SortClassDataCellMap{}), Lbl'-LT-'classes'-GT-'{}(Y0:SortClassDataCellMap{})), Lbl'-LT-'classes'-GT-'{}(\and{SortClassDataCellMap{}} (X0:SortClassDataCellMap{}, Y0:SortClassDataCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortClassesCellFragment{}, \equals{SortClassesCellFragment{}, R} (Val:SortClassesCellFragment{}, Lbl'-LT-'classes'-GT-'-fragment{}(K0:SortClassDataCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortClassesCellFragment{}} (\and{SortClassesCellFragment{}} (Lbl'-LT-'classes'-GT-'-fragment{}(X0:SortClassDataCellMap{}), Lbl'-LT-'classes'-GT-'-fragment{}(Y0:SortClassDataCellMap{})), Lbl'-LT-'classes'-GT-'-fragment{}(\and{SortClassDataCellMap{}} (X0:SortClassDataCellMap{}, Y0:SortClassDataCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortControlCell{}, \equals{SortControlCell{}, R} (Val:SortControlCell{}, Lbl'-LT-'control'-GT-'{}(K0:SortFstackCell{}, K1:SortXstackCell{}, K2:SortCrntObjCell{}))) [functional{}()] // functional
  axiom{}\implies{SortControlCell{}} (\and{SortControlCell{}} (Lbl'-LT-'control'-GT-'{}(X0:SortFstackCell{}, X1:SortXstackCell{}, X2:SortCrntObjCell{}), Lbl'-LT-'control'-GT-'{}(Y0:SortFstackCell{}, Y1:SortXstackCell{}, Y2:SortCrntObjCell{})), Lbl'-LT-'control'-GT-'{}(\and{SortFstackCell{}} (X0:SortFstackCell{}, Y0:SortFstackCell{}), \and{SortXstackCell{}} (X1:SortXstackCell{}, Y1:SortXstackCell{}), \and{SortCrntObjCell{}} (X2:SortCrntObjCell{}, Y2:SortCrntObjCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortControlCellFragment{}, \equals{SortControlCellFragment{}, R} (Val:SortControlCellFragment{}, Lbl'-LT-'control'-GT-'-fragment{}(K0:SortFstackCellOpt{}, K1:SortXstackCellOpt{}, K2:SortCrntObjCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortControlCellFragment{}} (\and{SortControlCellFragment{}} (Lbl'-LT-'control'-GT-'-fragment{}(X0:SortFstackCellOpt{}, X1:SortXstackCellOpt{}, X2:SortCrntObjCellOpt{}), Lbl'-LT-'control'-GT-'-fragment{}(Y0:SortFstackCellOpt{}, Y1:SortXstackCellOpt{}, Y2:SortCrntObjCellOpt{})), Lbl'-LT-'control'-GT-'-fragment{}(\and{SortFstackCellOpt{}} (X0:SortFstackCellOpt{}, Y0:SortFstackCellOpt{}), \and{SortXstackCellOpt{}} (X1:SortXstackCellOpt{}, Y1:SortXstackCellOpt{}), \and{SortCrntObjCellOpt{}} (X2:SortCrntObjCellOpt{}, Y2:SortCrntObjCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCrntClassCell{}, \equals{SortCrntClassCell{}, R} (Val:SortCrntClassCell{}, Lbl'-LT-'crntClass'-GT-'{}(K0:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortCrntClassCell{}} (\and{SortCrntClassCell{}} (Lbl'-LT-'crntClass'-GT-'{}(X0:SortId{}), Lbl'-LT-'crntClass'-GT-'{}(Y0:SortId{})), Lbl'-LT-'crntClass'-GT-'{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCrntObjCell{}, \equals{SortCrntObjCell{}, R} (Val:SortCrntObjCell{}, Lbl'-LT-'crntObj'-GT-'{}(K0:SortCrntClassCell{}, K1:SortEnvStackCell{}, K2:SortLocationCell{}))) [functional{}()] // functional
  axiom{}\implies{SortCrntObjCell{}} (\and{SortCrntObjCell{}} (Lbl'-LT-'crntObj'-GT-'{}(X0:SortCrntClassCell{}, X1:SortEnvStackCell{}, X2:SortLocationCell{}), Lbl'-LT-'crntObj'-GT-'{}(Y0:SortCrntClassCell{}, Y1:SortEnvStackCell{}, Y2:SortLocationCell{})), Lbl'-LT-'crntObj'-GT-'{}(\and{SortCrntClassCell{}} (X0:SortCrntClassCell{}, Y0:SortCrntClassCell{}), \and{SortEnvStackCell{}} (X1:SortEnvStackCell{}, Y1:SortEnvStackCell{}), \and{SortLocationCell{}} (X2:SortLocationCell{}, Y2:SortLocationCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCrntObjCellFragment{}, \equals{SortCrntObjCellFragment{}, R} (Val:SortCrntObjCellFragment{}, Lbl'-LT-'crntObj'-GT-'-fragment{}(K0:SortCrntClassCellOpt{}, K1:SortEnvStackCellOpt{}, K2:SortLocationCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortCrntObjCellFragment{}} (\and{SortCrntObjCellFragment{}} (Lbl'-LT-'crntObj'-GT-'-fragment{}(X0:SortCrntClassCellOpt{}, X1:SortEnvStackCellOpt{}, X2:SortLocationCellOpt{}), Lbl'-LT-'crntObj'-GT-'-fragment{}(Y0:SortCrntClassCellOpt{}, Y1:SortEnvStackCellOpt{}, Y2:SortLocationCellOpt{})), Lbl'-LT-'crntObj'-GT-'-fragment{}(\and{SortCrntClassCellOpt{}} (X0:SortCrntClassCellOpt{}, Y0:SortCrntClassCellOpt{}), \and{SortEnvStackCellOpt{}} (X1:SortEnvStackCellOpt{}, Y1:SortEnvStackCellOpt{}), \and{SortLocationCellOpt{}} (X2:SortLocationCellOpt{}, Y2:SortLocationCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortDeclarationsCell{}, \equals{SortDeclarationsCell{}, R} (Val:SortDeclarationsCell{}, Lbl'-LT-'declarations'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortDeclarationsCell{}} (\and{SortDeclarationsCell{}} (Lbl'-LT-'declarations'-GT-'{}(X0:SortK{}), Lbl'-LT-'declarations'-GT-'{}(Y0:SortK{})), Lbl'-LT-'declarations'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortEnvCell{}, \equals{SortEnvCell{}, R} (Val:SortEnvCell{}, Lbl'-LT-'env'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortEnvCell{}} (\and{SortEnvCell{}} (Lbl'-LT-'env'-GT-'{}(X0:SortMap{}), Lbl'-LT-'env'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'env'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortEnvStackCell{}, \equals{SortEnvStackCell{}, R} (Val:SortEnvStackCell{}, Lbl'-LT-'envStack'-GT-'{}(K0:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortEnvStackCell{}} (\and{SortEnvStackCell{}} (Lbl'-LT-'envStack'-GT-'{}(X0:SortList{}), Lbl'-LT-'envStack'-GT-'{}(Y0:SortList{})), Lbl'-LT-'envStack'-GT-'{}(\and{SortList{}} (X0:SortList{}, Y0:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFstackCell{}, \equals{SortFstackCell{}, R} (Val:SortFstackCell{}, Lbl'-LT-'fstack'-GT-'{}(K0:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortFstackCell{}} (\and{SortFstackCell{}} (Lbl'-LT-'fstack'-GT-'{}(X0:SortList{}), Lbl'-LT-'fstack'-GT-'{}(Y0:SortList{})), Lbl'-LT-'fstack'-GT-'{}(\and{SortList{}} (X0:SortList{}, Y0:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedCounterCell{}} (\and{SortGeneratedCounterCell{}} (Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{}), Lbl'-LT-'generatedCounter'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'generatedCounter'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R} (Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortTCell{}, K1:SortGeneratedCounterCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCell{}} (\and{SortGeneratedTopCell{}} (Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}), Lbl'-LT-'generatedTop'-GT-'{}(Y0:SortTCell{}, Y1:SortGeneratedCounterCell{})), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortTCell{}} (X0:SortTCell{}, Y0:SortTCell{}), \and{SortGeneratedCounterCell{}} (X1:SortGeneratedCounterCell{}, Y1:SortGeneratedCounterCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R} (Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortTCellOpt{}, K1:SortGeneratedCounterCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCellFragment{}} (\and{SortGeneratedTopCellFragment{}} (Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}), Lbl'-LT-'generatedTop'-GT-'-fragment{}(Y0:SortTCellOpt{}, Y1:SortGeneratedCounterCellOpt{})), Lbl'-LT-'generatedTop'-GT-'-fragment{}(\and{SortTCellOpt{}} (X0:SortTCellOpt{}, Y0:SortTCellOpt{}), \and{SortGeneratedCounterCellOpt{}} (X1:SortGeneratedCounterCellOpt{}, Y1:SortGeneratedCounterCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortHoldsCell{}, \equals{SortHoldsCell{}, R} (Val:SortHoldsCell{}, Lbl'-LT-'holds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortHoldsCell{}} (\and{SortHoldsCell{}} (Lbl'-LT-'holds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'holds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'holds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIdCell{}, \equals{SortIdCell{}, R} (Val:SortIdCell{}, Lbl'-LT-'id'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIdCell{}} (\and{SortIdCell{}} (Lbl'-LT-'id'-GT-'{}(X0:SortInt{}), Lbl'-LT-'id'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'id'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInputCell{}, \equals{SortInputCell{}, R} (Val:SortInputCell{}, Lbl'-LT-'input'-GT-'{}(K0:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortInputCell{}} (\and{SortInputCell{}} (Lbl'-LT-'input'-GT-'{}(X0:SortList{}), Lbl'-LT-'input'-GT-'{}(Y0:SortList{})), Lbl'-LT-'input'-GT-'{}(\and{SortList{}} (X0:SortList{}, Y0:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKCell{}, \equals{SortKCell{}, R} (Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKCell{}} (\and{SortKCell{}} (Lbl'-LT-'k'-GT-'{}(X0:SortK{}), Lbl'-LT-'k'-GT-'{}(Y0:SortK{})), Lbl'-LT-'k'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLocationCell{}, \equals{SortLocationCell{}, R} (Val:SortLocationCell{}, Lbl'-LT-'location'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortLocationCell{}} (\and{SortLocationCell{}} (Lbl'-LT-'location'-GT-'{}(X0:SortK{}), Lbl'-LT-'location'-GT-'{}(Y0:SortK{})), Lbl'-LT-'location'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextLocCell{}, \equals{SortNextLocCell{}, R} (Val:SortNextLocCell{}, Lbl'-LT-'nextLoc'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextLocCell{}} (\and{SortNextLocCell{}} (Lbl'-LT-'nextLoc'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextLoc'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextLoc'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortOutputCell{}, \equals{SortOutputCell{}, R} (Val:SortOutputCell{}, Lbl'-LT-'output'-GT-'{}(K0:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortOutputCell{}} (\and{SortOutputCell{}} (Lbl'-LT-'output'-GT-'{}(X0:SortList{}), Lbl'-LT-'output'-GT-'{}(Y0:SortList{})), Lbl'-LT-'output'-GT-'{}(\and{SortList{}} (X0:SortList{}, Y0:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStoreCell{}, \equals{SortStoreCell{}, R} (Val:SortStoreCell{}, Lbl'-LT-'store'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortStoreCell{}} (\and{SortStoreCell{}} (Lbl'-LT-'store'-GT-'{}(X0:SortMap{}), Lbl'-LT-'store'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'store'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTerminatedCell{}, \equals{SortTerminatedCell{}, R} (Val:SortTerminatedCell{}, Lbl'-LT-'terminated'-GT-'{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortTerminatedCell{}} (\and{SortTerminatedCell{}} (Lbl'-LT-'terminated'-GT-'{}(X0:SortSet{}), Lbl'-LT-'terminated'-GT-'{}(Y0:SortSet{})), Lbl'-LT-'terminated'-GT-'{}(\and{SortSet{}} (X0:SortSet{}, Y0:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortThreadCell{}, \equals{SortThreadCell{}, R} (Val:SortThreadCell{}, Lbl'-LT-'thread'-GT-'{}(K0:SortKCell{}, K1:SortControlCell{}, K2:SortEnvCell{}, K3:SortHoldsCell{}, K4:SortIdCell{}))) [functional{}()] // functional
  axiom{}\implies{SortThreadCell{}} (\and{SortThreadCell{}} (Lbl'-LT-'thread'-GT-'{}(X0:SortKCell{}, X1:SortControlCell{}, X2:SortEnvCell{}, X3:SortHoldsCell{}, X4:SortIdCell{}), Lbl'-LT-'thread'-GT-'{}(Y0:SortKCell{}, Y1:SortControlCell{}, Y2:SortEnvCell{}, Y3:SortHoldsCell{}, Y4:SortIdCell{})), Lbl'-LT-'thread'-GT-'{}(\and{SortKCell{}} (X0:SortKCell{}, Y0:SortKCell{}), \and{SortControlCell{}} (X1:SortControlCell{}, Y1:SortControlCell{}), \and{SortEnvCell{}} (X2:SortEnvCell{}, Y2:SortEnvCell{}), \and{SortHoldsCell{}} (X3:SortHoldsCell{}, Y3:SortHoldsCell{}), \and{SortIdCell{}} (X4:SortIdCell{}, Y4:SortIdCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortThreadCellFragment{}, \equals{SortThreadCellFragment{}, R} (Val:SortThreadCellFragment{}, Lbl'-LT-'thread'-GT-'-fragment{}(K0:SortKCellOpt{}, K1:SortControlCellOpt{}, K2:SortEnvCellOpt{}, K3:SortHoldsCellOpt{}, K4:SortIdCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortThreadCellFragment{}} (\and{SortThreadCellFragment{}} (Lbl'-LT-'thread'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortControlCellOpt{}, X2:SortEnvCellOpt{}, X3:SortHoldsCellOpt{}, X4:SortIdCellOpt{}), Lbl'-LT-'thread'-GT-'-fragment{}(Y0:SortKCellOpt{}, Y1:SortControlCellOpt{}, Y2:SortEnvCellOpt{}, Y3:SortHoldsCellOpt{}, Y4:SortIdCellOpt{})), Lbl'-LT-'thread'-GT-'-fragment{}(\and{SortKCellOpt{}} (X0:SortKCellOpt{}, Y0:SortKCellOpt{}), \and{SortControlCellOpt{}} (X1:SortControlCellOpt{}, Y1:SortControlCellOpt{}), \and{SortEnvCellOpt{}} (X2:SortEnvCellOpt{}, Y2:SortEnvCellOpt{}), \and{SortHoldsCellOpt{}} (X3:SortHoldsCellOpt{}, Y3:SortHoldsCellOpt{}), \and{SortIdCellOpt{}} (X4:SortIdCellOpt{}, Y4:SortIdCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortThreadsCell{}, \equals{SortThreadsCell{}, R} (Val:SortThreadsCell{}, Lbl'-LT-'threads'-GT-'{}(K0:SortThreadCellSet{}))) [functional{}()] // functional
  axiom{}\implies{SortThreadsCell{}} (\and{SortThreadsCell{}} (Lbl'-LT-'threads'-GT-'{}(X0:SortThreadCellSet{}), Lbl'-LT-'threads'-GT-'{}(Y0:SortThreadCellSet{})), Lbl'-LT-'threads'-GT-'{}(\and{SortThreadCellSet{}} (X0:SortThreadCellSet{}, Y0:SortThreadCellSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortThreadsCellFragment{}, \equals{SortThreadsCellFragment{}, R} (Val:SortThreadsCellFragment{}, Lbl'-LT-'threads'-GT-'-fragment{}(K0:SortThreadCellSet{}))) [functional{}()] // functional
  axiom{}\implies{SortThreadsCellFragment{}} (\and{SortThreadsCellFragment{}} (Lbl'-LT-'threads'-GT-'-fragment{}(X0:SortThreadCellSet{}), Lbl'-LT-'threads'-GT-'-fragment{}(Y0:SortThreadCellSet{})), Lbl'-LT-'threads'-GT-'-fragment{}(\and{SortThreadCellSet{}} (X0:SortThreadCellSet{}, Y0:SortThreadCellSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortXstackCell{}, \equals{SortXstackCell{}, R} (Val:SortXstackCell{}, Lbl'-LT-'xstack'-GT-'{}(K0:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortXstackCell{}} (\and{SortXstackCell{}} (Lbl'-LT-'xstack'-GT-'{}(X0:SortList{}), Lbl'-LT-'xstack'-GT-'{}(Y0:SortList{})), Lbl'-LT-'xstack'-GT-'{}(\and{SortList{}} (X0:SortList{}, Y0:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblClassDataCellMap'Coln'in'Unds'keys{}(K0:SortClassNameCell{}, K1:SortClassDataCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortClassNameCell{}, \equals{SortClassNameCell{}, R} (Val:SortClassNameCell{}, LblClassDataCellMapKey{}(K0:SortClassDataCell{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblListItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortInt{}, R} (Lbl'UndsAnd-'Int'Unds'{}(K1:SortInt{},K2:SortInt{}),Lbl'UndsAnd-'Int'Unds'{}(K2:SortInt{},K1:SortInt{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{})), Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortInt{}, R} (Lbl'UndsStar'Int'Unds'{}(K1:SortInt{},K2:SortInt{}),Lbl'UndsStar'Int'Unds'{}(K2:SortInt{},K1:SortInt{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsStar'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortInt{}, R} (Lbl'UndsPlus'Int'Unds'{}(K1:SortInt{},K2:SortInt{}),Lbl'UndsPlus'Int'Unds'{}(K2:SortInt{},K1:SortInt{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExps{}} (\and{SortExps{}} (Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{})), Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIds{}, \equals{SortIds{}, R} (Val:SortIds{}, Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids{}(K0:SortId{}, K1:SortIds{}))) [functional{}()] // functional
  axiom{}\implies{SortIds{}} (\and{SortIds{}} (Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids{}(X0:SortId{}, X1:SortIds{}), Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids{}(Y0:SortId{}, Y1:SortIds{})), Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortIds{}} (X1:SortIds{}, Y1:SortIds{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortVals{}, \equals{SortVals{}, R} (Val:SortVals{}, Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(K0:SortVal{}, K1:SortVals{}))) [functional{}()] // functional
  axiom{}\implies{SortVals{}} (\and{SortVals{}} (Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(X0:SortVal{}, X1:SortVals{}), Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(Y0:SortVal{}, Y1:SortVals{})), Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(\and{SortVal{}} (X0:SortVal{}, Y0:SortVal{}), \and{SortVals{}} (X1:SortVals{}, Y1:SortVals{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'-Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(K0:SortExp{}, K1:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{})), Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortClassDataCellMap{}, R} (Lbl'Unds'ClassDataCellMap'Unds'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(K1:SortClassDataCellMap{},K2:SortClassDataCellMap{}),K3:SortClassDataCellMap{}),Lbl'Unds'ClassDataCellMap'Unds'{}(K1:SortClassDataCellMap{},Lbl'Unds'ClassDataCellMap'Unds'{}(K2:SortClassDataCellMap{},K3:SortClassDataCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortClassDataCellMap{}, R} (Lbl'Unds'ClassDataCellMap'Unds'{}(K1:SortClassDataCellMap{},K2:SortClassDataCellMap{}),Lbl'Unds'ClassDataCellMap'Unds'{}(K2:SortClassDataCellMap{},K1:SortClassDataCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortClassDataCellMap{}, R} (Lbl'Unds'ClassDataCellMap'Unds'{}(K:SortClassDataCellMap{},Lbl'Stop'ClassDataCellMap{}()),K:SortClassDataCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortClassDataCellMap{}, R} (Lbl'Unds'ClassDataCellMap'Unds'{}(Lbl'Stop'ClassDataCellMap{}(),K:SortClassDataCellMap{}),K:SortClassDataCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(K1:SortList{},K2:SortList{}),K3:SortList{}),Lbl'Unds'List'Unds'{}(K1:SortList{},Lbl'Unds'List'Unds'{}(K2:SortList{},K3:SortList{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(K:SortList{},Lbl'Stop'List{}()),K:SortList{}) [unit{}()] // right unit
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),K:SortList{}),K:SortList{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),K3:SortMap{}),Lbl'Unds'Map'Unds'{}(K1:SortMap{},Lbl'Unds'Map'Unds'{}(K2:SortMap{},K3:SortMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),Lbl'Unds'Map'Unds'{}(K2:SortMap{},K1:SortMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K:SortMap{},Lbl'Stop'Map{}()),K:SortMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),K:SortMap{}),K:SortMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),K3:SortSet{}),Lbl'Unds'Set'Unds'{}(K1:SortSet{},Lbl'Unds'Set'Unds'{}(K2:SortSet{},K3:SortSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),Lbl'Unds'Set'Unds'{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},K:SortSet{}),K:SortSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},Lbl'Stop'Set{}()),K:SortSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),K:SortSet{}),K:SortSet{}) [unit{}()] // left unit
  axiom{R} \equals{SortThreadCellSet{}, R} (Lbl'Unds'ThreadCellSet'Unds'{}(Lbl'Unds'ThreadCellSet'Unds'{}(K1:SortThreadCellSet{},K2:SortThreadCellSet{}),K3:SortThreadCellSet{}),Lbl'Unds'ThreadCellSet'Unds'{}(K1:SortThreadCellSet{},Lbl'Unds'ThreadCellSet'Unds'{}(K2:SortThreadCellSet{},K3:SortThreadCellSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortThreadCellSet{}, R} (Lbl'Unds'ThreadCellSet'Unds'{}(K1:SortThreadCellSet{},K2:SortThreadCellSet{}),Lbl'Unds'ThreadCellSet'Unds'{}(K2:SortThreadCellSet{},K1:SortThreadCellSet{})) [comm{}()] // commutativity
  axiom{R} \equals{SortThreadCellSet{}, R} (Lbl'Unds'ThreadCellSet'Unds'{}(K:SortThreadCellSet{},K:SortThreadCellSet{}),K:SortThreadCellSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortThreadCellSet{}, R} (Lbl'Unds'ThreadCellSet'Unds'{}(K:SortThreadCellSet{},Lbl'Stop'ThreadCellSet{}()),K:SortThreadCellSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortThreadCellSet{}, R} (Lbl'Unds'ThreadCellSet'Unds'{}(Lbl'Stop'ThreadCellSet{}(),K:SortThreadCellSet{}),K:SortThreadCellSet{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{})), Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(K0:SortStmt{}, K1:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{})), Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}), \and{SortStmt{}} (X1:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(K0:SortExp{}, K1:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{})), Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \equals{SortInt{}, R} (Lbl'Unds'xorInt'Unds'{}(K1:SortInt{},K2:SortInt{}),Lbl'Unds'xorInt'Unds'{}(K2:SortInt{},K1:SortInt{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'xorInt'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \equals{SortInt{}, R} (Lbl'UndsPipe'Int'Unds'{}(K1:SortInt{},K2:SortInt{}),Lbl'UndsPipe'Int'Unds'{}(K2:SortInt{},K1:SortInt{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPipe'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \equals{SortSet{}, R} (Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K1:SortSet{},K2:SortSet{}),Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LbladdEnvLayer'Unds'KOOL'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LbladdEnvLayer'Unds'KOOL'Unds'KItem{}(), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LbladdEnvLayer'Unds'KOOL'Unds'KItem{}(), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LbladdEnvLayer'Unds'KOOL'Unds'KItem{}(), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LbladdEnvLayer'Unds'KOOL'Unds'KItem{}(), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LbladdEnvLayer'Unds'KOOL'Unds'KItem{}(), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LbladdEnvLayer'Unds'KOOL'Unds'KItem{}(), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LbladdEnvLayer'Unds'KOOL'Unds'KItem{}(), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LbladdEnvLayer'Unds'KOOL'Unds'KItem{}(), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LbladdEnvLayer'Unds'KOOL'Unds'KItem{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LbladdEnvLayer'Unds'KOOL'Unds'KItem{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lblarray'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lblarray'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Int'Unds'Int{}(X0:SortInt{}, X1:SortInt{}), Lblarray'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Int'Unds'Int{}(Y0:SortInt{}, Y1:SortInt{})), Lblarray'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Int'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblarray'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Int'Unds'Int{}(X0:SortInt{}, X1:SortInt{}), Lblloc'LParUndsRParUnds'KOOL'Unds'Val'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblarray'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Int'Unds'Int{}(X0:SortInt{}, X1:SortInt{}), LblmethodClosure'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'Int'Unds'Ids'Unds'Stmt{}(Y0:SortId{}, Y1:SortInt{}, Y2:SortIds{}, Y3:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblarray'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Int'Unds'Int{}(X0:SortInt{}, X1:SortInt{}), Lblnothing'Unds'KOOL'Unds'Val{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblarray'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Int'Unds'Int{}(X0:SortInt{}, X1:SortInt{}), LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(Y0:SortId{}, Y1:SortList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(K0:SortId{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortBlock{})), Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(K0:SortId{}, K1:SortId{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{})), Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{}), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{})), Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(K0:SortId{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(X0:SortId{}, X1:SortMap{}), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Y0:SortId{}, Y1:SortMap{})), LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortMap{}} (X1:SortMap{}, Y1:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(X0:SortId{}, X1:SortMap{}), Lblexecute'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(X0:SortId{}, X1:SortMap{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(X0:SortId{}, X1:SortMap{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(X0:SortId{}, X1:SortMap{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(X0:SortId{}, X1:SortMap{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(X0:SortId{}, X1:SortMap{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(X0:SortId{}, X1:SortMap{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(X0:SortId{}, X1:SortMap{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lblexecute'Unds'KOOL'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblexecute'Unds'KOOL'Unds'KItem{}(), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblexecute'Unds'KOOL'Unds'KItem{}(), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblexecute'Unds'KOOL'Unds'KItem{}(), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblexecute'Unds'KOOL'Unds'KItem{}(), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblexecute'Unds'KOOL'Unds'KItem{}(), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblexecute'Unds'KOOL'Unds'KItem{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblexecute'Unds'KOOL'Unds'KItem{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblfor'LParUndsUndsSClnUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Exp'Unds'Exp'Unds'Block{}(K0:SortStmt{}, K1:SortExp{}, K2:SortExp{}, K3:SortBlock{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(K0:SortMap{}, K1:SortK{}, K2:SortList{}, K3:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortList{}, X3:SortK{}), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(Y0:SortMap{}, Y1:SortK{}, Y2:SortList{}, Y3:SortK{})), LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}), \and{SortList{}} (X2:SortList{}, Y2:SortList{}), \and{SortK{}} (X3:SortK{}, Y3:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortList{}, X3:SortK{}), Lblpopx'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortList{}, X3:SortK{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortList{}, X3:SortK{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortList{}, X3:SortK{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortList{}, X3:SortK{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortList{}, X3:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblif'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(K0:SortExp{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(K0:SortExp{}, K1:SortBlock{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{})), Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortSet{}, R} (LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K1:SortSet{},K2:SortSet{}),LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBaseClassCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBaseClassCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBlock{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBool{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBusyCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBusyCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassDataCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassDataCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassDataCellMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassNameCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassNameCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassesCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassesCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassesCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisControlCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisControlCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisControlCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCrntClassCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCrntClassCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCrntObjCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCrntObjCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCrntObjCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisDeclarationsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisDeclarationsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisEnvCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisEnvCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisEnvStackCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisEnvStackCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExps{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFloat{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFstackCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFstackCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisHoldsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisHoldsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOError{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOFile{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisId{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIdCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIdCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIds{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInputCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInputCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKConfigVar{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKItem{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKResult{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisList{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLocationCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLocationCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextLocCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextLocCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOutputCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOutputCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisSet{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStmt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStoreCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStoreCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStream{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTerminatedCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTerminatedCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadCellSet{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadsCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisVal{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisVals{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisXstackCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisXstackCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lblloc'LParUndsRParUnds'KOOL'Unds'Val'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lblloc'LParUndsRParUnds'KOOL'Unds'Val'Unds'Int{}(X0:SortInt{}), Lblloc'LParUndsRParUnds'KOOL'Unds'Val'Unds'Int{}(Y0:SortInt{})), Lblloc'LParUndsRParUnds'KOOL'Unds'Val'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblloc'LParUndsRParUnds'KOOL'Unds'Val'Unds'Int{}(X0:SortInt{}), LblmethodClosure'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'Int'Unds'Ids'Unds'Stmt{}(Y0:SortId{}, Y1:SortInt{}, Y2:SortIds{}, Y3:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblloc'LParUndsRParUnds'KOOL'Unds'Val'Unds'Int{}(X0:SortInt{}), Lblnothing'Unds'KOOL'Unds'Val{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblloc'LParUndsRParUnds'KOOL'Unds'Val'Unds'Int{}(X0:SortInt{}), LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(Y0:SortId{}, Y1:SortList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Y0:SortInt{})), Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(X0:SortInt{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(X0:SortK{}), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(Y0:SortK{})), Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(X0:SortK{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(X0:SortK{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(X0:SortK{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(X0:SortK{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(X0:SortK{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(X0:SortK{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, LblmethodClosure'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'Int'Unds'Ids'Unds'Stmt{}(K0:SortId{}, K1:SortInt{}, K2:SortIds{}, K3:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (LblmethodClosure'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'Int'Unds'Ids'Unds'Stmt{}(X0:SortId{}, X1:SortInt{}, X2:SortIds{}, X3:SortStmt{}), LblmethodClosure'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'Int'Unds'Ids'Unds'Stmt{}(Y0:SortId{}, Y1:SortInt{}, Y2:SortIds{}, Y3:SortStmt{})), LblmethodClosure'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'Int'Unds'Ids'Unds'Stmt{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortIds{}} (X2:SortIds{}, Y2:SortIds{}), \and{SortStmt{}} (X3:SortStmt{}, Y3:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVal{}} (\and{SortVal{}} (LblmethodClosure'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'Int'Unds'Ids'Unds'Stmt{}(X0:SortId{}, X1:SortInt{}, X2:SortIds{}, X3:SortStmt{}), Lblnothing'Unds'KOOL'Unds'Val{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (LblmethodClosure'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'Int'Unds'Ids'Unds'Stmt{}(X0:SortId{}, X1:SortInt{}, X2:SortIds{}, X3:SortStmt{}), LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(Y0:SortId{}, Y1:SortList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(K0:SortId{}, K1:SortIds{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{})), Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortIds{}} (X1:SortIds{}, Y1:SortIds{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(K0:SortId{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{})), Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBaseClassCellOpt{}, \equals{SortBaseClassCellOpt{}, R} (Val:SortBaseClassCellOpt{}, LblnoBaseClassCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBusyCellOpt{}, \equals{SortBusyCellOpt{}, R} (Val:SortBusyCellOpt{}, LblnoBusyCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortClassNameCellOpt{}, \equals{SortClassNameCellOpt{}, R} (Val:SortClassNameCellOpt{}, LblnoClassNameCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortClassesCellOpt{}, \equals{SortClassesCellOpt{}, R} (Val:SortClassesCellOpt{}, LblnoClassesCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortControlCellOpt{}, \equals{SortControlCellOpt{}, R} (Val:SortControlCellOpt{}, LblnoControlCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCrntClassCellOpt{}, \equals{SortCrntClassCellOpt{}, R} (Val:SortCrntClassCellOpt{}, LblnoCrntClassCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCrntObjCellOpt{}, \equals{SortCrntObjCellOpt{}, R} (Val:SortCrntObjCellOpt{}, LblnoCrntObjCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDeclarationsCellOpt{}, \equals{SortDeclarationsCellOpt{}, R} (Val:SortDeclarationsCellOpt{}, LblnoDeclarationsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortEnvCellOpt{}, \equals{SortEnvCellOpt{}, R} (Val:SortEnvCellOpt{}, LblnoEnvCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortEnvStackCellOpt{}, \equals{SortEnvStackCellOpt{}, R} (Val:SortEnvStackCellOpt{}, LblnoEnvStackCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFstackCellOpt{}, \equals{SortFstackCellOpt{}, R} (Val:SortFstackCellOpt{}, LblnoFstackCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, LblnoGeneratedCounterCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortHoldsCellOpt{}, \equals{SortHoldsCellOpt{}, R} (Val:SortHoldsCellOpt{}, LblnoHoldsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdCellOpt{}, \equals{SortIdCellOpt{}, R} (Val:SortIdCellOpt{}, LblnoIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInputCellOpt{}, \equals{SortInputCellOpt{}, R} (Val:SortInputCellOpt{}, LblnoInputCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, LblnoKCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLocationCellOpt{}, \equals{SortLocationCellOpt{}, R} (Val:SortLocationCellOpt{}, LblnoLocationCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextLocCellOpt{}, \equals{SortNextLocCellOpt{}, R} (Val:SortNextLocCellOpt{}, LblnoNextLocCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOutputCellOpt{}, \equals{SortOutputCellOpt{}, R} (Val:SortOutputCellOpt{}, LblnoOutputCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStoreCellOpt{}, \equals{SortStoreCellOpt{}, R} (Val:SortStoreCellOpt{}, LblnoStoreCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, LblnoTCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTerminatedCellOpt{}, \equals{SortTerminatedCellOpt{}, R} (Val:SortTerminatedCellOpt{}, LblnoTerminatedCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortThreadsCellOpt{}, \equals{SortThreadsCellOpt{}, R} (Val:SortThreadsCellOpt{}, LblnoThreadsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortXstackCellOpt{}, \equals{SortXstackCellOpt{}, R} (Val:SortXstackCellOpt{}, LblnoXstackCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lblnothing'Unds'KOOL'Unds'Val{}())) [functional{}()] // functional
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblnothing'Unds'KOOL'Unds'Val{}(), LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(Y0:SortId{}, Y1:SortList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(K0:SortId{}, K1:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(X0:SortId{}, X1:SortList{}), LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(Y0:SortId{}, Y1:SortList{})), LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortList{}} (X1:SortList{}, Y1:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lblpopx'Unds'KOOL'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblpopx'Unds'KOOL'Unds'KItem{}(), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblpopx'Unds'KOOL'Unds'KItem{}(), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblpopx'Unds'KOOL'Unds'KItem{}(), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblpopx'Unds'KOOL'Unds'KItem{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblpopx'Unds'KOOL'Unds'KItem{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(K0:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{})), Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(\and{SortExps{}} (X0:SortExps{}, Y0:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}())) [functional{}()] // functional
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}(), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}(), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}(), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}(), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblreturn'SClnUnds'KOOL-SYNTAX'Unds'Stmt{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{}), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(Y0:SortId{})), LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(X0:SortMap{}), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Y0:SortMap{})), LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(X0:SortMap{}), LblstoreObj'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(X0:SortMap{}), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(X0:SortMap{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(K0:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(K0:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{}), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{})), Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(\and{SortBlock{}} (X0:SortBlock{}, Y0:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{}), Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{}), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblstoreObj'Unds'KOOL'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblstoreObj'Unds'KOOL'Unds'KItem{}(), Lblundefined'Unds'KOOL'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblstoreObj'Unds'KOOL'Unds'KItem{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(K0:SortString{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}())) [functional{}()] // functional
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}(), Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(K0:SortBlock{}, K1:SortId{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(X0:SortBlock{}, X1:SortId{}, X2:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{})), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(\and{SortBlock{}} (X0:SortBlock{}, Y0:SortBlock{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(X0:SortBlock{}, X1:SortId{}, X2:SortBlock{}), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(X0:SortBlock{}, X1:SortId{}, X2:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lblundefined'Unds'KOOL'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblundefined'Unds'KOOL'Unds'KItem{}(), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(K0:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{})), Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(\and{SortExps{}} (X0:SortExps{}, Y0:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(K0:SortExp{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{})), Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(K0:SortId{}, K1:SortStmt{}, K2:SortK{}, K3:SortMap{}, K4:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(X0:SortId{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortK{}), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(Y0:SortId{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortK{})), LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortStmt{}} (X1:SortStmt{}, Y1:SortStmt{}), \and{SortK{}} (X2:SortK{}, Y2:SortK{}), \and{SortMap{}} (X3:SortMap{}, Y3:SortMap{}), \and{SortK{}} (X4:SortK{}, Y4:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBlock{}, \equals{SortBlock{}, R} (Val:SortBlock{}, Lbl'LBraUndsRBraUnds'KOOL-SYNTAX'Unds'Block'Unds'Stmt{}(K0:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortBlock{}} (\and{SortBlock{}} (Lbl'LBraUndsRBraUnds'KOOL-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{}), Lbl'LBraUndsRBraUnds'KOOL-SYNTAX'Unds'Block'Unds'Stmt{}(Y0:SortStmt{})), Lbl'LBraUndsRBraUnds'KOOL-SYNTAX'Unds'Block'Unds'Stmt{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBlock{}} (\and{SortBlock{}} (Lbl'LBraUndsRBraUnds'KOOL-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{}), Lbl'LBraRBraUnds'KOOL-SYNTAX'Unds'Block{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBlock{}, \equals{SortBlock{}, R} (Val:SortBlock{}, Lbl'LBraRBraUnds'KOOL-SYNTAX'Unds'Block{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Tild'Int'Unds'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{} \or{SortCrntObjCellOpt{}} (LblnoCrntObjCell{}(), \or{SortCrntObjCellOpt{}} (\exists{SortCrntObjCellOpt{}} (Val:SortCrntObjCell{}, inj{SortCrntObjCell{}, SortCrntObjCellOpt{}} (Val:SortCrntObjCell{})), \bottom{SortCrntObjCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}, X1:SortK{}))), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}))), \or{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), \or{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortInt{}, \exists{SortKItem{}} (X1:SortString{}, \exists{SortKItem{}} (X2:SortString{}, Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{})))), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortMap{}, \exists{SortKItem{}} (X1:SortK{}, \exists{SortKItem{}} (X2:SortK{}, Lbl'LParUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortK{})))), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortId{}, \exists{SortKItem{}} (X1:SortStmt{}, \exists{SortKItem{}} (X2:SortK{}, \exists{SortKItem{}} (X3:SortMap{}, \exists{SortKItem{}} (X4:SortK{}, Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(X0:SortId{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortK{})))))), \or{SortKItem{}} (LbladdEnvLayer'Unds'KOOL'Unds'KItem{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortId{}, Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortId{}, \exists{SortKItem{}} (X1:SortMap{}, LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(X0:SortId{}, X1:SortMap{}))), \or{SortKItem{}} (Lblexecute'Unds'KOOL'Unds'KItem{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortMap{}, \exists{SortKItem{}} (X1:SortK{}, \exists{SortKItem{}} (X2:SortList{}, \exists{SortKItem{}} (X3:SortK{}, LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(X0:SortMap{}, X1:SortK{}, X2:SortList{}, X3:SortK{}))))), \or{SortKItem{}} (Lblpopx'Unds'KOOL'Unds'KItem{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortId{}, LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(X0:SortId{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortMap{}, LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(X0:SortMap{})), \or{SortKItem{}} (LblstoreObj'Unds'KOOL'Unds'KItem{}(), \or{SortKItem{}} (Lblundefined'Unds'KOOL'Unds'KItem{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortId{}, \exists{SortKItem{}} (X1:SortStmt{}, \exists{SortKItem{}} (X2:SortK{}, \exists{SortKItem{}} (X3:SortMap{}, \exists{SortKItem{}} (X4:SortK{}, LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(X0:SortId{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortK{})))))), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCrntObjCellOpt{}, inj{SortCrntObjCellOpt{}, SortKItem{}} (Val:SortCrntObjCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextLocCell{}, inj{SortNextLocCell{}, SortKItem{}} (Val:SortNextLocCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocationCellOpt{}, inj{SortLocationCellOpt{}, SortKItem{}} (Val:SortLocationCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortList{}, inj{SortList{}, SortKItem{}} (Val:SortList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIdCell{}, inj{SortIdCell{}, SortKItem{}} (Val:SortIdCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCrntObjCellFragment{}, inj{SortCrntObjCellFragment{}, SortKItem{}} (Val:SortCrntObjCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInputCellOpt{}, inj{SortInputCellOpt{}, SortKItem{}} (Val:SortInputCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTCellOpt{}, inj{SortTCellOpt{}, SortKItem{}} (Val:SortTCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTCellFragment{}, inj{SortTCellFragment{}, SortKItem{}} (Val:SortTCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortControlCell{}, inj{SortControlCell{}, SortKItem{}} (Val:SortControlCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortThreadCellFragment{}, inj{SortThreadCellFragment{}, SortKItem{}} (Val:SortThreadCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortString{}, inj{SortString{}, SortKItem{}} (Val:SortString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKConfigVar{}, inj{SortKConfigVar{}, SortKItem{}} (Val:SortKConfigVar{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOInt{}, inj{SortIOInt{}, SortKItem{}} (Val:SortIOInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTCell{}, inj{SortTCell{}, SortKItem{}} (Val:SortTCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCrntClassCellOpt{}, inj{SortCrntClassCellOpt{}, SortKItem{}} (Val:SortCrntClassCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIds{}, inj{SortIds{}, SortKItem{}} (Val:SortIds{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassNameCell{}, inj{SortClassNameCell{}, SortKItem{}} (Val:SortClassNameCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExp{}, inj{SortExp{}, SortKItem{}} (Val:SortExp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassDataCell{}, inj{SortClassDataCell{}, SortKItem{}} (Val:SortClassDataCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextLocCellOpt{}, inj{SortNextLocCellOpt{}, SortKItem{}} (Val:SortNextLocCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTerminatedCellOpt{}, inj{SortTerminatedCellOpt{}, SortKItem{}} (Val:SortTerminatedCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (Val:SortGeneratedCounterCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortThreadCellSet{}, inj{SortThreadCellSet{}, SortKItem{}} (Val:SortThreadCellSet{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassesCellOpt{}, inj{SortClassesCellOpt{}, SortKItem{}} (Val:SortClassesCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDeclarationsCell{}, inj{SortDeclarationsCell{}, SortKItem{}} (Val:SortDeclarationsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortControlCellOpt{}, inj{SortControlCellOpt{}, SortKItem{}} (Val:SortControlCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIdCellOpt{}, inj{SortIdCellOpt{}, SortKItem{}} (Val:SortIdCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBusyCell{}, inj{SortBusyCell{}, SortKItem{}} (Val:SortBusyCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (Val:SortGeneratedCounterCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortThreadsCellFragment{}, inj{SortThreadsCellFragment{}, SortKItem{}} (Val:SortThreadsCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCrntObjCell{}, inj{SortCrntObjCell{}, SortKItem{}} (Val:SortCrntObjCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInputCell{}, inj{SortInputCell{}, SortKItem{}} (Val:SortInputCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortId{}, inj{SortId{}, SortKItem{}} (Val:SortId{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortVals{}, inj{SortVals{}, SortKItem{}} (Val:SortVals{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBaseClassCell{}, inj{SortBaseClassCell{}, SortKItem{}} (Val:SortBaseClassCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStream{}, inj{SortStream{}, SortKItem{}} (Val:SortStream{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBool{}, inj{SortBool{}, SortKItem{}} (Val:SortBool{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortHoldsCellOpt{}, inj{SortHoldsCellOpt{}, SortKItem{}} (Val:SortHoldsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCell{}, inj{SortKCell{}, SortKItem{}} (Val:SortKCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocationCell{}, inj{SortLocationCell{}, SortKItem{}} (Val:SortLocationCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassNameCellOpt{}, inj{SortClassNameCellOpt{}, SortKItem{}} (Val:SortClassNameCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStoreCell{}, inj{SortStoreCell{}, SortKItem{}} (Val:SortStoreCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOFile{}, inj{SortIOFile{}, SortKItem{}} (Val:SortIOFile{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOutputCell{}, inj{SortOutputCell{}, SortKItem{}} (Val:SortOutputCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTerminatedCell{}, inj{SortTerminatedCell{}, SortKItem{}} (Val:SortTerminatedCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStoreCellOpt{}, inj{SortStoreCellOpt{}, SortKItem{}} (Val:SortStoreCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFstackCellOpt{}, inj{SortFstackCellOpt{}, SortKItem{}} (Val:SortFstackCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortThreadCell{}, inj{SortThreadCell{}, SortKItem{}} (Val:SortThreadCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortThreadsCellOpt{}, inj{SortThreadsCellOpt{}, SortKItem{}} (Val:SortThreadsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKResult{}, inj{SortKResult{}, SortKItem{}} (Val:SortKResult{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMap{}, inj{SortMap{}, SortKItem{}} (Val:SortMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOutputCellOpt{}, inj{SortOutputCellOpt{}, SortKItem{}} (Val:SortOutputCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBaseClassCellOpt{}, inj{SortBaseClassCellOpt{}, SortKItem{}} (Val:SortBaseClassCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEnvCell{}, inj{SortEnvCell{}, SortKItem{}} (Val:SortEnvCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassesCellFragment{}, inj{SortClassesCellFragment{}, SortKItem{}} (Val:SortClassesCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCellOpt{}, inj{SortKCellOpt{}, SortKItem{}} (Val:SortKCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStmt{}, inj{SortStmt{}, SortKItem{}} (Val:SortStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEnvStackCell{}, inj{SortEnvStackCell{}, SortKItem{}} (Val:SortEnvStackCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortControlCellFragment{}, inj{SortControlCellFragment{}, SortKItem{}} (Val:SortControlCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortHoldsCell{}, inj{SortHoldsCell{}, SortKItem{}} (Val:SortHoldsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInt{}, inj{SortInt{}, SortKItem{}} (Val:SortInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFloat{}, inj{SortFloat{}, SortKItem{}} (Val:SortFloat{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortThreadsCell{}, inj{SortThreadsCell{}, SortKItem{}} (Val:SortThreadsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassDataCellMap{}, inj{SortClassDataCellMap{}, SortKItem{}} (Val:SortClassDataCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortKItem{}} (Val:SortGeneratedTopCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortXstackCell{}, inj{SortXstackCell{}, SortKItem{}} (Val:SortXstackCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEnvCellOpt{}, inj{SortEnvCellOpt{}, SortKItem{}} (Val:SortEnvCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBlock{}, inj{SortBlock{}, SortKItem{}} (Val:SortBlock{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortVal{}, inj{SortVal{}, SortKItem{}} (Val:SortVal{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDeclarationsCellOpt{}, inj{SortDeclarationsCellOpt{}, SortKItem{}} (Val:SortDeclarationsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSet{}, inj{SortSet{}, SortKItem{}} (Val:SortSet{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFstackCell{}, inj{SortFstackCell{}, SortKItem{}} (Val:SortFstackCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExps{}, inj{SortExps{}, SortKItem{}} (Val:SortExps{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassesCell{}, inj{SortClassesCell{}, SortKItem{}} (Val:SortClassesCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBusyCellOpt{}, inj{SortBusyCellOpt{}, SortKItem{}} (Val:SortBusyCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassDataCellFragment{}, inj{SortClassDataCellFragment{}, SortKItem{}} (Val:SortClassDataCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortXstackCellOpt{}, inj{SortXstackCellOpt{}, SortKItem{}} (Val:SortXstackCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEnvStackCellOpt{}, inj{SortEnvStackCellOpt{}, SortKItem{}} (Val:SortEnvStackCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOString{}, inj{SortIOString{}, SortKItem{}} (Val:SortIOString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCellFragment{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (Val:SortGeneratedTopCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOError{}, inj{SortIOError{}, SortKItem{}} (Val:SortIOError{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCrntClassCell{}, inj{SortCrntClassCell{}, SortKItem{}} (Val:SortCrntClassCell{})), \bottom{SortKItem{}}()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortNextLocCell{}} (\exists{SortNextLocCell{}} (X0:SortInt{}, Lbl'-LT-'nextLoc'-GT-'{}(X0:SortInt{})), \bottom{SortNextLocCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLocationCellOpt{}} (LblnoLocationCell{}(), \or{SortLocationCellOpt{}} (\exists{SortLocationCellOpt{}} (Val:SortLocationCell{}, inj{SortLocationCell{}, SortLocationCellOpt{}} (Val:SortLocationCell{})), \bottom{SortLocationCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortIdCell{}} (\exists{SortIdCell{}} (X0:SortInt{}, Lbl'-LT-'id'-GT-'{}(X0:SortInt{})), \bottom{SortIdCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCrntObjCellFragment{}} (\exists{SortCrntObjCellFragment{}} (X0:SortCrntClassCellOpt{}, \exists{SortCrntObjCellFragment{}} (X1:SortEnvStackCellOpt{}, \exists{SortCrntObjCellFragment{}} (X2:SortLocationCellOpt{}, Lbl'-LT-'crntObj'-GT-'-fragment{}(X0:SortCrntClassCellOpt{}, X1:SortEnvStackCellOpt{}, X2:SortLocationCellOpt{})))), \bottom{SortCrntObjCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInputCellOpt{}} (LblnoInputCell{}(), \or{SortInputCellOpt{}} (\exists{SortInputCellOpt{}} (Val:SortInputCell{}, inj{SortInputCell{}, SortInputCellOpt{}} (Val:SortInputCell{})), \bottom{SortInputCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTCellOpt{}} (LblnoTCell{}(), \or{SortTCellOpt{}} (\exists{SortTCellOpt{}} (Val:SortTCell{}, inj{SortTCell{}, SortTCellOpt{}} (Val:SortTCell{})), \bottom{SortTCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTCellFragment{}} (\exists{SortTCellFragment{}} (X0:SortThreadsCellOpt{}, \exists{SortTCellFragment{}} (X1:SortStoreCellOpt{}, \exists{SortTCellFragment{}} (X2:SortBusyCellOpt{}, \exists{SortTCellFragment{}} (X3:SortTerminatedCellOpt{}, \exists{SortTCellFragment{}} (X4:SortInputCellOpt{}, \exists{SortTCellFragment{}} (X5:SortOutputCellOpt{}, \exists{SortTCellFragment{}} (X6:SortNextLocCellOpt{}, \exists{SortTCellFragment{}} (X7:SortClassesCellOpt{}, Lbl'-LT-'T'-GT-'-fragment{}(X0:SortThreadsCellOpt{}, X1:SortStoreCellOpt{}, X2:SortBusyCellOpt{}, X3:SortTerminatedCellOpt{}, X4:SortInputCellOpt{}, X5:SortOutputCellOpt{}, X6:SortNextLocCellOpt{}, X7:SortClassesCellOpt{}))))))))), \bottom{SortTCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortControlCell{}} (\exists{SortControlCell{}} (X0:SortFstackCell{}, \exists{SortControlCell{}} (X1:SortXstackCell{}, \exists{SortControlCell{}} (X2:SortCrntObjCell{}, Lbl'-LT-'control'-GT-'{}(X0:SortFstackCell{}, X1:SortXstackCell{}, X2:SortCrntObjCell{})))), \bottom{SortControlCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortThreadCellFragment{}} (\exists{SortThreadCellFragment{}} (X0:SortKCellOpt{}, \exists{SortThreadCellFragment{}} (X1:SortControlCellOpt{}, \exists{SortThreadCellFragment{}} (X2:SortEnvCellOpt{}, \exists{SortThreadCellFragment{}} (X3:SortHoldsCellOpt{}, \exists{SortThreadCellFragment{}} (X4:SortIdCellOpt{}, Lbl'-LT-'thread'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortControlCellOpt{}, X2:SortEnvCellOpt{}, X3:SortHoldsCellOpt{}, X4:SortIdCellOpt{})))))), \bottom{SortThreadCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortString{}} (\top{SortString{}}(), \bottom{SortString{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKConfigVar{}} (\top{SortKConfigVar{}}(), \bottom{SortKConfigVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortIOInt{}} (\exists{SortIOInt{}} (Val:SortInt{}, inj{SortInt{}, SortIOInt{}} (Val:SortInt{})), \or{SortIOInt{}} (\exists{SortIOInt{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOInt{}} (Val:SortIOError{})), \bottom{SortIOInt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTCell{}} (\exists{SortTCell{}} (X0:SortThreadsCell{}, \exists{SortTCell{}} (X1:SortStoreCell{}, \exists{SortTCell{}} (X2:SortBusyCell{}, \exists{SortTCell{}} (X3:SortTerminatedCell{}, \exists{SortTCell{}} (X4:SortInputCell{}, \exists{SortTCell{}} (X5:SortOutputCell{}, \exists{SortTCell{}} (X6:SortNextLocCell{}, \exists{SortTCell{}} (X7:SortClassesCell{}, Lbl'-LT-'T'-GT-'{}(X0:SortThreadsCell{}, X1:SortStoreCell{}, X2:SortBusyCell{}, X3:SortTerminatedCell{}, X4:SortInputCell{}, X5:SortOutputCell{}, X6:SortNextLocCell{}, X7:SortClassesCell{}))))))))), \bottom{SortTCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCrntClassCellOpt{}} (LblnoCrntClassCell{}(), \or{SortCrntClassCellOpt{}} (\exists{SortCrntClassCellOpt{}} (Val:SortCrntClassCell{}, inj{SortCrntClassCell{}, SortCrntClassCellOpt{}} (Val:SortCrntClassCell{})), \bottom{SortCrntClassCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortIds{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids{}(), \or{SortIds{}} (\exists{SortIds{}} (X0:SortId{}, \exists{SortIds{}} (X1:SortIds{}, Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids{}(X0:SortId{}, X1:SortIds{}))), \bottom{SortIds{}}())) [constructor{}()] // no junk
  axiom{} \or{SortClassNameCell{}} (\exists{SortClassNameCell{}} (X0:SortId{}, Lbl'-LT-'className'-GT-'{}(X0:SortId{})), \bottom{SortClassNameCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \or{SortExp{}} (\exists{SortExp{}} (X0:SortId{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExps{}, Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortId{}, Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExps{}, Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortId{}, Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortInt{}, Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(X0:SortInt{})), \or{SortExp{}} (\exists{SortExp{}} (X0:SortK{}, Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(X0:SortK{})), \or{SortExp{}} (\exists{SortExp{}} (X0:SortId{}, \exists{SortExp{}} (X1:SortExps{}, Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}))), \or{SortExp{}} (Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}(), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \or{SortExp{}} (\exists{SortExp{}} (X0:SortBlock{}, Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{})), \or{SortExp{}} (Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}(), \or{SortExp{}} (Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}(), \or{SortExp{}} (\exists{SortExp{}} (Val:SortString{}, inj{SortString{}, SortExp{}} (Val:SortString{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortId{}, inj{SortId{}, SortExp{}} (Val:SortId{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortBool{}, inj{SortBool{}, SortExp{}} (Val:SortBool{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortInt{}, inj{SortInt{}, SortExp{}} (Val:SortInt{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortVal{}, inj{SortVal{}, SortExp{}} (Val:SortVal{})), \bottom{SortExp{}}()))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortClassDataCell{}} (\exists{SortClassDataCell{}} (X0:SortClassNameCell{}, \exists{SortClassDataCell{}} (X1:SortBaseClassCell{}, \exists{SortClassDataCell{}} (X2:SortDeclarationsCell{}, Lbl'-LT-'classData'-GT-'{}(X0:SortClassNameCell{}, X1:SortBaseClassCell{}, X2:SortDeclarationsCell{})))), \bottom{SortClassDataCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextLocCellOpt{}} (LblnoNextLocCell{}(), \or{SortNextLocCellOpt{}} (\exists{SortNextLocCellOpt{}} (Val:SortNextLocCell{}, inj{SortNextLocCell{}, SortNextLocCellOpt{}} (Val:SortNextLocCell{})), \bottom{SortNextLocCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTerminatedCellOpt{}} (LblnoTerminatedCell{}(), \or{SortTerminatedCellOpt{}} (\exists{SortTerminatedCellOpt{}} (Val:SortTerminatedCell{}, inj{SortTerminatedCell{}, SortTerminatedCellOpt{}} (Val:SortTerminatedCell{})), \bottom{SortTerminatedCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCellOpt{}} (LblnoGeneratedCounterCell{}(), \or{SortGeneratedCounterCellOpt{}} (\exists{SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{})), \bottom{SortGeneratedCounterCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortThreadCellSet{}} (\exists{SortThreadCellSet{}} (Val:SortThreadCell{}, inj{SortThreadCell{}, SortThreadCellSet{}} (Val:SortThreadCell{})), \bottom{SortThreadCellSet{}}()) [constructor{}()] // no junk
  axiom{} \or{SortClassesCellOpt{}} (LblnoClassesCell{}(), \or{SortClassesCellOpt{}} (\exists{SortClassesCellOpt{}} (Val:SortClassesCell{}, inj{SortClassesCell{}, SortClassesCellOpt{}} (Val:SortClassesCell{})), \bottom{SortClassesCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortDeclarationsCell{}} (\exists{SortDeclarationsCell{}} (X0:SortK{}, Lbl'-LT-'declarations'-GT-'{}(X0:SortK{})), \bottom{SortDeclarationsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortControlCellOpt{}} (LblnoControlCell{}(), \or{SortControlCellOpt{}} (\exists{SortControlCellOpt{}} (Val:SortControlCell{}, inj{SortControlCell{}, SortControlCellOpt{}} (Val:SortControlCell{})), \bottom{SortControlCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortIdCellOpt{}} (LblnoIdCell{}(), \or{SortIdCellOpt{}} (\exists{SortIdCellOpt{}} (Val:SortIdCell{}, inj{SortIdCell{}, SortIdCellOpt{}} (Val:SortIdCell{})), \bottom{SortIdCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBusyCell{}} (\exists{SortBusyCell{}} (X0:SortSet{}, Lbl'-LT-'busy'-GT-'{}(X0:SortSet{})), \bottom{SortBusyCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCell{}} (\exists{SortGeneratedCounterCell{}} (X0:SortInt{}, Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{})), \bottom{SortGeneratedCounterCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortThreadsCellFragment{}} (\exists{SortThreadsCellFragment{}} (X0:SortThreadCellSet{}, Lbl'-LT-'threads'-GT-'-fragment{}(X0:SortThreadCellSet{})), \bottom{SortThreadsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCrntObjCell{}} (\exists{SortCrntObjCell{}} (X0:SortCrntClassCell{}, \exists{SortCrntObjCell{}} (X1:SortEnvStackCell{}, \exists{SortCrntObjCell{}} (X2:SortLocationCell{}, Lbl'-LT-'crntObj'-GT-'{}(X0:SortCrntClassCell{}, X1:SortEnvStackCell{}, X2:SortLocationCell{})))), \bottom{SortCrntObjCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInputCell{}} (\exists{SortInputCell{}} (X0:SortList{}, Lbl'-LT-'input'-GT-'{}(X0:SortList{})), \bottom{SortInputCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortId{}} (\top{SortId{}}(), \bottom{SortId{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortVals{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}(), \or{SortVals{}} (\exists{SortVals{}} (X0:SortVal{}, \exists{SortVals{}} (X1:SortVals{}, Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(X0:SortVal{}, X1:SortVals{}))), \bottom{SortVals{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBaseClassCell{}} (\exists{SortBaseClassCell{}} (X0:SortId{}, Lbl'-LT-'baseClass'-GT-'{}(X0:SortId{})), \bottom{SortBaseClassCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStream{}} (\exists{SortStream{}} (X0:SortK{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{})), \or{SortStream{}} (\exists{SortStream{}} (X0:SortInt{}, Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{})), \or{SortStream{}} (\exists{SortStream{}} (X0:SortInt{}, Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{})), \or{SortStream{}} (\exists{SortStream{}} (X0:SortString{}, \exists{SortStream{}} (X1:SortString{}, Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(X0:SortString{}, X1:SortString{}))), \bottom{SortStream{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortBool{}} (\top{SortBool{}}(), \bottom{SortBool{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortHoldsCellOpt{}} (LblnoHoldsCell{}(), \or{SortHoldsCellOpt{}} (\exists{SortHoldsCellOpt{}} (Val:SortHoldsCell{}, inj{SortHoldsCell{}, SortHoldsCellOpt{}} (Val:SortHoldsCell{})), \bottom{SortHoldsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortKCell{}} (\exists{SortKCell{}} (X0:SortK{}, Lbl'-LT-'k'-GT-'{}(X0:SortK{})), \bottom{SortKCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLocationCell{}} (Lbl'Stop'LocationCell{}(), \or{SortLocationCell{}} (\exists{SortLocationCell{}} (X0:SortK{}, Lbl'-LT-'location'-GT-'{}(X0:SortK{})), \bottom{SortLocationCell{}}())) [constructor{}()] // no junk
  axiom{} \or{SortClassNameCellOpt{}} (LblnoClassNameCell{}(), \or{SortClassNameCellOpt{}} (\exists{SortClassNameCellOpt{}} (Val:SortClassNameCell{}, inj{SortClassNameCell{}, SortClassNameCellOpt{}} (Val:SortClassNameCell{})), \bottom{SortClassNameCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortStoreCell{}} (\exists{SortStoreCell{}} (X0:SortMap{}, Lbl'-LT-'store'-GT-'{}(X0:SortMap{})), \bottom{SortStoreCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOFile{}} (\exists{SortIOFile{}} (X0:SortString{}, \exists{SortIOFile{}} (X1:SortInt{}, Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}))), \or{SortIOFile{}} (\exists{SortIOFile{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOFile{}} (Val:SortIOError{})), \bottom{SortIOFile{}}())) [constructor{}()] // no junk
  axiom{} \or{SortOutputCell{}} (\exists{SortOutputCell{}} (X0:SortList{}, Lbl'-LT-'output'-GT-'{}(X0:SortList{})), \bottom{SortOutputCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTerminatedCell{}} (\exists{SortTerminatedCell{}} (X0:SortSet{}, Lbl'-LT-'terminated'-GT-'{}(X0:SortSet{})), \bottom{SortTerminatedCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStoreCellOpt{}} (LblnoStoreCell{}(), \or{SortStoreCellOpt{}} (\exists{SortStoreCellOpt{}} (Val:SortStoreCell{}, inj{SortStoreCell{}, SortStoreCellOpt{}} (Val:SortStoreCell{})), \bottom{SortStoreCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFstackCellOpt{}} (LblnoFstackCell{}(), \or{SortFstackCellOpt{}} (\exists{SortFstackCellOpt{}} (Val:SortFstackCell{}, inj{SortFstackCell{}, SortFstackCellOpt{}} (Val:SortFstackCell{})), \bottom{SortFstackCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortThreadCell{}} (\exists{SortThreadCell{}} (X0:SortKCell{}, \exists{SortThreadCell{}} (X1:SortControlCell{}, \exists{SortThreadCell{}} (X2:SortEnvCell{}, \exists{SortThreadCell{}} (X3:SortHoldsCell{}, \exists{SortThreadCell{}} (X4:SortIdCell{}, Lbl'-LT-'thread'-GT-'{}(X0:SortKCell{}, X1:SortControlCell{}, X2:SortEnvCell{}, X3:SortHoldsCell{}, X4:SortIdCell{})))))), \bottom{SortThreadCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortThreadsCellOpt{}} (LblnoThreadsCell{}(), \or{SortThreadsCellOpt{}} (\exists{SortThreadsCellOpt{}} (Val:SortThreadsCell{}, inj{SortThreadsCell{}, SortThreadsCellOpt{}} (Val:SortThreadsCell{})), \bottom{SortThreadsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortString{}, inj{SortString{}, SortKResult{}} (Val:SortString{})), \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortVals{}, inj{SortVals{}, SortKResult{}} (Val:SortVals{})), \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortBool{}, inj{SortBool{}, SortKResult{}} (Val:SortBool{})), \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortInt{}, inj{SortInt{}, SortKResult{}} (Val:SortInt{})), \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortVal{}, inj{SortVal{}, SortKResult{}} (Val:SortVal{})), \bottom{SortKResult{}}()))))) [constructor{}()] // no junk
  axiom{} \or{SortOutputCellOpt{}} (LblnoOutputCell{}(), \or{SortOutputCellOpt{}} (\exists{SortOutputCellOpt{}} (Val:SortOutputCell{}, inj{SortOutputCell{}, SortOutputCellOpt{}} (Val:SortOutputCell{})), \bottom{SortOutputCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBaseClassCellOpt{}} (LblnoBaseClassCell{}(), \or{SortBaseClassCellOpt{}} (\exists{SortBaseClassCellOpt{}} (Val:SortBaseClassCell{}, inj{SortBaseClassCell{}, SortBaseClassCellOpt{}} (Val:SortBaseClassCell{})), \bottom{SortBaseClassCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortEnvCell{}} (\exists{SortEnvCell{}} (X0:SortMap{}, Lbl'-LT-'env'-GT-'{}(X0:SortMap{})), \bottom{SortEnvCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortClassesCellFragment{}} (\exists{SortClassesCellFragment{}} (X0:SortClassDataCellMap{}, Lbl'-LT-'classes'-GT-'-fragment{}(X0:SortClassDataCellMap{})), \bottom{SortClassesCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKCellOpt{}} (LblnoKCell{}(), \or{SortKCellOpt{}} (\exists{SortKCellOpt{}} (Val:SortKCell{}, inj{SortKCell{}, SortKCellOpt{}} (Val:SortKCell{})), \bottom{SortKCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortStmt{}, \exists{SortStmt{}} (X1:SortStmt{}, Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortId{}, \exists{SortStmt{}} (X1:SortBlock{}, Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortId{}, \exists{SortStmt{}} (X1:SortId{}, \exists{SortStmt{}} (X2:SortBlock{}, Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{})))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortStmt{}, \exists{SortStmt{}} (X1:SortExp{}, \exists{SortStmt{}} (X2:SortExp{}, \exists{SortStmt{}} (X3:SortBlock{}, Lblfor'LParUndsUndsSClnUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Exp'Unds'Exp'Unds'Block{}(X0:SortStmt{}, X1:SortExp{}, X2:SortExp{}, X3:SortBlock{}))))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, \exists{SortStmt{}} (X1:SortBlock{}, Lblif'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, \exists{SortStmt{}} (X1:SortBlock{}, \exists{SortStmt{}} (X2:SortBlock{}, Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{})))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortId{}, \exists{SortStmt{}} (X1:SortIds{}, \exists{SortStmt{}} (X2:SortBlock{}, Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{})))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExps{}, Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{})), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \or{SortStmt{}} (Lblreturn'SClnUnds'KOOL-SYNTAX'Unds'Stmt{}(), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortBlock{}, \exists{SortStmt{}} (X1:SortId{}, \exists{SortStmt{}} (X2:SortBlock{}, Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(X0:SortBlock{}, X1:SortId{}, X2:SortBlock{})))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExps{}, Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{})), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, \exists{SortStmt{}} (X1:SortBlock{}, Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}))), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortBlock{}, inj{SortBlock{}, SortStmt{}} (Val:SortBlock{})), \bottom{SortStmt{}}())))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortEnvStackCell{}} (\exists{SortEnvStackCell{}} (X0:SortList{}, Lbl'-LT-'envStack'-GT-'{}(X0:SortList{})), \bottom{SortEnvStackCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortControlCellFragment{}} (\exists{SortControlCellFragment{}} (X0:SortFstackCellOpt{}, \exists{SortControlCellFragment{}} (X1:SortXstackCellOpt{}, \exists{SortControlCellFragment{}} (X2:SortCrntObjCellOpt{}, Lbl'-LT-'control'-GT-'-fragment{}(X0:SortFstackCellOpt{}, X1:SortXstackCellOpt{}, X2:SortCrntObjCellOpt{})))), \bottom{SortControlCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortHoldsCell{}} (\exists{SortHoldsCell{}} (X0:SortMap{}, Lbl'-LT-'holds'-GT-'{}(X0:SortMap{})), \bottom{SortHoldsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInt{}} (\top{SortInt{}}(), \bottom{SortInt{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortFloat{}} (\top{SortFloat{}}(), \bottom{SortFloat{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortThreadsCell{}} (\exists{SortThreadsCell{}} (X0:SortThreadCellSet{}, Lbl'-LT-'threads'-GT-'{}(X0:SortThreadCellSet{})), \bottom{SortThreadsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortClassDataCellMap{}} (\exists{SortClassDataCellMap{}} (Val:SortClassDataCell{}, inj{SortClassDataCell{}, SortClassDataCellMap{}} (Val:SortClassDataCell{})), \bottom{SortClassDataCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCell{}} (\exists{SortGeneratedTopCell{}} (X0:SortTCell{}, \exists{SortGeneratedTopCell{}} (X1:SortGeneratedCounterCell{}, Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}))), \bottom{SortGeneratedTopCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortXstackCell{}} (\exists{SortXstackCell{}} (X0:SortList{}, Lbl'-LT-'xstack'-GT-'{}(X0:SortList{})), \bottom{SortXstackCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortEnvCellOpt{}} (LblnoEnvCell{}(), \or{SortEnvCellOpt{}} (\exists{SortEnvCellOpt{}} (Val:SortEnvCell{}, inj{SortEnvCell{}, SortEnvCellOpt{}} (Val:SortEnvCell{})), \bottom{SortEnvCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBlock{}} (\exists{SortBlock{}} (X0:SortStmt{}, Lbl'LBraUndsRBraUnds'KOOL-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{})), \or{SortBlock{}} (Lbl'LBraRBraUnds'KOOL-SYNTAX'Unds'Block{}(), \bottom{SortBlock{}}())) [constructor{}()] // no junk
  axiom{} \or{SortVal{}} (\exists{SortVal{}} (X0:SortInt{}, \exists{SortVal{}} (X1:SortInt{}, Lblarray'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Int'Unds'Int{}(X0:SortInt{}, X1:SortInt{}))), \or{SortVal{}} (\exists{SortVal{}} (X0:SortInt{}, Lblloc'LParUndsRParUnds'KOOL'Unds'Val'Unds'Int{}(X0:SortInt{})), \or{SortVal{}} (\exists{SortVal{}} (X0:SortId{}, \exists{SortVal{}} (X1:SortInt{}, \exists{SortVal{}} (X2:SortIds{}, \exists{SortVal{}} (X3:SortStmt{}, LblmethodClosure'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'Int'Unds'Ids'Unds'Stmt{}(X0:SortId{}, X1:SortInt{}, X2:SortIds{}, X3:SortStmt{}))))), \or{SortVal{}} (Lblnothing'Unds'KOOL'Unds'Val{}(), \or{SortVal{}} (\exists{SortVal{}} (X0:SortId{}, \exists{SortVal{}} (X1:SortList{}, LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(X0:SortId{}, X1:SortList{}))), \or{SortVal{}} (\exists{SortVal{}} (Val:SortString{}, inj{SortString{}, SortVal{}} (Val:SortString{})), \or{SortVal{}} (\exists{SortVal{}} (Val:SortBool{}, inj{SortBool{}, SortVal{}} (Val:SortBool{})), \or{SortVal{}} (\exists{SortVal{}} (Val:SortInt{}, inj{SortInt{}, SortVal{}} (Val:SortInt{})), \bottom{SortVal{}}())))))))) [constructor{}()] // no junk
  axiom{} \or{SortDeclarationsCellOpt{}} (LblnoDeclarationsCell{}(), \or{SortDeclarationsCellOpt{}} (\exists{SortDeclarationsCellOpt{}} (Val:SortDeclarationsCell{}, inj{SortDeclarationsCell{}, SortDeclarationsCellOpt{}} (Val:SortDeclarationsCell{})), \bottom{SortDeclarationsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFstackCell{}} (\exists{SortFstackCell{}} (X0:SortList{}, Lbl'-LT-'fstack'-GT-'{}(X0:SortList{})), \bottom{SortFstackCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), \or{SortExps{}} (\exists{SortExps{}} (X0:SortExp{}, \exists{SortExps{}} (X1:SortExps{}, Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \or{SortExps{}} (\exists{SortExps{}} (Val:SortVals{}, inj{SortVals{}, SortExps{}} (Val:SortVals{})), \bottom{SortExps{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortClassesCell{}} (\exists{SortClassesCell{}} (X0:SortClassDataCellMap{}, Lbl'-LT-'classes'-GT-'{}(X0:SortClassDataCellMap{})), \bottom{SortClassesCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBusyCellOpt{}} (LblnoBusyCell{}(), \or{SortBusyCellOpt{}} (\exists{SortBusyCellOpt{}} (Val:SortBusyCell{}, inj{SortBusyCell{}, SortBusyCellOpt{}} (Val:SortBusyCell{})), \bottom{SortBusyCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortClassDataCellFragment{}} (\exists{SortClassDataCellFragment{}} (X0:SortClassNameCellOpt{}, \exists{SortClassDataCellFragment{}} (X1:SortBaseClassCellOpt{}, \exists{SortClassDataCellFragment{}} (X2:SortDeclarationsCellOpt{}, Lbl'-LT-'classData'-GT-'-fragment{}(X0:SortClassNameCellOpt{}, X1:SortBaseClassCellOpt{}, X2:SortDeclarationsCellOpt{})))), \bottom{SortClassDataCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortXstackCellOpt{}} (LblnoXstackCell{}(), \or{SortXstackCellOpt{}} (\exists{SortXstackCellOpt{}} (Val:SortXstackCell{}, inj{SortXstackCell{}, SortXstackCellOpt{}} (Val:SortXstackCell{})), \bottom{SortXstackCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortEnvStackCellOpt{}} (LblnoEnvStackCell{}(), \or{SortEnvStackCellOpt{}} (\exists{SortEnvStackCellOpt{}} (Val:SortEnvStackCell{}, inj{SortEnvStackCell{}, SortEnvStackCellOpt{}} (Val:SortEnvStackCell{})), \bottom{SortEnvStackCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortIOString{}} (\exists{SortIOString{}} (Val:SortString{}, inj{SortString{}, SortIOString{}} (Val:SortString{})), \or{SortIOString{}} (\exists{SortIOString{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOString{}} (Val:SortIOError{})), \bottom{SortIOString{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCellFragment{}} (\exists{SortGeneratedTopCellFragment{}} (X0:SortTCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X1:SortGeneratedCounterCellOpt{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}))), \bottom{SortGeneratedTopCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOError{}} (Lbl'Hash'E2BIG{}(), \or{SortIOError{}} (Lbl'Hash'EACCES{}(), \or{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), \or{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), \or{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'EAGAIN{}(), \or{SortIOError{}} (Lbl'Hash'EALREADY{}(), \or{SortIOError{}} (Lbl'Hash'EBADF{}(), \or{SortIOError{}} (Lbl'Hash'EBUSY{}(), \or{SortIOError{}} (Lbl'Hash'ECHILD{}(), \or{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), \or{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), \or{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), \or{SortIOError{}} (Lbl'Hash'EDEADLK{}(), \or{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), \or{SortIOError{}} (Lbl'Hash'EDOM{}(), \or{SortIOError{}} (Lbl'Hash'EEXIST{}(), \or{SortIOError{}} (Lbl'Hash'EFAULT{}(), \or{SortIOError{}} (Lbl'Hash'EFBIG{}(), \or{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), \or{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), \or{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), \or{SortIOError{}} (Lbl'Hash'EINTR{}(), \or{SortIOError{}} (Lbl'Hash'EINVAL{}(), \or{SortIOError{}} (Lbl'Hash'EIO{}(), \or{SortIOError{}} (Lbl'Hash'EISCONN{}(), \or{SortIOError{}} (Lbl'Hash'EISDIR{}(), \or{SortIOError{}} (Lbl'Hash'ELOOP{}(), \or{SortIOError{}} (Lbl'Hash'EMFILE{}(), \or{SortIOError{}} (Lbl'Hash'EMLINK{}(), \or{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), \or{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), \or{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), \or{SortIOError{}} (Lbl'Hash'ENETRESET{}(), \or{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), \or{SortIOError{}} (Lbl'Hash'ENFILE{}(), \or{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), \or{SortIOError{}} (Lbl'Hash'ENODEV{}(), \or{SortIOError{}} (Lbl'Hash'ENOENT{}(), \or{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), \or{SortIOError{}} (Lbl'Hash'ENOLCK{}(), \or{SortIOError{}} (Lbl'Hash'ENOMEM{}(), \or{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), \or{SortIOError{}} (Lbl'Hash'ENOSPC{}(), \or{SortIOError{}} (Lbl'Hash'ENOSYS{}(), \or{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), \or{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), \or{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), \or{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), \or{SortIOError{}} (Lbl'Hash'ENOTTY{}(), \or{SortIOError{}} (Lbl'Hash'ENXIO{}(), \or{SortIOError{}} (Lbl'Hash'EOF{}(), \or{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), \or{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), \or{SortIOError{}} (Lbl'Hash'EPERM{}(), \or{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'EPIPE{}(), \or{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), \or{SortIOError{}} (Lbl'Hash'ERANGE{}(), \or{SortIOError{}} (Lbl'Hash'EROFS{}(), \or{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), \or{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'ESPIPE{}(), \or{SortIOError{}} (Lbl'Hash'ESRCH{}(), \or{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), \or{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), \or{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), \or{SortIOError{}} (Lbl'Hash'EXDEV{}(), \or{SortIOError{}} (\exists{SortIOError{}} (X0:SortInt{}, Lbl'Hash'unknownIOError{}(X0:SortInt{})), \bottom{SortIOError{}}())))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortCrntClassCell{}} (\exists{SortCrntClassCell{}} (X0:SortId{}, Lbl'-LT-'crntClass'-GT-'{}(X0:SortId{})), \bottom{SortCrntClassCell{}}()) [constructor{}()] // no junk
  axiom{R} \equals{SortExps{}, R} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), inj{SortVals{}, SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())] // overloaded production
  axiom{R} \equals{SortExps{}, R} (Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}} (K0:SortVal{}),inj{SortVals{}, SortExps{}} (K1:SortVals{})), inj{SortVals{}, SortExps{}} (Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(K0:SortVal{},K1:SortVals{}))) [overload{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(), Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}())] // overloaded production

// rules
// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,B1,_Gen0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2), org.kframework.attributes.Location(Location(2222,8,2222,59)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        VarC:SortBool{},
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarB1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            Var'Unds'Gen0:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB1:SortK{},
        \top{SortK{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2222,8,2222,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2")]

// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,_Gen0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa), org.kframework.attributes.Location(Location(2223,8,2223,67)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarC:SortBool{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            Var'Unds'Gen0:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            VarB2:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB2:SortK{},
        \top{SortK{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2223,8,2223,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa")]

// rule `#open(_)_K-IO_IOInt_String`(S)=>`#open(_,_)_K-IO_IOInt_String_String`(S,#token("\"r+\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ad2779cd54b9009119458217cae5138026cc4ff244e54c28e64db21100f63d9), org.kframework.attributes.Location(Location(2410,8,2410,48)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),
          \top{R} ()
        )),
    \equals{SortIOInt{},R} (
      Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(X0:SortString{}),
     \and{SortIOInt{}} (
       Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(VarS:SortString{},\dv{SortString{}}("r+")),
        \top{SortIOInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2410,8,2410,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7ad2779cd54b9009119458217cae5138026cc4ff244e54c28e64db21100f63d9")]

// rule `#stderr_K-IO_Int`(.KList)=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(75e0a8082acda4cf1e29caa6aaafb7f9a421e16421a41f2006943d6fab17a162), org.kframework.attributes.Location(Location(2507,8,2507,20)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("2"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2507,8,2507,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("75e0a8082acda4cf1e29caa6aaafb7f9a421e16421a41f2006943d6fab17a162")]

// rule `#stdin_K-IO_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c7ffdc9908c28a954521816d680f4e5ec44a679c7231a8dd09d4700f50b6d8c3), org.kframework.attributes.Location(Location(2505,8,2505,19)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2505,8,2505,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c7ffdc9908c28a954521816d680f4e5ec44a679c7231a8dd09d4700f50b6d8c3")]

// rule `#stdout_K-IO_Int`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4ad4f379ff9db687ff9dfd1b15052edbcd3342a2ed262ecdd38c769e177a592c), org.kframework.attributes.Location(Location(2506,8,2506,20)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("1"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2506,8,2506,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4ad4f379ff9db687ff9dfd1b15052edbcd3342a2ed262ecdd38c769e177a592c")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(.K),_Gen0,_Gen1,`<holds>`(H),`<id>`(T))),_DotVar3)),_Gen2,`<busy>`(Busy),`<terminated>`(`_Set_`(`.Set`(.KList),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`.ThreadCellSet`(.KList),_DotVar3)),_Gen2,`<busy>`(`Set:difference`(Busy,`keys(_)_MAP_Set_Map`(H))),`<terminated>`(`_Set_`(`SetItem`(inj{Int,KItem}(T)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(85d175a002a5ed59b603970eae9644d76850a63920b06689c202db5552be464e), org.kframework.attributes.Location(Location(318,8,320,59)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule6LHS{}(SortSet{},SortMap{},SortInt{},SortGeneratedCounterCell{},SortSet{},SortThreadCellSet{},SortControlCell{},SortEnvCell{},SortStoreCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule6LHS{}(VarBusy:SortSet{},VarH:SortMap{},VarT:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortSet{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortInputCell{},Var'Unds'Gen4:SortOutputCell{},Var'Unds'Gen5:SortNextLocCell{},Var'Unds'Gen6:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(dotk{}()),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(VarH:SortMap{}),Lbl'-LT-'id'-GT-'{}(VarT:SortInt{}))),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(VarBusy:SortSet{}),Lbl'-LT-'terminated'-GT-'{}(Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),Var'Unds'DotVar2:SortSet{})),Var'Unds'Gen3:SortInputCell{},Var'Unds'Gen4:SortOutputCell{},Var'Unds'Gen5:SortNextLocCell{},Var'Unds'Gen6:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule6LHS{}(VarBusy:SortSet{},VarH:SortMap{},VarT:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortSet{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortInputCell{},Var'Unds'Gen4:SortOutputCell{},Var'Unds'Gen5:SortNextLocCell{},Var'Unds'Gen6:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(Lbl'Stop'ThreadCellSet{}(),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(LblSet'Coln'difference{}(VarBusy:SortSet{},Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarH:SortMap{}))),Lbl'-LT-'terminated'-GT-'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortInt{}, SortKItem{}}(VarT:SortInt{})),Var'Unds'DotVar2:SortSet{})),Var'Unds'Gen3:SortInputCell{},Var'Unds'Gen4:SortOutputCell{},Var'Unds'Gen5:SortNextLocCell{},Var'Unds'Gen6:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(318,8,320,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("85d175a002a5ed59b603970eae9644d76850a63920b06689c202db5552be464e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(`addEnvLayer_KOOL_KItem`(.KList)~>_DotVar4),`<control>`(_Gen0,_Gen1,`<crntObj>`(`<crntClass>`(Class),`<envStack>`(`_List_`(`.List`(.KList),_DotVar7)),_DotVar6)),`<env>`(Env),_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),`<control>`(_Gen0,_Gen1,`<crntObj>`(`<crntClass>`(Class),`<envStack>`(`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(Class,Env)),_DotVar7)),_DotVar6)),`<env>`(`.Map`(.KList)),_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9754d5b375ee16ee0a7311f1188a0813cb24d90b03be5cafa9f8d4bc6d89f87f), org.kframework.attributes.Location(Location(409,8,412,78)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule7LHS{}(SortId{},SortMap{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortLocationCell{},SortList{},SortFstackCell{},SortXstackCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule7LHS{}(VarClass:SortId{},VarEnv:SortMap{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar6:SortLocationCell{},Var'Unds'DotVar7:SortList{},Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LbladdEnvLayer'Unds'KOOL'Unds'KItem{}(),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarClass:SortId{}),Lbl'-LT-'envStack'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar7:SortList{})),Var'Unds'DotVar6:SortLocationCell{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule7LHS{}(VarClass:SortId{},VarEnv:SortMap{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar6:SortLocationCell{},Var'Unds'DotVar7:SortList{},Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarClass:SortId{}),Lbl'-LT-'envStack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(VarClass:SortId{},VarEnv:SortMap{})),Var'Unds'DotVar7:SortList{})),Var'Unds'DotVar6:SortLocationCell{})),Lbl'-LT-'env'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(409,8,412,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9754d5b375ee16ee0a7311f1188a0813cb24d90b03be5cafa9f8d4bc6d89f87f")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(`create(_)_KOOL_KItem_Id`(Class)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(Class),`<classData>`(`<className>`(Class),`<baseClass>`(Class1),`<declarations>`(S))),_DotVar5)) #as _Gen13),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(`create(_)_KOOL_KItem_Id`(Class1)~>`setCrntClass(_)_KOOL_KItem_Id`(Class)~>S~>`addEnvLayer_KOOL_KItem`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen13),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f619c3faf9b76f43ca385b27d8206567bdbe97a2c75c1e87c65e452ac6effcfe), org.kframework.attributes.Location(Location(394,8,398,40)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule8LHS{}(SortId{},SortId{},SortK{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortClassDataCellMap{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule8LHS{}(VarClass:SortId{},VarClass1:SortId{},VarS:SortK{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen13:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(VarClass:SortId{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},\and{SortClassesCell{}}(Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarClass:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarClass:SortId{}),Lbl'-LT-'baseClass'-GT-'{}(VarClass1:SortId{}),Lbl'-LT-'declarations'-GT-'{}(VarS:SortK{}))),Var'Unds'DotVar5:SortClassDataCellMap{})),Var'Unds'Gen13:SortClassesCell{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule8LHS{}(VarClass:SortId{},VarClass1:SortId{},VarS:SortK{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen13:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(VarClass1:SortId{}),kseq{}(LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(VarClass:SortId{}),append{}(VarS:SortK{},kseq{}(LbladdEnvLayer'Unds'KOOL'Unds'KItem{}(),Var'Unds'DotVar4:SortK{}))))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(394,8,398,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f619c3faf9b76f43ca385b27d8206567bdbe97a2c75c1e87c65e452ac6effcfe")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(`create(_)_KOOL_KItem_Id`(#token("Object","Id"))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(587318064b81873ddab23fff7855098bc62fc3285448e8305af9b76667221a13), org.kframework.attributes.Location(Location(400,8,400,39)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule9LHS{}(SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule9LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(\dv{SortId{}}("Object")),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule9LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(400,8,400,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("587318064b81873ddab23fff7855098bc62fc3285448e8305af9b76667221a13")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(`execute_KOOL_KItem`(.KList)),_Gen0,`<env>`(`.Map`(.KList)),_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`_;_KOOL-SYNTAX_Stmt_Exp`(`new_(_)_KOOL-SYNTAX_Exp_Id_Exps`(#token("Main","Id"),inj{Vals,Exps}(`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))),_Gen0,`<env>`(`.Map`(.KList)),_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(156e4e821923b1aea744965c41690d3abb0ffb28c667d9da4c184d06633d200e), org.kframework.attributes.Location(Location(554,8,555,25)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule10LHS{}(SortGeneratedCounterCell{},SortThreadCellSet{},SortControlCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule10LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lblexecute'Unds'KOOL'Unds'KItem{}(),dotk{}())),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule10LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(\dv{SortId{}}("Main"),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),dotk{}())),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(554,8,555,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("156e4e821923b1aea744965c41690d3abb0ffb28c667d9da4c184d06633d200e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer!__KOOL-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`!__KOOL-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(bba496d07025cecf0dacb4726cbaa76ea8c4538788946926fca28be8ce6d4b8f), cool, cool-like, org.kframework.attributes.Location(Location(40,18,40,50)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule11LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule11LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule11LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,18,40,50)"), UNIQUE'Unds'ID{}("bba496d07025cecf0dacb4726cbaa76ea8c4538788946926fca28be8ce6d4b8f")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer(_)__KOOL-SYNTAX_Exp_Id_Exp1_`(inj{Id,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`(_)__KOOL-SYNTAX_Exp_Id_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(eea9253288a9fc9ebf1bf9223559d62f23486e85d61085c45ab47189fabc4ca9), cool, cool-like, org.kframework.attributes.Location(Location(18,18,18,53)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict(2)]
  alias rule12LHS{}(SortExp{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule12LHS{}(VarHOLE:SortExp{},VarK0:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule12LHS{}(VarHOLE:SortExp{},VarK0:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(VarK0:SortId{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,18,18,53)"), UNIQUE'Unds'ID{}("eea9253288a9fc9ebf1bf9223559d62f23486e85d61085c45ab47189fabc4ca9")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer-__KOOL-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`-__KOOL-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(4e65bb820f31441f8358ddcf2ea8f1ae8c8eddf0044b3a781c73dd8835e89b36), cool, cool-like, org.kframework.attributes.Location(Location(23,18,23,50)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule13LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule13LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule13LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,18,23,50)"), UNIQUE'Unds'ID{}("4e65bb820f31441f8358ddcf2ea8f1ae8c8eddf0044b3a781c73dd8835e89b36")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_!=__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(2282ca1e8325487c0f44b8d08efe4d7836b964894f77da175ad52bcc6e854e9f), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(39,18,39,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule14LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule14LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule14LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,18,39,61)"), UNIQUE'Unds'ID{}("2282ca1e8325487c0f44b8d08efe4d7836b964894f77da175ad52bcc6e854e9f")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_!=__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(9c850f2987259cc9b5a360344ebf5a4e2339e9f7fc833c0df6e743ac44919e0e), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(39,18,39,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule15LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule15LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule15LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,18,39,61)"), UNIQUE'Unds'ID{}("9c850f2987259cc9b5a360344ebf5a4e2339e9f7fc833c0df6e743ac44919e0e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_%__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(2382a41e9b57fb78f6d331057706176828ed4d98718bb1a19b60d5ae71e8730e), cool, cool-like, left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule16LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule16LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule16LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), UNIQUE'Unds'ID{}("2382a41e9b57fb78f6d331057706176828ed4d98718bb1a19b60d5ae71e8730e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_%__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(841fe6efef5ed8616e1b97196ae5c4d7721f1b0c991f899651b6820c5569ef11), cool, cool-like, left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule17LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule17LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule17LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), UNIQUE'Unds'ID{}("841fe6efef5ed8616e1b97196ae5c4d7721f1b0c991f899651b6820c5569ef11")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_&&__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_&&__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(d413d4d2a16800d6e58ea171ff6d6120e1fbc2e42e0295e153740e6d43c42631), cool, cool-like, left, org.kframework.attributes.Location(Location(42,18,42,59)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict(1)]
  alias rule18LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule18LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule18LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(42,18,42,59)"), UNIQUE'Unds'ID{}("d413d4d2a16800d6e58ea171ff6d6120e1fbc2e42e0295e153740e6d43c42631")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_(_)_KOOL-SYNTAX_Exp_Exp_Exps0_`(inj{Id,KItem}(_Gen0),inj{Exps,KItem}(_Gen1))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(`_.__KOOL-SYNTAX_Exp_Exp_Id`(HOLE,_Gen0),_Gen1))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(1cfb9b0fdae8901365c03d215495ebe513f7ebb5fc963ed4dab967fbb1bf41ba), cool, cool-like, org.kframework.attributes.Location(Location(467,11,467,45)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule19LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortId{},SortExps{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortControlCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{}) : SortGeneratedTopCell{}
  where rule19LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortExps{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}()),kseq{}(inj{SortExps{}, SortKItem{}}(Var'Unds'Gen1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule19LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortExps{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortId{}),Var'Unds'Gen1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(467,11,467,45)"), UNIQUE'Unds'ID{}("1cfb9b0fdae8901365c03d215495ebe513f7ebb5fc963ed4dab967fbb1bf41ba")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_(_)_KOOL-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(49ab7a26b655d219b150660638fe0361929cafb1c7b9b45b340b34f624247060), cool, cool-like, org.kframework.attributes.Location(Location(22,18,22,53)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict(2)]
  alias rule20LHS{}(SortExps{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule20LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule20LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,53)"), UNIQUE'Unds'ID{}("49ab7a26b655d219b150660638fe0361929cafb1c7b9b45b340b34f624247060")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_*__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(bc0c21a245244ef318f5449a2cd19fb54fa2715ba76be3794bdb63d824511346), cool, cool-like, left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule21LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule21LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule21LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), UNIQUE'Unds'ID{}("bc0c21a245244ef318f5449a2cd19fb54fa2715ba76be3794bdb63d824511346")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_*__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(5989f04a28b52da2589cfa02af5864b40b342e1b2c7702a6d7bf62cac8e5b919), cool, cool-like, left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule22LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule22LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule22LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), UNIQUE'Unds'ID{}("5989f04a28b52da2589cfa02af5864b40b342e1b2c7702a6d7bf62cac8e5b919")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_+__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(eeec22e887502bfe24ad0a89273364197fc46528635c8db275d9ab24f336f606), cool, cool-like, left, org.kframework.attributes.Location(Location(31,18,31,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule23LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule23LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule23LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,56)"), UNIQUE'Unds'ID{}("eeec22e887502bfe24ad0a89273364197fc46528635c8db275d9ab24f336f606")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_+__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(75fd470186c24ad7fbf0b2f371c5a67cc8498c53698a0d5e128fe18f280690e2), cool, cool-like, left, org.kframework.attributes.Location(Location(31,18,31,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule24LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule24LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule24LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,56)"), UNIQUE'Unds'ID{}("75fd470186c24ad7fbf0b2f371c5a67cc8498c53698a0d5e128fe18f280690e2")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_,__KOOL-SYNTAX_Exps_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(858804e09d3654064a18dc28278f2ac792df2f164e2d3f888f49a9c82ed341a1), cool, cool-like, klabel(exps), org.kframework.attributes.Location(Location(49,19,49,64)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), right, strict, userList(*)]
  alias rule25LHS{}(SortExp{},SortExps{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule25LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule25LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), userList{}("*"), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), right{}(), klabel{}("exps"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,64)"), UNIQUE'Unds'ID{}("858804e09d3654064a18dc28278f2ac792df2f164e2d3f888f49a9c82ed341a1")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_,__KOOL-SYNTAX_Exps_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(01db7260225b78a2563f077ee54fb2e463987214be8a0743c796eaff1157aabc), cool, cool-like, klabel(exps), org.kframework.attributes.Location(Location(49,19,49,64)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), right, strict, userList(*)]
  alias rule26LHS{}(SortExps{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule26LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule26LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), userList{}("*"), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), right{}(), klabel{}("exps"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,64)"), UNIQUE'Unds'ID{}("01db7260225b78a2563f077ee54fb2e463987214be8a0743c796eaff1157aabc")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_-__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(aaec93e0dd234214aee3717b5b7b2d779c4342f92302b6eed6fd8fe396b59c01), cool, cool-like, left, org.kframework.attributes.Location(Location(32,18,32,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule27LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule27LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule27LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,56)"), UNIQUE'Unds'ID{}("aaec93e0dd234214aee3717b5b7b2d779c4342f92302b6eed6fd8fe396b59c01")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_-__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(0bac34ec67e25665515c1c7976ed40e7347e6d27e2adcde14ef6cacdf4b220bb), cool, cool-like, left, org.kframework.attributes.Location(Location(32,18,32,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule28LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule28LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule28LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,56)"), UNIQUE'Unds'ID{}("0bac34ec67e25665515c1c7976ed40e7347e6d27e2adcde14ef6cacdf4b220bb")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_.__KOOL-SYNTAX_Exp_Exp_Id0_`(inj{Id,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_.__KOOL-SYNTAX_Exp_Exp_Id`(HOLE,_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(ec0b37dbc6456fd4fb709e316c86f20d0578a2697f0009920f3d00776c6cabfd), cool, cool-like, org.kframework.attributes.Location(Location(429,11,429,44)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule29LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortId{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule29LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule29LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(429,11,429,44)"), UNIQUE'Unds'ID{}("ec0b37dbc6456fd4fb709e316c86f20d0578a2697f0009920f3d00776c6cabfd")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_/__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(677dcf1861c9bf1b85fd5f9c69d690aee8e88118c36b19e05668ae7349e3d163), cool, cool-like, left, org.kframework.attributes.Location(Location(28,18,28,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule30LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule30LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule30LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,18,28,56)"), UNIQUE'Unds'ID{}("677dcf1861c9bf1b85fd5f9c69d690aee8e88118c36b19e05668ae7349e3d163")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_/__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(16f731930255c95832db27bfd26d80a702c7b7f02627b07e9fa2c6a1aae8723e), cool, cool-like, left, org.kframework.attributes.Location(Location(28,18,28,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule31LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule31LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule31LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,18,28,56)"), UNIQUE'Unds'ID{}("16f731930255c95832db27bfd26d80a702c7b7f02627b07e9fa2c6a1aae8723e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_;_KOOL-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`_;_KOOL-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(74852105a9fc94760930a3a30f26477481fdddea6431145d338c5eb067eb18c9), cool, cool-like, org.kframework.attributes.Location(Location(57,19,57,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule32LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule32LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule32LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,19,57,65)"), UNIQUE'Unds'ID{}("74852105a9fc94760930a3a30f26477481fdddea6431145d338c5eb067eb18c9")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<=__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(6bb27bebe641f523217f19d8435800363afa40ac84474b89347157ef5e0066f7), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule33LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule33LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule33LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), UNIQUE'Unds'ID{}("6bb27bebe641f523217f19d8435800363afa40ac84474b89347157ef5e0066f7")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<=__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(c75e9c56749f523e9927983942fe6c0db708a9441c0cfa4eea3dba2363bbe3da), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule34LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule34LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule34LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), UNIQUE'Unds'ID{}("c75e9c56749f523e9927983942fe6c0db708a9441c0cfa4eea3dba2363bbe3da")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(269cef478a659d8d3afb026360badbfd2424684049a850d15dbdf5170c670c41), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule35LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule35LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule35LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), UNIQUE'Unds'ID{}("269cef478a659d8d3afb026360badbfd2424684049a850d15dbdf5170c670c41")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(f19267c153752cf0ec4077f353f1ad548db9ba7421c250905b10f49dfa0d593b), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule36LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule36LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule36LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), UNIQUE'Unds'ID{}("f19267c153752cf0ec4077f353f1ad548db9ba7421c250905b10f49dfa0d593b")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_==__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(dd51a4316615a48faef01ee222bfa38e91cdf227579373ff37708d606e1ca20e), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(38,18,38,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule37LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule37LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule37LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,61)"), UNIQUE'Unds'ID{}("dd51a4316615a48faef01ee222bfa38e91cdf227579373ff37708d606e1ca20e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_==__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(4315421dfdda505b849c9cb44007e4d8418b4e68408dc673dba0e55fb59f9931), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(38,18,38,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule38LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule38LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule38LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,61)"), UNIQUE'Unds'ID{}("4315421dfdda505b849c9cb44007e4d8418b4e68408dc673dba0e55fb59f9931")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_=__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_=__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(452d6d9b3b3869662bce93905fc1c4e87887ed9df31828bc6c4a2cd6a9d1f34e), cool, cool-like, org.kframework.attributes.Location(Location(45,18,45,60)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), right, strict(2)]
  alias rule39LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule39LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule39LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), right{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,18,45,60)"), UNIQUE'Unds'ID{}("452d6d9b3b3869662bce93905fc1c4e87887ed9df31828bc6c4a2cd6a9d1f34e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>=__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(1fae9c5948ab4cfb4c37aaa7154b8d1ec0dc30e5b1a8c00e7c2c37d7ef5eb5eb), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule40LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule40LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule40LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), UNIQUE'Unds'ID{}("1fae9c5948ab4cfb4c37aaa7154b8d1ec0dc30e5b1a8c00e7c2c37d7ef5eb5eb")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>=__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e4295a01d8880d7d7cb3bcbd7be33d0e6a64475331646f26b0a53c930d103e85), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule41LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule41LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule41LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), UNIQUE'Unds'ID{}("e4295a01d8880d7d7cb3bcbd7be33d0e6a64475331646f26b0a53c930d103e85")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(b02cb16b87c99af44325d8893cdfd0f0b339f4012e4d022ab4befc5b5a5ad44c), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule42LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule42LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule42LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), UNIQUE'Unds'ID{}("b02cb16b87c99af44325d8893cdfd0f0b339f4012e4d022ab4befc5b5a5ad44c")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(46bbb380655328b939c68cc9570507d2bb5c5427480b883f90a24c5aa9109eec), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule43LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule43LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule43LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), UNIQUE'Unds'ID{}("46bbb380655328b939c68cc9570507d2bb5c5427480b883f90a24c5aa9109eec")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_[_]_KOOL-SYNTAX_Exp_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(fb5a8363a5c7c1f3d9baa3d3cbc45914a95e7cf4af6a9ee835ac563d8bd9b217), cool, cool-like, org.kframework.attributes.Location(Location(21,18,21,50)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule44LHS{}(SortExp{},SortExps{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule44LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule44LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), UNIQUE'Unds'ID{}("fb5a8363a5c7c1f3d9baa3d3cbc45914a95e7cf4af6a9ee835ac563d8bd9b217")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_[_]_KOOL-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(fefed627a9554d5fa996910e06ea0433303b61ef7a2f11973f0a48b118c2fe30), cool, cool-like, org.kframework.attributes.Location(Location(21,18,21,50)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule45LHS{}(SortExps{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule45LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule45LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), UNIQUE'Unds'ID{}("fefed627a9554d5fa996910e06ea0433303b61ef7a2f11973f0a48b118c2fe30")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_instanceOf__KOOL-SYNTAX_Exp_Exp_Id0_`(inj{Id,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_instanceOf__KOOL-SYNTAX_Exp_Exp_Id`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e40973aa0f09e5ea672dc7dcde2533cee11c58e9a22041a0db0572709c3e2e0e), cool, cool-like, org.kframework.attributes.Location(Location(17,18,17,53)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict(1)]
  alias rule46LHS{}(SortExp{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule46LHS{}(VarHOLE:SortExp{},VarK1:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK1:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule46LHS{}(VarHOLE:SortExp{},VarK1:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},VarK1:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,18,17,53)"), UNIQUE'Unds'ID{}("e40973aa0f09e5ea672dc7dcde2533cee11c58e9a22041a0db0572709c3e2e0e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_||__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_||__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(6dad3ed6e27bf32878c539c26a5093989433c2f877f9acf62d9f7c50c158a5c2), cool, cool-like, left, org.kframework.attributes.Location(Location(43,18,43,59)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict(1)]
  alias rule47LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule47LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule47LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,18,43,59)"), UNIQUE'Unds'ID{}("6dad3ed6e27bf32878c539c26a5093989433c2f877f9acf62d9f7c50c158a5c2")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezeracquire_;_KOOL-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`acquire_;_KOOL-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(01adf9c1f913efb4c6fe27970f599ca0271a1777d277748411bbfdb61a08c2a8), cool, cool-like, org.kframework.attributes.Location(Location(68,19,68,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule48LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule48LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule48LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,19,68,65)"), UNIQUE'Unds'ID{}("01adf9c1f913efb4c6fe27970f599ca0271a1777d277748411bbfdb61a08c2a8")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerif(_)_else__KOOL-SYNTAX_Stmt_Exp_Block_Block0_`(inj{Block,KItem}(K1),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__KOOL-SYNTAX_Stmt_Exp_Block_Block`(HOLE,K1,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(023b916c6e58f8bfb2accb086b9871f1b1b77fc88e3c485fcaffb75a341d64e0), avoid, cool, cool-like, org.kframework.attributes.Location(Location(58,19,58,75)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict(1)]
  alias rule49LHS{}(SortExp{},SortBlock{},SortBlock{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule49LHS{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule49LHS{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,19,58,75)"), UNIQUE'Unds'ID{}("023b916c6e58f8bfb2accb086b9871f1b1b77fc88e3c485fcaffb75a341d64e0"), avoid{}()]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerjoin_;_KOOL-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`join_;_KOOL-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(86c8487fe267f8db78f77db25ca6938d59f0223d5b13812e90d4400f59264c8f), cool, cool-like, org.kframework.attributes.Location(Location(67,19,67,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule50LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule50LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule50LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,19,67,65)"), UNIQUE'Unds'ID{}("86c8487fe267f8db78f77db25ca6938d59f0223d5b13812e90d4400f59264c8f")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerlvalue(_)_KOOL_Exp_K0_`(inj{Exps,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(HOLE,_Gen0))))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(09faae498bb82225d82fa84d9c2c5c24732964fe83026babd25395c150833af7), cool, cool-like, org.kframework.attributes.Location(Location(257,11,257,37)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule51LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortExps{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule51LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExps{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Var'Unds'Gen0:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule51LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExps{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExps{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,11,257,37)"), UNIQUE'Unds'ID{}("09faae498bb82225d82fa84d9c2c5c24732964fe83026babd25395c150833af7")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerlvalue(_)_KOOL_Exp_K0_2`(inj{Id,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(`_.__KOOL-SYNTAX_Exp_Exp_Id`(HOLE,_Gen0))))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(b2b4657a5a0daed3b524d391153d269cd082d24c63be5851492cd7511537cd6e), cool, cool-like, org.kframework.attributes.Location(Location(237,11,237,34)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule52LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortId{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule52LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule52LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortId{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(237,11,237,34)"), UNIQUE'Unds'ID{}("b2b4657a5a0daed3b524d391153d269cd082d24c63be5851492cd7511537cd6e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerlvalue(_)_KOOL_Exp_K1_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(_Gen0,HOLE))))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(ff8857b5751a51d84d1b06c0417425565a850a054e283d673baffc51b65c738c), cool, cool-like, org.kframework.attributes.Location(Location(253,11,253,37)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule53LHS{}(SortExps{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortExp{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule53LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule53LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Var'Unds'Gen0:SortExp{},VarHOLE:SortExps{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(253,11,253,37)"), UNIQUE'Unds'ID{}("ff8857b5751a51d84d1b06c0417425565a850a054e283d673baffc51b65c738c")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezernew_(_)_KOOL-SYNTAX_Exp_Id_Exps1_`(inj{Id,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`new_(_)_KOOL-SYNTAX_Exp_Id_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(11b2a94d9c6ccd781c3aa2eb6c3fbfbfc10193b36b975790415c5f177861a4c8), cool, cool-like, org.kframework.attributes.Location(Location(19,18,19,53)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict(2)]
  alias rule54LHS{}(SortExps{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule54LHS{}(VarHOLE:SortExps{},VarK0:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule54LHS{}(VarHOLE:SortExps{},VarK0:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(VarK0:SortId{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,53)"), UNIQUE'Unds'ID{}("11b2a94d9c6ccd781c3aa2eb6c3fbfbfc10193b36b975790415c5f177861a4c8")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerprint(_);_KOOL-SYNTAX_Stmt_Exps0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`print(_);_KOOL-SYNTAX_Stmt_Exps`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(af2a30b20d8564d5d57aba7559ba68bfd9850b00d657fbbe2f23447dd3e85e3d), cool, cool-like, org.kframework.attributes.Location(Location(64,19,64,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule55LHS{}(SortExps{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule55LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule55LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,19,64,65)"), UNIQUE'Unds'ID{}("af2a30b20d8564d5d57aba7559ba68bfd9850b00d657fbbe2f23447dd3e85e3d")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrelease_;_KOOL-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`release_;_KOOL-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(b8c588c94f84ae711729e4ef154f79aa2c32513e40ab12fc1901971b4d57f510), cool, cool-like, org.kframework.attributes.Location(Location(69,19,69,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule56LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule56LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule56LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(69,19,69,65)"), UNIQUE'Unds'ID{}("b8c588c94f84ae711729e4ef154f79aa2c32513e40ab12fc1901971b4d57f510")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrendezvous_;_KOOL-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`rendezvous_;_KOOL-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(184bbaf728e966c916cc99cf642ffd7b22b9e78b614fd5f6b85f2f7f3ff038b9), cool, cool-like, org.kframework.attributes.Location(Location(70,19,70,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule57LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule57LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule57LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(70,19,70,65)"), UNIQUE'Unds'ID{}("184bbaf728e966c916cc99cf642ffd7b22b9e78b614fd5f6b85f2f7f3ff038b9")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerreturn_;_KOOL-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`return_;_KOOL-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(53450dfade1bb4d07f6531d0e5e03daa92e27812c6d63cbe8f22f26ec1c357ee), cool, cool-like, org.kframework.attributes.Location(Location(62,19,62,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule58LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule58LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule58LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,19,62,65)"), UNIQUE'Unds'ID{}("53450dfade1bb4d07f6531d0e5e03daa92e27812c6d63cbe8f22f26ec1c357ee")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezersizeOf(_)_KOOL-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`sizeOf(_)_KOOL-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(05d3b91f70addb7b871b9b25295a8914bc30f9c0c4af0e4af1ac3b883b27fdae), cool, cool-like, org.kframework.attributes.Location(Location(24,18,24,50)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule59LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule59LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule59LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,18,24,50)"), UNIQUE'Unds'ID{}("05d3b91f70addb7b871b9b25295a8914bc30f9c0c4af0e4af1ac3b883b27fdae")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerthrow_;_KOOL-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`throw_;_KOOL-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(7eba61e9a12cdfa88fa2380f308bc76591ce1ec8145c39f2b7f3f98fa7fbfe9e), cool, cool-like, org.kframework.attributes.Location(Location(66,19,66,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule60LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule60LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule60LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(66,19,66,65)"), UNIQUE'Unds'ID{}("7eba61e9a12cdfa88fa2380f308bc76591ce1ec8145c39f2b7f3f98fa7fbfe9e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezervar_;_KOOL-SYNTAX_Stmt_Exps1_`(inj{Id,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`var_;_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(_Gen0),HOLE),inj{Vals,Exps}(`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(fff4bb7804ac903eeea0f1a7854c7d9b643a94576ddfbac2dc9deaad44a11fe3), cool, cool-like, org.kframework.attributes.Location(Location(154,11,154,26)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule61LHS{}(SortExps{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortId{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule61LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule61LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(Var'Unds'Gen0:SortId{}),VarHOLE:SortExps{}),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(154,11,154,26)"), UNIQUE'Unds'ID{}("fff4bb7804ac903eeea0f1a7854c7d9b643a94576ddfbac2dc9deaad44a11fe3")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Val,KItem}(V)~>`#freezerFunCall(_)_KOOL_KItem_K`(inj{Exps,KItem}(C))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Val,Exp}(V),C))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(707d40477302f8185846feb7e41b338862e246a478aaf41979a18aadcf6f7799), cool-like, org.kframework.attributes.Location(Location(483,8,483,48)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule62LHS{}(SortExps{},SortVal{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule62LHS{}(VarC:SortExps{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),kseq{}(Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarC:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule62LHS{}(VarC:SortExps{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}),VarC:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(483,8,483,48)"), UNIQUE'Unds'ID{}("707d40477302f8185846feb7e41b338862e246a478aaf41979a18aadcf6f7799")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Id,KItem}(X)~>_DotVar4),_Gen0,`<env>`(Env),_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_.__KOOL-SYNTAX_Exp_Exp_Id`(`this_KOOL-SYNTAX_Exp`(.KList),X))~>_DotVar4),_Gen0,`<env>`(Env),_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires `notBool_`(`Set:in`(inj{Id,KItem}(X),`keys(_)_MAP_Set_Map`(Env))) ensures #token("true","Bool") [UNIQUE_ID(fff337ef71e97ddba2ad888a43bc38cdb13497fc314a1637dbe31c6ce6a22d87), cool-like, org.kframework.attributes.Location(Location(426,8,427,33)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule63LHS{}(SortMap{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule63LHS{}(VarEnv:SortMap{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarEnv:SortMap{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule63LHS{}(VarEnv:SortMap{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}(),VarX:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(426,8,427,33)"), UNIQUE'Unds'ID{}("fff337ef71e97ddba2ad888a43bc38cdb13497fc314a1637dbe31c6ce6a22d87")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Id,KItem}(X)~>_DotVar5),_Gen0,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),L),_DotVar6)),_Gen1,_Gen2)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(L,inj{Val,KItem}(V)),_DotVar2)) #as _Gen12,_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Val,KItem}(V)~>_DotVar5),_Gen0,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),L),_DotVar6)),_Gen1,_Gen2)),_DotVar3)),_Gen12,_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9d280516846db4a9132ce64f58dde5ead5cb44441018a4005f9f9534fbc13d3c), cool-like, group(lookup), org.kframework.attributes.Location(Location(181,8,183,42)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule64LHS{}(SortKItem{},SortVal{},SortId{},SortGeneratedCounterCell{},SortMap{},SortThreadCellSet{},SortK{},SortMap{},SortControlCell{},SortHoldsCell{},SortStoreCell{},SortIdCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule64LHS{}(VarL:SortKItem{},VarV:SortVal{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'DotVar6:SortMap{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen12:SortStoreCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{},Var'Unds'Gen8:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarL:SortKItem{}),Var'Unds'DotVar6:SortMap{})),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen12:SortStoreCell{}),Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{},Var'Unds'Gen8:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule64LHS{}(VarL:SortKItem{},VarV:SortVal{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'DotVar6:SortMap{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen12:SortStoreCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{},Var'Unds'Gen8:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarL:SortKItem{}),Var'Unds'DotVar6:SortMap{})),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen12:SortStoreCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{},Var'Unds'Gen8:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), cool-like{}(), group{}("lookup"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(181,8,183,42)"), UNIQUE'Unds'ID{}("9d280516846db4a9132ce64f58dde5ead5cb44441018a4005f9f9534fbc13d3c")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`!__KOOL-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer!__KOOL-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(b961e3c779027550398f55b9b82f3fd09a7f09cfe2899fe11c9ccb927a3a1f6b), heat, org.kframework.attributes.Location(Location(40,18,40,50)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule65LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule65LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule65LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,18,40,50)"), UNIQUE'Unds'ID{}("b961e3c779027550398f55b9b82f3fd09a7f09cfe2899fe11c9ccb927a3a1f6b")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`!__KOOL-SYNTAX_Exp_Exp`(inj{Bool,Exp}(T)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(`notBool_`(T))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(956c567095039c79565eb17cf1aec7d18f19fdcf205892b63b01e6a1ab9a4e19), org.kframework.attributes.Location(Location(546,8,546,25)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule66LHS{}(SortBool{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule66LHS{}(VarT:SortBool{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(VarT:SortBool{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule66LHS{}(VarT:SortBool{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(LblnotBool'Unds'{}(VarT:SortBool{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(546,8,546,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("956c567095039c79565eb17cf1aec7d18f19fdcf205892b63b01e6a1ab9a4e19")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`(_)__KOOL-SYNTAX_Exp_Id_Exp`(C,inj{Val,Exp}(`objectClosure(_,_)_KOOL_Val_Id_List`(_Gen0,EnvStack))))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Val,KItem}(`objectClosure(_,_)_KOOL_Val_Id_List`(C,EnvStack))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(611db2bd51903959644d2bedca0aefe5f2dabfc9213fbcbc2f78b15bbf2c15f9), org.kframework.attributes.Location(Location(526,8,526,69)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule67LHS{}(SortId{},SortList{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortId{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule67LHS{}(VarC:SortId{},VarEnvStack:SortList{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(VarC:SortId{},inj{SortVal{}, SortExp{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(Var'Unds'Gen0:SortId{},VarEnvStack:SortList{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule67LHS{}(VarC:SortId{},VarEnvStack:SortList{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(VarC:SortId{},VarEnvStack:SortList{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(526,8,526,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("611db2bd51903959644d2bedca0aefe5f2dabfc9213fbcbc2f78b15bbf2c15f9")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`(_)__KOOL-SYNTAX_Exp_Id_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer(_)__KOOL-SYNTAX_Exp_Id_Exp1_`(inj{Id,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(5851f3b172c8ee715b630208f5bd7f53ac0d7ffd667602003fb59edf010749a8), heat, org.kframework.attributes.Location(Location(18,18,18,53)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict(2)]
  alias rule68LHS{}(SortExp{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule68LHS{}(VarHOLE:SortExp{},VarK0:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(VarK0:SortId{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule68LHS{}(VarHOLE:SortExp{},VarK0:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,18,18,53)"), UNIQUE'Unds'ID{}("5851f3b172c8ee715b630208f5bd7f53ac0d7ffd667602003fb59edf010749a8")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`++__KOOL-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(HOLE)))~>`#freezer++__KOOL-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(6edb4bea42ca3f33c5c2d6852eaf8874f1ecbe2d5f3d260a623b854fdcb7673e), heat, org.kframework.attributes.Location(Location(266,11,266,35)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule69LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule69LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule69LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),kseq{}(Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(266,11,266,35)"), UNIQUE'Unds'ID{}("6edb4bea42ca3f33c5c2d6852eaf8874f1ecbe2d5f3d260a623b854fdcb7673e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`++__KOOL-SYNTAX_Exp_Exp`(inj{Val,Exp}(`loc(_)_KOOL_Val_Int`(L))))~>_DotVar5),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Int,KItem}(I)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(`_+Int_`(I,#token("1","Int")))~>_DotVar5),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Int,KItem}(`_+Int_`(I,#token("1","Int")))),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dd4e605dab9a568bf429ff64213982c24c1c7f32145258659d9ad419cb601015), org.kframework.attributes.Location(Location(270,8,271,52)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule70LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortMap{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule70LHS{}(VarI:SortInt{},VarL:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblloc'LParUndsRParUnds'KOOL'Unds'Val'Unds'Int{}(VarL:SortInt{})))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortInt{}, SortKItem{}}(VarI:SortInt{})),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule70LHS{}(VarI:SortInt{},VarL:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")))),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(270,8,271,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("dd4e605dab9a568bf429ff64213982c24c1c7f32145258659d9ad419cb601015")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`-__KOOL-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer-__KOOL-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(2e37f24fbea3ae5b330a5afb1c725981e9168507f2cf447fd6fb02d57cf67d8d), heat, org.kframework.attributes.Location(Location(23,18,23,50)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule71LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule71LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule71LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,18,23,50)"), UNIQUE'Unds'ID{}("2e37f24fbea3ae5b330a5afb1c725981e9168507f2cf447fd6fb02d57cf67d8d")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`-__KOOL-SYNTAX_Exp_Exp`(inj{Int,Exp}(I)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(`_-Int_`(#token("0","Int"),I))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(adc0240a7062cc76173b254c4c8729c062361b46d13df714e4c7e217c6ed5936), org.kframework.attributes.Location(Location(536,8,536,23)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule72LHS{}(SortInt{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule72LHS{}(VarI:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule72LHS{}(VarI:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),VarI:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(536,8,536,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("adc0240a7062cc76173b254c4c8729c062361b46d13df714e4c7e217c6ed5936")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_!=__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(d4fc95ec784c8cbb5a565460e9126dee86cad99a965217af5e6d920ef812c2a5), heat, non-assoc, org.kframework.attributes.Location(Location(39,18,39,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule73LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule73LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule73LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,18,39,61)"), UNIQUE'Unds'ID{}("d4fc95ec784c8cbb5a565460e9126dee86cad99a965217af5e6d920ef812c2a5")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_!=__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(f7fc762f5a87ad3df300df65d4c38b63e2970b2f4cb21116e0276dec22990d8c), heat, non-assoc, org.kframework.attributes.Location(Location(39,18,39,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule74LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule74LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule74LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,18,39,61)"), UNIQUE'Unds'ID{}("f7fc762f5a87ad3df300df65d4c38b63e2970b2f4cb21116e0276dec22990d8c")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_!=__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Val,Exp}(V1),inj{Val,Exp}(V2)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(`_=/=K_`(inj{Val,KItem}(V1),inj{Val,KItem}(V2)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3ab85daeaac6cc290b97278477d23b82373a9a1c643d5e2784c233c008c86858), org.kframework.attributes.Location(Location(542,8,542,38)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule75LHS{}(SortVal{},SortVal{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule75LHS{}(VarV1:SortVal{},VarV2:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV1:SortVal{}),inj{SortVal{}, SortExp{}}(VarV2:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule75LHS{}(VarV1:SortVal{},VarV2:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV1:SortVal{}),dotk{}()),kseq{}(inj{SortVal{}, SortKItem{}}(VarV2:SortVal{}),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(542,8,542,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3ab85daeaac6cc290b97278477d23b82373a9a1c643d5e2784c233c008c86858")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_%__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(177acf32e123df351ae723297645f50c55c659691bcc26389bd4a36710b4ee37), heat, left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule76LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule76LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule76LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), UNIQUE'Unds'ID{}("177acf32e123df351ae723297645f50c55c659691bcc26389bd4a36710b4ee37")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_%__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(811c15ab01fd4cdd781ecb673447689f9edc6d27b3f8a680578e3460a7449c48), heat, left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule77LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule77LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule77LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), UNIQUE'Unds'ID{}("811c15ab01fd4cdd781ecb673447689f9edc6d27b3f8a680578e3460a7449c48")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_%__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(`_%Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_=/=K_`(inj{Int,KItem}(I2),inj{Int,KItem}(#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(280d12f7aa2f1dfeb50bb169d46cbf5f160eafc72619a20d92792aafa3e3c681), org.kframework.attributes.Location(Location(535,8,535,48)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule78LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule78LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule78LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(535,8,535,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("280d12f7aa2f1dfeb50bb169d46cbf5f160eafc72619a20d92792aafa3e3c681")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_&&__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_&&__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(65a32618cf28f8113a27abd4fd36d6af5a2722a1b1bade2c2f617d2750d589ef), heat, left, org.kframework.attributes.Location(Location(42,18,42,59)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict(1)]
  alias rule79LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule79LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule79LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(42,18,42,59)"), UNIQUE'Unds'ID{}("65a32618cf28f8113a27abd4fd36d6af5a2722a1b1bade2c2f617d2750d589ef")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_&&__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Bool,Exp}(#token("false","Bool")),_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(#token("false","Bool"))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b80e9b3d7e61e5ea0f2f817e499a6e9883122e67d010e431361ca009f7328e76), org.kframework.attributes.Location(Location(548,8,548,27)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule80LHS{}(SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortExp{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule80LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("false")),Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule80LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(\dv{SortBool{}}("false")),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(548,8,548,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b80e9b3d7e61e5ea0f2f817e499a6e9883122e67d010e431361ca009f7328e76")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_&&__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Bool,Exp}(#token("true","Bool")),E))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(E)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6f3684143c03713e7e2e998e738e5f20e3fb12d8d5d680dba6fc1592610d5e0f), org.kframework.attributes.Location(Location(547,8,547,23)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule81LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule81LHS{}(VarE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("true")),VarE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule81LHS{}(VarE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarE:SortExp{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(547,8,547,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6f3684143c03713e7e2e998e738e5f20e3fb12d8d5d680dba6fc1592610d5e0f")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_(_)_KOOL-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(db9753d9078ca585d91da81036b6c0975e909a837933642dcaa069f7f172a1c3), heat, org.kframework.attributes.Location(Location(22,18,22,53)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict(2)]
  alias rule82LHS{}(SortExps{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule82LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule82LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,53)"), UNIQUE'Unds'ID{}("db9753d9078ca585d91da81036b6c0975e909a837933642dcaa069f7f172a1c3")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(A,B),C))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(A,B))~>`#freezerFunCall(_)_KOOL_KItem_K`(inj{Exps,KItem}(C))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(72d002d4463eb2f3f3c42b5601d4c8fcdc55c252f7382862f8cccaa8b1c3668f), org.kframework.attributes.Location(Location(481,8,481,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule83LHS{}(SortExp{},SortExps{},SortExps{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule83LHS{}(VarA:SortExp{},VarB:SortExps{},VarC:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarA:SortExp{},VarB:SortExps{}),VarC:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule83LHS{}(VarA:SortExp{},VarB:SortExps{},VarC:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarA:SortExp{},VarB:SortExps{})),kseq{}(Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarC:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(481,8,481,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("72d002d4463eb2f3f3c42b5601d4c8fcdc55c252f7382862f8cccaa8b1c3668f")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(`_.__KOOL-SYNTAX_Exp_Exp_Id`(HOLE,_Gen0),_Gen1))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_(_)_KOOL-SYNTAX_Exp_Exp_Exps0_`(inj{Id,KItem}(_Gen0),inj{Exps,KItem}(_Gen1))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0) requires `_andBool_`(`_=/=K_`(inj{Exp,KItem}(HOLE),inj{Exp,KItem}(`super_KOOL-SYNTAX_Exp`(.KList))),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(42522a6d9e858233de55e0a6a9ddc264d7fd413a6d386401d3c6338ea57f2c34), heat, org.kframework.attributes.Location(Location(467,11,467,45)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule84LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortId{},SortExps{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortControlCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{}) : SortGeneratedTopCell{}
  where rule84LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortExps{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()),kseq{}(inj{SortExp{}, SortKItem{}}(Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}()),dotk{}())),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortId{}),Var'Unds'Gen1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule84LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortExps{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}()),kseq{}(inj{SortExps{}, SortKItem{}}(Var'Unds'Gen1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(467,11,467,45)"), UNIQUE'Unds'ID{}("42522a6d9e858233de55e0a6a9ddc264d7fd413a6d386401d3c6338ea57f2c34")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(`_.__KOOL-SYNTAX_Exp_Exp_Id`(inj{Val,Exp}(`objectClosure(_,_)_KOOL_Val_Id_List`(_Gen0,EStack)),X),_Gen1))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(`lookupMember(_,_)_KOOL_Exp_List_Id`(EStack,X),_Gen1))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f80c5fd85cda62418aae1dafe019f7c4b774322185688e748f62247fcd9e8a3b), org.kframework.attributes.Location(Location(469,8,470,43)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule85LHS{}(SortList{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortId{},SortExps{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortControlCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{}) : SortGeneratedTopCell{}
  where rule85LHS{}(VarEStack:SortList{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortExps{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(inj{SortVal{}, SortExp{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(Var'Unds'Gen0:SortId{},VarEStack:SortList{})),VarX:SortId{}),Var'Unds'Gen1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule85LHS{}(VarEStack:SortList{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortExps{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(LbllookupMember'LParUndsCommUndsRParUnds'KOOL'Unds'Exp'Unds'List'Unds'Id{}(VarEStack:SortList{},VarX:SortId{}),Var'Unds'Gen1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(469,8,470,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f80c5fd85cda62418aae1dafe019f7c4b774322185688e748f62247fcd9e8a3b")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(`_.__KOOL-SYNTAX_Exp_Exp_Id`(`super_KOOL-SYNTAX_Exp`(.KList),X),_Gen0))~>_DotVar4),`<control>`(_Gen2,_Gen3,`<crntObj>`(`<crntClass>`(Class),`<envStack>`(`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(Class,_Gen1)),EStack)),_DotVar6)),_Gen4,_Gen5,_Gen6)),_DotVar2)),_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(`lookupMember(_,_)_KOOL_Exp_List_Id`(EStack,X),_Gen0))~>_DotVar4),`<control>`(_Gen2,_Gen3,`<crntObj>`(`<crntClass>`(Class),`<envStack>`(`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(Class,_Gen1)),EStack)),_DotVar6)),_Gen4,_Gen5,_Gen6)),_DotVar2)),_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(94b8146f33ef25ff1333cb2193bd4cd60956e2894c1c22ccf193971757c1ae54), org.kframework.attributes.Location(Location(472,8,475,70)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule86LHS{}(SortId{},SortList{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortLocationCell{},SortExps{},SortMap{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortFstackCell{},SortXstackCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{}) : SortGeneratedTopCell{}
  where rule86LHS{}(VarClass:SortId{},VarEStack:SortList{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar6:SortLocationCell{},Var'Unds'Gen0:SortExps{},Var'Unds'Gen1:SortMap{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{},Var'Unds'Gen2:SortFstackCell{},Var'Unds'Gen3:SortXstackCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}(),VarX:SortId{}),Var'Unds'Gen0:SortExps{})),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen2:SortFstackCell{},Var'Unds'Gen3:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarClass:SortId{}),Lbl'-LT-'envStack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(VarClass:SortId{},Var'Unds'Gen1:SortMap{})),VarEStack:SortList{})),Var'Unds'DotVar6:SortLocationCell{})),Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule86LHS{}(VarClass:SortId{},VarEStack:SortList{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar6:SortLocationCell{},Var'Unds'Gen0:SortExps{},Var'Unds'Gen1:SortMap{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{},Var'Unds'Gen2:SortFstackCell{},Var'Unds'Gen3:SortXstackCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(LbllookupMember'LParUndsCommUndsRParUnds'KOOL'Unds'Exp'Unds'List'Unds'Id{}(VarEStack:SortList{},VarX:SortId{}),Var'Unds'Gen0:SortExps{})),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen2:SortFstackCell{},Var'Unds'Gen3:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarClass:SortId{}),Lbl'-LT-'envStack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(VarClass:SortId{},Var'Unds'Gen1:SortMap{})),VarEStack:SortList{})),Var'Unds'DotVar6:SortLocationCell{})),Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(472,8,475,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("94b8146f33ef25ff1333cb2193bd4cd60956e2894c1c22ccf193971757c1ae54")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(`_.__KOOL-SYNTAX_Exp_Exp_Id`(`super_KOOL-SYNTAX_Exp`(.KList),_X),_Gen0))~>_DotVar4),`<control>`(_Gen2,_Gen3,`<crntObj>`(`<crntClass>`(Class),`<envStack>`(`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(Class',_Gen1)),_DotVar7)),_DotVar6)),_Gen4,_Gen5,_Gen6)),_DotVar2)),_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(`_.__KOOL-SYNTAX_Exp_Exp_Id`(`super_KOOL-SYNTAX_Exp`(.KList),_X),_Gen0))~>_DotVar4),`<control>`(_Gen2,_Gen3,`<crntObj>`(`<crntClass>`(Class),`<envStack>`(`_List_`(`.List`(.KList),_DotVar7)),_DotVar6)),_Gen4,_Gen5,_Gen6)),_DotVar2)),_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13),_DotVar0) requires `_=/=K_`(inj{Id,KItem}(Class),inj{Id,KItem}(Class')) ensures #token("true","Bool") [UNIQUE_ID(a5c73f7165a83c770cd45f077faf8548c65924e961094d682eda4f071dd94a57), org.kframework.attributes.Location(Location(476,8,479,27)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule87LHS{}(SortId{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortLocationCell{},SortList{},SortExps{},SortMap{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortFstackCell{},SortXstackCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortId{}) : SortGeneratedTopCell{}
  where rule87LHS{}(VarClass:SortId{},VarClass'Apos':SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar6:SortLocationCell{},Var'Unds'DotVar7:SortList{},Var'Unds'Gen0:SortExps{},Var'Unds'Gen1:SortMap{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{},Var'Unds'Gen2:SortFstackCell{},Var'Unds'Gen3:SortXstackCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'X:SortId{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarClass:SortId{}),dotk{}()),kseq{}(inj{SortId{}, SortKItem{}}(VarClass'Apos':SortId{}),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}(),Var'Unds'X:SortId{}),Var'Unds'Gen0:SortExps{})),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen2:SortFstackCell{},Var'Unds'Gen3:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarClass:SortId{}),Lbl'-LT-'envStack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(VarClass'Apos':SortId{},Var'Unds'Gen1:SortMap{})),Var'Unds'DotVar7:SortList{})),Var'Unds'DotVar6:SortLocationCell{})),Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule87LHS{}(VarClass:SortId{},VarClass'Apos':SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar6:SortLocationCell{},Var'Unds'DotVar7:SortList{},Var'Unds'Gen0:SortExps{},Var'Unds'Gen1:SortMap{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{},Var'Unds'Gen2:SortFstackCell{},Var'Unds'Gen3:SortXstackCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'X:SortId{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}(),Var'Unds'X:SortId{}),Var'Unds'Gen0:SortExps{})),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen2:SortFstackCell{},Var'Unds'Gen3:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarClass:SortId{}),Lbl'-LT-'envStack'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar7:SortList{})),Var'Unds'DotVar6:SortLocationCell{})),Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(476,8,479,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("a5c73f7165a83c770cd45f077faf8548c65924e961094d682eda4f071dd94a57")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(A,B),C))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(A,B))~>`#freezerFunCall(_)_KOOL_KItem_K`(inj{Exps,KItem}(C))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9db92d9c13b8d2b86e23c233c2a054264c8a7b3521e17611a7798040f8498584), org.kframework.attributes.Location(Location(482,8,482,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule88LHS{}(SortExp{},SortExps{},SortExps{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule88LHS{}(VarA:SortExp{},VarB:SortExps{},VarC:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarA:SortExp{},VarB:SortExps{}),VarC:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule88LHS{}(VarA:SortExp{},VarB:SortExps{},VarC:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarA:SortExp{},VarB:SortExps{})),kseq{}(Lbl'Hash'freezerFunCall'LParUndsRParUnds'KOOL'Unds'KItem'Unds'K{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarC:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(482,8,482,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9db92d9c13b8d2b86e23c233c2a054264c8a7b3521e17611a7798040f8498584")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(X),_Gen0))~>_DotVar4),_Gen1,`<env>`(Env),_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(`_.__KOOL-SYNTAX_Exp_Exp_Id`(`this_KOOL-SYNTAX_Exp`(.KList),X),_Gen0))~>_DotVar4),_Gen1,`<env>`(Env),_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `notBool_`(`Set:in`(inj{Id,KItem}(X),`keys(_)_MAP_Set_Map`(Env))) ensures #token("true","Bool") [UNIQUE_ID(bf386e2f57a42073b9e5fdfb33654aa40e252523a18775f8aea8ab13c43c983c), org.kframework.attributes.Location(Location(463,8,465,33)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule89LHS{}(SortMap{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortExps{},SortControlCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule89LHS{}(VarEnv:SortMap{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExps{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarEnv:SortMap{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),Var'Unds'Gen0:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule89LHS{}(VarEnv:SortMap{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExps{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}(),VarX:SortId{}),Var'Unds'Gen0:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(463,8,465,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("bf386e2f57a42073b9e5fdfb33654aa40e252523a18775f8aea8ab13c43c983c")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(X),_Gen0))~>_DotVar5),_Gen1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),L),_DotVar6)),_Gen2,_Gen3)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(L,inj{Val,KItem}(V)),_DotVar2)) #as _Gen13,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Val,Exp}(V),_Gen0))~>_DotVar5),_Gen1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),L),_DotVar6)),_Gen2,_Gen3)),_DotVar3)),_Gen13,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8d221f1487777d86a0d5d19b0177c3720e4ed32b1e30044c8fca5337177a0948), org.kframework.attributes.Location(Location(459,8,461,42)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule90LHS{}(SortKItem{},SortVal{},SortId{},SortGeneratedCounterCell{},SortMap{},SortThreadCellSet{},SortK{},SortMap{},SortExps{},SortControlCell{},SortStoreCell{},SortHoldsCell{},SortIdCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule90LHS{}(VarL:SortKItem{},VarV:SortVal{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'DotVar6:SortMap{},Var'Unds'Gen0:SortExps{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen13:SortStoreCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),Var'Unds'Gen0:SortExps{})),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarL:SortKItem{}),Var'Unds'DotVar6:SortMap{})),Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen13:SortStoreCell{}),Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule90LHS{}(VarL:SortKItem{},VarV:SortVal{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'DotVar6:SortMap{},Var'Unds'Gen0:SortExps{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen13:SortStoreCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}),Var'Unds'Gen0:SortExps{})),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarL:SortKItem{}),Var'Unds'DotVar6:SortMap{})),Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen13:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(459,8,461,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8d221f1487777d86a0d5d19b0177c3720e4ed32b1e30044c8fca5337177a0948")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Val,Exp}(`methodClosure(_,_,_,_)_KOOL_Val_Id_Int_Ids_Stmt`(Class,OL,Xs,S)),inj{Vals,Exps}(Vs)))~>K),`<control>`(`<fstack>`(`_List_`(`.List`(.KList),_DotVar5)),`<xstack>`(XS),`<crntObj>`(_Gen1,_Gen2,_Gen3)),`<env>`(Env),_Gen4,_Gen5)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(OL),inj{Val,KItem}(`objectClosure(_,_)_KOOL_Val_Id_List`(_Gen0,EnvStack))),_DotVar2)) #as _Gen15,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`___KOOL-SYNTAX_Stmt_Stmt_Stmt`(`mkDecls(_,_)_KOOL_Stmt_Ids_Vals`(Xs,Vs),`___KOOL-SYNTAX_Stmt_Stmt_Stmt`(S,`return_;_KOOL-SYNTAX_Stmt_Exp`(inj{Val,Exp}(`nothing_KOOL_Val`(.KList))))))),`<control>`(`<fstack>`(`_List_`(`ListItem`(`fstackFrame(_,_,_,_)_KOOL_KItem_Map_K_List_K`(Env,K,XS,inj{CrntObjCell,KItem}(`<crntObj>`(_Gen1,_Gen2,_Gen3)))),_DotVar5)),`<xstack>`(XS),`<crntObj>`(`<crntClass>`(Class),`<envStack>`(EnvStack),`.LocationCell`(.KList))),`<env>`(`.Map`(.KList)),_Gen4,_Gen5)),_DotVar3)),_Gen15,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(082661f4ab6028ea6f385c71c85328193e54942b0a93acf76537eef6fa03f08f), org.kframework.attributes.Location(Location(490,8,499,18)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule91LHS{}(SortId{},SortMap{},SortList{},SortK{},SortInt{},SortStmt{},SortVals{},SortList{},SortIds{},SortGeneratedCounterCell{},SortMap{},SortThreadCellSet{},SortList{},SortId{},SortCrntClassCell{},SortNextLocCell{},SortClassesCell{},SortStoreCell{},SortEnvStackCell{},SortLocationCell{},SortHoldsCell{},SortIdCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule91LHS{}(VarClass:SortId{},VarEnv:SortMap{},VarEnvStack:SortList{},VarK:SortK{},VarOL:SortInt{},VarS:SortStmt{},VarVs:SortVals{},VarXS:SortList{},VarXs:SortIds{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortList{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortCrntClassCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen15:SortStoreCell{},Var'Unds'Gen2:SortEnvStackCell{},Var'Unds'Gen3:SortLocationCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}}(LblmethodClosure'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'Int'Unds'Ids'Unds'Stmt{}(VarClass:SortId{},VarOL:SortInt{},VarXs:SortIds{},VarS:SortStmt{})),inj{SortVals{}, SortExps{}}(VarVs:SortVals{}))),VarK:SortK{})),Lbl'-LT-'control'-GT-'{}(Lbl'-LT-'fstack'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar5:SortList{})),Lbl'-LT-'xstack'-GT-'{}(VarXS:SortList{}),Lbl'-LT-'crntObj'-GT-'{}(Var'Unds'Gen1:SortCrntClassCell{},Var'Unds'Gen2:SortEnvStackCell{},Var'Unds'Gen3:SortLocationCell{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarOL:SortInt{}),inj{SortVal{}, SortKItem{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(Var'Unds'Gen0:SortId{},VarEnvStack:SortList{}))),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen15:SortStoreCell{}),Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule91LHS{}(VarClass:SortId{},VarEnv:SortMap{},VarEnvStack:SortList{},VarK:SortK{},VarOL:SortInt{},VarS:SortStmt{},VarVs:SortVals{},VarXS:SortList{},VarXs:SortIds{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortList{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortCrntClassCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen15:SortStoreCell{},Var'Unds'Gen2:SortEnvStackCell{},Var'Unds'Gen3:SortLocationCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(LblmkDecls'LParUndsCommUndsRParUnds'KOOL'Unds'Stmt'Unds'Ids'Unds'Vals{}(VarXs:SortIds{},VarVs:SortVals{}),Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarS:SortStmt{},Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblnothing'Unds'KOOL'Unds'Val{}()))))),dotk{}())),Lbl'-LT-'control'-GT-'{}(Lbl'-LT-'fstack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(VarEnv:SortMap{},VarK:SortK{},VarXS:SortList{},kseq{}(inj{SortCrntObjCell{}, SortKItem{}}(Lbl'-LT-'crntObj'-GT-'{}(Var'Unds'Gen1:SortCrntClassCell{},Var'Unds'Gen2:SortEnvStackCell{},Var'Unds'Gen3:SortLocationCell{})),dotk{}()))),Var'Unds'DotVar5:SortList{})),Lbl'-LT-'xstack'-GT-'{}(VarXS:SortList{}),Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarClass:SortId{}),Lbl'-LT-'envStack'-GT-'{}(VarEnvStack:SortList{}),Lbl'Stop'LocationCell{}())),Lbl'-LT-'env'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen15:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(490,8,499,18)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("082661f4ab6028ea6f385c71c85328193e54942b0a93acf76537eef6fa03f08f")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(`lookup(_)_KOOL_Exp_Int`(L),_Gen0))~>_DotVar5),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Val,KItem}(V)),_DotVar2)) #as _Gen14,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Val,Exp}(V),_Gen0))~>_DotVar5),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar3)),_Gen14,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c411081f6e8646e1411ce7c322bfb991b8e505d378140003a6850402f35e7988), org.kframework.attributes.Location(Location(485,8,485,80)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule92LHS{}(SortInt{},SortVal{},SortGeneratedCounterCell{},SortMap{},SortThreadCellSet{},SortK{},SortExps{},SortControlCell{},SortClassesCell{},SortStoreCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule92LHS{}(VarL:SortInt{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortExps{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen14:SortStoreCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(VarL:SortInt{}),Var'Unds'Gen0:SortExps{})),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen14:SortStoreCell{}),Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule92LHS{}(VarL:SortInt{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortExps{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen14:SortStoreCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}),Var'Unds'Gen0:SortExps{})),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen14:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(485,8,485,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c411081f6e8646e1411ce7c322bfb991b8e505d378140003a6850402f35e7988")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_*__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(4f3c36557eb124719614c4c02de97d008c58e31c37a03341e6c856a5565bd206), heat, left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule93LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule93LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule93LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), UNIQUE'Unds'ID{}("4f3c36557eb124719614c4c02de97d008c58e31c37a03341e6c856a5565bd206")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_*__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(62807dc2476012fdccf20ff677d4af75868c6b76434be481597fd349213f63d0), heat, left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule94LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule94LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule94LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), UNIQUE'Unds'ID{}("62807dc2476012fdccf20ff677d4af75868c6b76434be481597fd349213f63d0")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_*__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(`_*Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(040317fdc04d1ef990dfde0f6157efbf5d6d786add3858dd860ab23fecdb4cef), org.kframework.attributes.Location(Location(533,8,533,29)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule95LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule95LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule95LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsStar'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(533,8,533,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("040317fdc04d1ef990dfde0f6157efbf5d6d786add3858dd860ab23fecdb4cef")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_+__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(fa34c3928236e2d0e352e714b6b842ea8ab1f4f2099bb25fe7273a0651ca1a47), heat, left, org.kframework.attributes.Location(Location(31,18,31,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule96LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule96LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule96LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,56)"), UNIQUE'Unds'ID{}("fa34c3928236e2d0e352e714b6b842ea8ab1f4f2099bb25fe7273a0651ca1a47")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_+__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(28c6ca7b20afcdba094af3be41f090ec37a853b5919b5ba33a3d09f9a8fc0dcc), heat, left, org.kframework.attributes.Location(Location(31,18,31,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule97LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule97LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule97LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,56)"), UNIQUE'Unds'ID{}("28c6ca7b20afcdba094af3be41f090ec37a853b5919b5ba33a3d09f9a8fc0dcc")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_+__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(`_+Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(749b9904ac3015562a2bb0902af073c6746402ddd803633df6665751d59f48fc), org.kframework.attributes.Location(Location(530,8,530,29)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule98LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule98LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule98LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(530,8,530,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("749b9904ac3015562a2bb0902af073c6746402ddd803633df6665751d59f48fc")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_+__KOOL-SYNTAX_Exp_Exp_Exp`(inj{String,Exp}(Str1),inj{String,Exp}(Str2)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(Str1,Str2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b67cfedc276f531c9409c60574b8762f811112e64df0cad5566e063d30300967), org.kframework.attributes.Location(Location(531,8,531,40)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule99LHS{}(SortString{},SortString{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule99LHS{}(VarStr1:SortString{},VarStr2:SortString{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortString{}, SortExp{}}(VarStr1:SortString{}),inj{SortString{}, SortExp{}}(VarStr2:SortString{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule99LHS{}(VarStr1:SortString{},VarStr2:SortString{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarStr1:SortString{},VarStr2:SortString{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(531,8,531,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b67cfedc276f531c9409c60574b8762f811112e64df0cad5566e063d30300967")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_,__KOOL-SYNTAX_Exps_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(51a5b044d80fc7ca6f3568a806d0d9151ed31a68f39476d32af14aa69edbea6c), heat, klabel(exps), org.kframework.attributes.Location(Location(49,19,49,64)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), right, strict, userList(*)]
  alias rule100LHS{}(SortExp{},SortExps{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule100LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule100LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [userList{}("*"), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), right{}(), klabel{}("exps"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,64)"), UNIQUE'Unds'ID{}("51a5b044d80fc7ca6f3568a806d0d9151ed31a68f39476d32af14aa69edbea6c")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_,__KOOL-SYNTAX_Exps_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(83bc8d18fa728b1c9b25efe4d8849ef67d4f737ac2e9d6791f52c64811a37568), heat, klabel(exps), org.kframework.attributes.Location(Location(49,19,49,64)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), right, strict, userList(*)]
  alias rule101LHS{}(SortExps{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule101LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule101LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [userList{}("*"), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), right{}(), klabel{}("exps"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,64)"), UNIQUE'Unds'ID{}("83bc8d18fa728b1c9b25efe4d8849ef67d4f737ac2e9d6791f52c64811a37568")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_-__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(7331ae26142024db350e4e67b4d49f21dfb28887709557bbbeb62dd767432e56), heat, left, org.kframework.attributes.Location(Location(32,18,32,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule102LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule102LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule102LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,56)"), UNIQUE'Unds'ID{}("7331ae26142024db350e4e67b4d49f21dfb28887709557bbbeb62dd767432e56")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_-__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(674b1ac3f5366d6b60b14f930bd7c5c4d4175bf5a34a81dca5471a38434f97d2), heat, left, org.kframework.attributes.Location(Location(32,18,32,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule103LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule103LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule103LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,56)"), UNIQUE'Unds'ID{}("674b1ac3f5366d6b60b14f930bd7c5c4d4175bf5a34a81dca5471a38434f97d2")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_-__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(`_-Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(12636bedf1fc8bf546f39752b58bb8ee0a2f56075b09e436854c77007071584c), org.kframework.attributes.Location(Location(532,8,532,29)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule104LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule104LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule104LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(532,8,532,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("12636bedf1fc8bf546f39752b58bb8ee0a2f56075b09e436854c77007071584c")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_.__KOOL-SYNTAX_Exp_Exp_Id`(HOLE,_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_.__KOOL-SYNTAX_Exp_Exp_Id0_`(inj{Id,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(`_=/=K_`(inj{Exp,KItem}(HOLE),inj{Exp,KItem}(`super_KOOL-SYNTAX_Exp`(.KList))),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(98966e366953d25a0d3348cc8f390af355d3a7a61c083d40d1e7417c9c63e546), heat, org.kframework.attributes.Location(Location(429,11,429,44)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule105LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortId{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule105LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()),kseq{}(inj{SortExp{}, SortKItem{}}(Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}()),dotk{}())),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule105LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(429,11,429,44)"), UNIQUE'Unds'ID{}("98966e366953d25a0d3348cc8f390af355d3a7a61c083d40d1e7417c9c63e546")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_.__KOOL-SYNTAX_Exp_Exp_Id`(inj{Val,Exp}(`objectClosure(_,_)_KOOL_Val_Id_List`(Class,`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(Class,Env)),EStack))),X))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lookupMember(_,_)_KOOL_Exp_List_Id`(`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(Class,Env)),EStack),X))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d4785e5989ae53ee80b8bd23c8c3745f537936b7128be0cb0a26a90f7c9be74d), org.kframework.attributes.Location(Location(432,8,434,66)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule106LHS{}(SortId{},SortList{},SortMap{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule106LHS{}(VarClass:SortId{},VarEStack:SortList{},VarEnv:SortMap{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(inj{SortVal{}, SortExp{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(VarClass:SortId{},Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(VarClass:SortId{},VarEnv:SortMap{})),VarEStack:SortList{}))),VarX:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule106LHS{}(VarClass:SortId{},VarEStack:SortList{},VarEnv:SortMap{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LbllookupMember'LParUndsCommUndsRParUnds'KOOL'Unds'Exp'Unds'List'Unds'Id{}(Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(VarClass:SortId{},VarEnv:SortMap{})),VarEStack:SortList{}),VarX:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(432,8,434,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d4785e5989ae53ee80b8bd23c8c3745f537936b7128be0cb0a26a90f7c9be74d")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_.__KOOL-SYNTAX_Exp_Exp_Id`(inj{Val,Exp}(`objectClosure(_,_)_KOOL_Val_Id_List`(Class,`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(Class',_Gen0)),_Gen1))),_X))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_.__KOOL-SYNTAX_Exp_Exp_Id`(inj{Val,Exp}(`objectClosure(_,_)_KOOL_Val_Id_List`(Class,`_List_`(`.List`(.KList),_Gen1))),_X))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0) requires `_=/=K_`(inj{Id,KItem}(Class),inj{Id,KItem}(Class')) ensures #token("true","Bool") [UNIQUE_ID(67a551ff71f2ddbe6b9f65974bcf2b0041421baf0ec8588df56a6e4be3b72eea), org.kframework.attributes.Location(Location(435,8,437,27)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule107LHS{}(SortId{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortMap{},SortList{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortControlCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortId{}) : SortGeneratedTopCell{}
  where rule107LHS{}(VarClass:SortId{},VarClass'Apos':SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortList{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'X:SortId{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarClass:SortId{}),dotk{}()),kseq{}(inj{SortId{}, SortKItem{}}(VarClass'Apos':SortId{}),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(inj{SortVal{}, SortExp{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(VarClass:SortId{},Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(VarClass'Apos':SortId{},Var'Unds'Gen0:SortMap{})),Var'Unds'Gen1:SortList{}))),Var'Unds'X:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule107LHS{}(VarClass:SortId{},VarClass'Apos':SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortList{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'X:SortId{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(inj{SortVal{}, SortExp{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(VarClass:SortId{},Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'Gen1:SortList{}))),Var'Unds'X:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(435,8,437,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("67a551ff71f2ddbe6b9f65974bcf2b0041421baf0ec8588df56a6e4be3b72eea")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_.__KOOL-SYNTAX_Exp_Exp_Id`(`super_KOOL-SYNTAX_Exp`(.KList),X))~>_DotVar4),`<control>`(_Gen1,_Gen2,`<crntObj>`(`<crntClass>`(Class),`<envStack>`(`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(Class,_Gen0)),EStack)),_DotVar6)),_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lookupMember(_,_)_KOOL_Exp_List_Id`(EStack,X))~>_DotVar4),`<control>`(_Gen1,_Gen2,`<crntObj>`(`<crntClass>`(Class),`<envStack>`(`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(Class,_Gen0)),EStack)),_DotVar6)),_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(480ff629389ff48cfc9c5d2a3a440ab937055fdf4974190ba517494c3f3b785e), org.kframework.attributes.Location(Location(439,8,441,70)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule108LHS{}(SortId{},SortList{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortLocationCell{},SortMap{},SortFstackCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortXstackCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{}) : SortGeneratedTopCell{}
  where rule108LHS{}(VarClass:SortId{},VarEStack:SortList{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar6:SortLocationCell{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortFstackCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortXstackCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}(),VarX:SortId{})),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen1:SortFstackCell{},Var'Unds'Gen2:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarClass:SortId{}),Lbl'-LT-'envStack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(VarClass:SortId{},Var'Unds'Gen0:SortMap{})),VarEStack:SortList{})),Var'Unds'DotVar6:SortLocationCell{})),Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule108LHS{}(VarClass:SortId{},VarEStack:SortList{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar6:SortLocationCell{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortFstackCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortXstackCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LbllookupMember'LParUndsCommUndsRParUnds'KOOL'Unds'Exp'Unds'List'Unds'Id{}(VarEStack:SortList{},VarX:SortId{})),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen1:SortFstackCell{},Var'Unds'Gen2:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarClass:SortId{}),Lbl'-LT-'envStack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(VarClass:SortId{},Var'Unds'Gen0:SortMap{})),VarEStack:SortList{})),Var'Unds'DotVar6:SortLocationCell{})),Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(439,8,441,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("480ff629389ff48cfc9c5d2a3a440ab937055fdf4974190ba517494c3f3b785e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_.__KOOL-SYNTAX_Exp_Exp_Id`(`super_KOOL-SYNTAX_Exp`(.KList),_X))~>_DotVar4),`<control>`(_Gen1,_Gen2,`<crntObj>`(`<crntClass>`(Class),`<envStack>`(`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(Class',_Gen0)),_DotVar7)),_DotVar6)),_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_.__KOOL-SYNTAX_Exp_Exp_Id`(`super_KOOL-SYNTAX_Exp`(.KList),_X))~>_DotVar4),`<control>`(_Gen1,_Gen2,`<crntObj>`(`<crntClass>`(Class),`<envStack>`(`_List_`(`.List`(.KList),_DotVar7)),_DotVar6)),_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0) requires `_=/=K_`(inj{Id,KItem}(Class),inj{Id,KItem}(Class')) ensures #token("true","Bool") [UNIQUE_ID(cc7f34a1a4b3fecd2877d4bdfc14eb321129f158445ffc778545e7203ec1d0ca), org.kframework.attributes.Location(Location(442,8,445,27)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule109LHS{}(SortId{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortLocationCell{},SortList{},SortMap{},SortFstackCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortXstackCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortId{}) : SortGeneratedTopCell{}
  where rule109LHS{}(VarClass:SortId{},VarClass'Apos':SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar6:SortLocationCell{},Var'Unds'DotVar7:SortList{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortFstackCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortXstackCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'X:SortId{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarClass:SortId{}),dotk{}()),kseq{}(inj{SortId{}, SortKItem{}}(VarClass'Apos':SortId{}),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}(),Var'Unds'X:SortId{})),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen1:SortFstackCell{},Var'Unds'Gen2:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarClass:SortId{}),Lbl'-LT-'envStack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(VarClass'Apos':SortId{},Var'Unds'Gen0:SortMap{})),Var'Unds'DotVar7:SortList{})),Var'Unds'DotVar6:SortLocationCell{})),Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule109LHS{}(VarClass:SortId{},VarClass'Apos':SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar6:SortLocationCell{},Var'Unds'DotVar7:SortList{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortFstackCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortXstackCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'X:SortId{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Lblsuper'Unds'KOOL-SYNTAX'Unds'Exp{}(),Var'Unds'X:SortId{})),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen1:SortFstackCell{},Var'Unds'Gen2:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarClass:SortId{}),Lbl'-LT-'envStack'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar7:SortList{})),Var'Unds'DotVar6:SortLocationCell{})),Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(442,8,445,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("cc7f34a1a4b3fecd2877d4bdfc14eb321129f158445ffc778545e7203ec1d0ca")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_/__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(79ff6eba6fcc44baf02e34c778e6cfa6b5711fd9902c70f2855807cb499561fa), heat, left, org.kframework.attributes.Location(Location(28,18,28,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule110LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule110LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule110LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,18,28,56)"), UNIQUE'Unds'ID{}("79ff6eba6fcc44baf02e34c778e6cfa6b5711fd9902c70f2855807cb499561fa")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_/__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e20eff51e0404f69fd5039b14caf748db465a0fec56fa070246a826c47d031fd), heat, left, org.kframework.attributes.Location(Location(28,18,28,56)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule111LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule111LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule111LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,18,28,56)"), UNIQUE'Unds'ID{}("e20eff51e0404f69fd5039b14caf748db465a0fec56fa070246a826c47d031fd")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_/__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(`_/Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_=/=K_`(inj{Int,KItem}(I2),inj{Int,KItem}(#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(04104210f7509f710d315ab5b9bde307e701626d3acc6cda3973fb56af52cc2d), org.kframework.attributes.Location(Location(534,8,534,48)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule112LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule112LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule112LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsSlsh'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(534,8,534,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("04104210f7509f710d315ab5b9bde307e701626d3acc6cda3973fb56af52cc2d")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`_;_KOOL-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_;_KOOL-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(0ae108348ebce0e390c3d9ab1639ee375969f86aa2d04b30c42b1d81bcfff75e), heat, org.kframework.attributes.Location(Location(57,19,57,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule113LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule113LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule113LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,19,57,65)"), UNIQUE'Unds'ID{}("0ae108348ebce0e390c3d9ab1639ee375969f86aa2d04b30c42b1d81bcfff75e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`_;_KOOL-SYNTAX_Stmt_Exp`(inj{Val,Exp}(_Gen0)))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b7e83e2e19955f6718c21f75ddcee33d678374be8d5dc6493968392e05b2554), org.kframework.attributes.Location(Location(569,8,569,19)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule114LHS{}(SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortVal{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule114LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortVal{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Var'Unds'Gen0:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule114LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortVal{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(569,8,569,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5b7e83e2e19955f6718c21f75ddcee33d678374be8d5dc6493968392e05b2554")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<=__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(848097289a5f3b9b9c7be156c960389cd31bfa0f6fa5c29b92f41306f80c948b), heat, non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule115LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule115LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule115LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), UNIQUE'Unds'ID{}("848097289a5f3b9b9c7be156c960389cd31bfa0f6fa5c29b92f41306f80c948b")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<=__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(36f5cb7ce80513cb49df315e9513b5faba0a0c14cf6184df22d9bfb600e7e057), heat, non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule116LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule116LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule116LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), UNIQUE'Unds'ID{}("36f5cb7ce80513cb49df315e9513b5faba0a0c14cf6184df22d9bfb600e7e057")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<=__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(`_<=Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(894c542b2b5af8cd71e7433d33e4c10c79356d8eb1d6b6f426795c249a8780c8), org.kframework.attributes.Location(Location(538,8,538,31)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule117LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule117LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule117LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(538,8,538,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("894c542b2b5af8cd71e7433d33e4c10c79356d8eb1d6b6f426795c249a8780c8")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(1561ebe0959d9436adce8bc2b405bbbfa34753c5bf2bd2c41020662a1cd64177), heat, non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule118LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule118LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule118LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), UNIQUE'Unds'ID{}("1561ebe0959d9436adce8bc2b405bbbfa34753c5bf2bd2c41020662a1cd64177")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(872b533e4597c76f18165c94f7dc4b18a3e0665adce785991f015f33b434682e), heat, non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule119LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule119LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule119LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), UNIQUE'Unds'ID{}("872b533e4597c76f18165c94f7dc4b18a3e0665adce785991f015f33b434682e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(`_<Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(66bf5a449ac396cee0b58b4e8c7b3a0902b913c37be4803bc9fb2d377756e50f), org.kframework.attributes.Location(Location(537,8,537,29)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule120LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule120LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule120LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-LT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(537,8,537,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("66bf5a449ac396cee0b58b4e8c7b3a0902b913c37be4803bc9fb2d377756e50f")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_==__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(7c7afc04e60481a776d0db685e31582d46e6e6d20f2ca1f8008d79efb116d8ea), heat, non-assoc, org.kframework.attributes.Location(Location(38,18,38,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule121LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule121LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule121LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,61)"), UNIQUE'Unds'ID{}("7c7afc04e60481a776d0db685e31582d46e6e6d20f2ca1f8008d79efb116d8ea")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_==__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(f11361534adaddddedc3ac9927fbf57a0a30228aa3af17fedfa43322fc7a02b5), heat, non-assoc, org.kframework.attributes.Location(Location(38,18,38,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule122LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule122LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule122LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,61)"), UNIQUE'Unds'ID{}("f11361534adaddddedc3ac9927fbf57a0a30228aa3af17fedfa43322fc7a02b5")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_==__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Val,Exp}(V1),inj{Val,Exp}(V2)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(`_==K_`(inj{Val,KItem}(V1),inj{Val,KItem}(V2)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6444648b2c3de807ea6dea7b2888ae66bd3d17afd6d8fd43735c3c1f4151d901), org.kframework.attributes.Location(Location(541,8,541,37)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule123LHS{}(SortVal{},SortVal{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule123LHS{}(VarV1:SortVal{},VarV2:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV1:SortVal{}),inj{SortVal{}, SortExp{}}(VarV2:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule123LHS{}(VarV1:SortVal{},VarV2:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV1:SortVal{}),dotk{}()),kseq{}(inj{SortVal{}, SortKItem{}}(VarV2:SortVal{}),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(541,8,541,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6444648b2c3de807ea6dea7b2888ae66bd3d17afd6d8fd43735c3c1f4151d901")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_=__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(HOLE)))~>`#freezer_=__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(f6e8550c57eef26543da68334d8e57992b3a27decdb5e2da110de89e2ac1c218), heat, org.kframework.attributes.Location(Location(228,11,228,37)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule124LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortExp{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule124LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule124LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(228,11,228,37)"), UNIQUE'Unds'ID{}("f6e8550c57eef26543da68334d8e57992b3a27decdb5e2da110de89e2ac1c218")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_=__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_=__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(2af0baae4b5fc1c7def89bc04ecb6a31216dd21f446ce7cba3c678fc3f654999), heat, org.kframework.attributes.Location(Location(45,18,45,60)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), right, strict(2)]
  alias rule125LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule125LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule125LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), right{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,18,45,60)"), UNIQUE'Unds'ID{}("2af0baae4b5fc1c7def89bc04ecb6a31216dd21f446ce7cba3c678fc3f654999")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_=__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Val,Exp}(`loc(_)_KOOL_Val_Int`(L)),inj{Val,Exp}(V)))~>_DotVar5),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),_Gen0),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Val,KItem}(V)~>_DotVar5),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Val,KItem}(V)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(14f8cf12dc3197db9fe747a50d245ab666af4460db580fd61ef8ab3447988648), org.kframework.attributes.Location(Location(249,8,249,77)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule126LHS{}(SortInt{},SortVal{},SortGeneratedCounterCell{},SortMap{},SortThreadCellSet{},SortK{},SortKItem{},SortControlCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule126LHS{}(VarL:SortInt{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortKItem{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblloc'LParUndsRParUnds'KOOL'Unds'Val'Unds'Int{}(VarL:SortInt{})),inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),Var'Unds'Gen0:SortKItem{}),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule126LHS{}(VarL:SortInt{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortKItem{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(249,8,249,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("14f8cf12dc3197db9fe747a50d245ab666af4460db580fd61ef8ab3447988648")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>=__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(f4d2b5e7bad719fc7843e63ddbdee0b1be9a9f12e54053412ce4409f25927dc5), heat, non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule127LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule127LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule127LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), UNIQUE'Unds'ID{}("f4d2b5e7bad719fc7843e63ddbdee0b1be9a9f12e54053412ce4409f25927dc5")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>=__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(4e3917e4ce31222d84cc968e6a9dea187fc3e5935c6b77f3d6185e26ef3e2eb1), heat, non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule128LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule128LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule128LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), UNIQUE'Unds'ID{}("4e3917e4ce31222d84cc968e6a9dea187fc3e5935c6b77f3d6185e26ef3e2eb1")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>=__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(`_>=Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4a2386e4e14c6adf199adecd9d68134f9735090bfcea97b8fc022f1283145bed), org.kframework.attributes.Location(Location(540,8,540,31)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule129LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule129LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule129LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(540,8,540,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4a2386e4e14c6adf199adecd9d68134f9735090bfcea97b8fc022f1283145bed")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(4637d83fdfdb6ebc529a09299d35ee7a3bcbe9e8f892f0a43d935db9da293541), heat, non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule130LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule130LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule130LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), UNIQUE'Unds'ID{}("4637d83fdfdb6ebc529a09299d35ee7a3bcbe9e8f892f0a43d935db9da293541")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>__KOOL-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__KOOL-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8337df0aa78d966b99089cdc16ee15937047af4310a3f72412657bbe68ec0762), heat, non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule131LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule131LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule131LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), UNIQUE'Unds'ID{}("8337df0aa78d966b99089cdc16ee15937047af4310a3f72412657bbe68ec0762")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(`_>Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0e1121062b5f744e236ba4919f058b30ae7622dfd13b91ada3d850e33b9ddb09), org.kframework.attributes.Location(Location(539,8,539,29)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule132LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule132LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule132LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-GT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(539,8,539,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("0e1121062b5f744e236ba4919f058b30ae7622dfd13b91ada3d850e33b9ddb09")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_[_]_KOOL-SYNTAX_Exp_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(2e573b5dd07eb308ecb0e5db72a61c77b5de37a5666b2ff8d642d246cfbe0658), heat, org.kframework.attributes.Location(Location(21,18,21,50)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule133LHS{}(SortExp{},SortExps{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule133LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule133LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), UNIQUE'Unds'ID{}("2e573b5dd07eb308ecb0e5db72a61c77b5de37a5666b2ff8d642d246cfbe0658")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_[_]_KOOL-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(74bf814ed5cd513ec1329eccd266bafa5bbd7207a3883e33fcabed87e79a4dca), heat, org.kframework.attributes.Location(Location(21,18,21,50)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule134LHS{}(SortExps{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule134LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule134LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), UNIQUE'Unds'ID{}("74bf814ed5cd513ec1329eccd266bafa5bbd7207a3883e33fcabed87e79a4dca")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Val,Exp}(V),inj{Vals,Exps}(`_,__KOOL-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N1),`_,__KOOL-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N2),Vs)))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Val,Exp}(V),inj{Vals,Exps}(`_,__KOOL-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N1),`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Vals,Exps}(`_,__KOOL-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N2),Vs))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1b9505122447b8d76c6d98d38c7ebf6bd4e60cfaa0f4c80b2cd04cb7461438c), org.kframework.attributes.Location(Location(189,8,189,55)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule135LHS{}(SortInt{},SortInt{},SortVal{},SortVals{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule135LHS{}(VarN1:SortInt{},VarN2:SortInt{},VarV:SortVal{},VarVs:SortVals{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN1:SortInt{}),Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN2:SortInt{}),VarVs:SortVals{}))))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule135LHS{}(VarN1:SortInt{},VarN2:SortInt{},VarV:SortVal{},VarVs:SortVals{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN1:SortInt{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN2:SortInt{}),VarVs:SortVals{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(189,8,189,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f1b9505122447b8d76c6d98d38c7ebf6bd4e60cfaa0f4c80b2cd04cb7461438c")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Val,Exp}(`array(_,_)_KOOL_Val_Int_Int`(L,_Gen0)),inj{Vals,Exps}(`_,__KOOL-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N),`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lookup(_)_KOOL_Exp_Int`(`_+Int_`(L,N)))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(938a368a2143159050a24741263bf47048a0f2b1573ab3e5e00689ee29294ddd), org.kframework.attributes.Location(Location(190,8,190,45)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule136LHS{}(SortInt{},SortInt{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortInt{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule136LHS{}(VarL:SortInt{},VarN:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}}(Lblarray'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Int'Unds'Int{}(VarL:SortInt{},Var'Unds'Gen0:SortInt{})),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN:SortInt{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule136LHS{}(VarL:SortInt{},VarN:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},VarN:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,8,190,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("938a368a2143159050a24741263bf47048a0f2b1573ab3e5e00689ee29294ddd")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`___KOOL-SYNTAX_Stmt_Stmt_Stmt`(S1,S2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(S1)~>inj{Stmt,KItem}(S2)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ef4a0bb3d27f30f7a478ee9de256d989911f33751a0eb1d68a87459cf73ffd70), org.kframework.attributes.Location(Location(568,8,568,35)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule137LHS{}(SortStmt{},SortStmt{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule137LHS{}(VarS1:SortStmt{},VarS2:SortStmt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarS1:SortStmt{},VarS2:SortStmt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule137LHS{}(VarS1:SortStmt{},VarS2:SortStmt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS1:SortStmt{}),kseq{}(inj{SortStmt{}, SortKItem{}}(VarS2:SortStmt{}),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(568,8,568,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ef4a0bb3d27f30f7a478ee9de256d989911f33751a0eb1d68a87459cf73ffd70")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_instanceOf__KOOL-SYNTAX_Exp_Exp_Id`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_instanceOf__KOOL-SYNTAX_Exp_Exp_Id0_`(inj{Id,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(41fdd032475da3df8167509af72d01a07342a75056cbac03783dabeb6d4806a1), heat, org.kframework.attributes.Location(Location(17,18,17,53)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict(1)]
  alias rule138LHS{}(SortExp{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule138LHS{}(VarHOLE:SortExp{},VarK1:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},VarK1:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule138LHS{}(VarHOLE:SortExp{},VarK1:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK1:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,18,17,53)"), UNIQUE'Unds'ID{}("41fdd032475da3df8167509af72d01a07342a75056cbac03783dabeb6d4806a1")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_instanceOf__KOOL-SYNTAX_Exp_Exp_Id`(inj{Val,Exp}(`objectClosure(_,_)_KOOL_Val_Id_List`(_Gen0,`.List`(.KList))),_Gen1))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(#token("false","Bool"))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f99d39d4c09d9f1ecfce2bf39c84b23b43be6eea2fad37b430c97281f012bbad), org.kframework.attributes.Location(Location(521,8,521,53)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule139LHS{}(SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortId{},SortId{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortControlCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{}) : SortGeneratedTopCell{}
  where rule139LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortId{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(inj{SortVal{}, SortExp{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(Var'Unds'Gen0:SortId{},Lbl'Stop'List{}())),Var'Unds'Gen1:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule139LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortId{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(\dv{SortBool{}}("false")),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(521,8,521,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f99d39d4c09d9f1ecfce2bf39c84b23b43be6eea2fad37b430c97281f012bbad")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_instanceOf__KOOL-SYNTAX_Exp_Exp_Id`(inj{Val,Exp}(`objectClosure(_,_)_KOOL_Val_Id_List`(_Gen0,`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(C,_Gen1)),_Gen2))),C))~>_DotVar4),_Gen3,_Gen4,_Gen5,_Gen6)),_DotVar2)),_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(#token("true","Bool"))~>_DotVar4),_Gen3,_Gen4,_Gen5,_Gen6)),_DotVar2)),_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(830990b04021bc8787af79557e14afdebf3f12d2dbb5817acbfa139a3e07ffba), org.kframework.attributes.Location(Location(515,8,516,28)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule140LHS{}(SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortId{},SortMap{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortList{},SortControlCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{}) : SortGeneratedTopCell{}
  where rule140LHS{}(VarC:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortMap{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{},Var'Unds'Gen2:SortList{},Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(inj{SortVal{}, SortExp{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(Var'Unds'Gen0:SortId{},Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(VarC:SortId{},Var'Unds'Gen1:SortMap{})),Var'Unds'Gen2:SortList{}))),VarC:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule140LHS{}(VarC:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortMap{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{},Var'Unds'Gen2:SortList{},Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(\dv{SortBool{}}("true")),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(515,8,516,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("830990b04021bc8787af79557e14afdebf3f12d2dbb5817acbfa139a3e07ffba")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_instanceOf__KOOL-SYNTAX_Exp_Exp_Id`(inj{Val,Exp}(`objectClosure(_,_)_KOOL_Val_Id_List`(_Gen0,`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(C,_Gen1)),_Gen2))),C'))~>_DotVar4),_Gen3,_Gen4,_Gen5,_Gen6)),_DotVar2)),_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_instanceOf__KOOL-SYNTAX_Exp_Exp_Id`(inj{Val,Exp}(`objectClosure(_,_)_KOOL_Val_Id_List`(_Gen0,`_List_`(`.List`(.KList),_Gen2))),C'))~>_DotVar4),_Gen3,_Gen4,_Gen5,_Gen6)),_DotVar2)),_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13),_DotVar0) requires `_=/=K_`(inj{Id,KItem}(C),inj{Id,KItem}(C')) ensures #token("true","Bool") [UNIQUE_ID(98a319317ac63c711fd0fa0824de649f8d1082940cc019c2bcba19ba9be3dd11), org.kframework.attributes.Location(Location(518,8,519,37)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule141LHS{}(SortId{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortId{},SortMap{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortList{},SortControlCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{}) : SortGeneratedTopCell{}
  where rule141LHS{}(VarC:SortId{},VarC'Apos':SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortMap{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{},Var'Unds'Gen2:SortList{},Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC:SortId{}),dotk{}()),kseq{}(inj{SortId{}, SortKItem{}}(VarC'Apos':SortId{}),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(inj{SortVal{}, SortExp{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(Var'Unds'Gen0:SortId{},Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(VarC:SortId{},Var'Unds'Gen1:SortMap{})),Var'Unds'Gen2:SortList{}))),VarC'Apos':SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule141LHS{}(VarC:SortId{},VarC'Apos':SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortMap{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{},Var'Unds'Gen2:SortList{},Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'instanceOf'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(inj{SortVal{}, SortExp{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(Var'Unds'Gen0:SortId{},Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'Gen2:SortList{}))),VarC'Apos':SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(518,8,519,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("98a319317ac63c711fd0fa0824de649f8d1082940cc019c2bcba19ba9be3dd11")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_||__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_||__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(4c5a0117389b8b1a07e71b0ef47d2712bcbc192be246e29c7514cd1c42c0dd42), heat, left, org.kframework.attributes.Location(Location(43,18,43,59)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict(1)]
  alias rule142LHS{}(SortExp{},SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule142LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule142LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,18,43,59)"), UNIQUE'Unds'ID{}("4c5a0117389b8b1a07e71b0ef47d2712bcbc192be246e29c7514cd1c42c0dd42")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_||__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Bool,Exp}(#token("false","Bool")),E))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(E)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(39b20aa7a9b276ed291d711a40ad8851767680bbd72599ace33c1dd8650ce475), org.kframework.attributes.Location(Location(550,8,550,23)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule143LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule143LHS{}(VarE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("false")),VarE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule143LHS{}(VarE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarE:SortExp{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(550,8,550,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("39b20aa7a9b276ed291d711a40ad8851767680bbd72599ace33c1dd8650ce475")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_||__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Bool,Exp}(#token("true","Bool")),_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(#token("true","Bool"))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1852c76beaa1e9dde5e4b690884c73316e9ef4927026ecf386348d643ccdcd2f), org.kframework.attributes.Location(Location(549,8,549,26)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule144LHS{}(SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortExp{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule144LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("true")),Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule144LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(\dv{SortBool{}}("true")),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(549,8,549,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("1852c76beaa1e9dde5e4b690884c73316e9ef4927026ecf386348d643ccdcd2f")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`acquire_;_KOOL-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezeracquire_;_KOOL-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(7121c3dcb10fbf561240e9a4564fe7236bf1bb7e78631b28bb79f8f38fb2e298), heat, org.kframework.attributes.Location(Location(68,19,68,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule145LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule145LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule145LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,19,68,65)"), UNIQUE'Unds'ID{}("7121c3dcb10fbf561240e9a4564fe7236bf1bb7e78631b28bb79f8f38fb2e298")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`acquire_;_KOOL-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar4),_Gen0,_Gen1,`<holds>`(`_Map_`(`.Map`(.KList),_DotVar5)),_Gen2)),_DotVar2)),_Gen3,`<busy>`(`_Set_`(Busy,`.Set`(.KList))),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),_Gen0,_Gen1,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(#token("0","Int"))),_DotVar5)),_Gen2)),_DotVar2)),_Gen3,`<busy>`(`_Set_`(Busy,`SetItem`(inj{Val,KItem}(V)))),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0) requires `notBool_`(`Set:in`(inj{Val,KItem}(V),Busy)) ensures #token("true","Bool") [UNIQUE_ID(9530c6561ca2c4992b27947ca8895d014e1254324e22dc68fa4f872c9fd9d9db), org.kframework.attributes.Location(Location(330,8,333,34)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule146LHS{}(SortSet{},SortVal{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortMap{},SortControlCell{},SortEnvCell{},SortIdCell{},SortStoreCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule146LHS{}(VarBusy:SortSet{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortMap{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{},Var'Unds'Gen8:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),VarBusy:SortSet{})),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(Lbl'Unds'Set'Unds'{}(VarBusy:SortSet{},Lbl'Stop'Set{}())),Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{},Var'Unds'Gen8:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule146LHS{}(VarBusy:SortSet{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortMap{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{},Var'Unds'Gen8:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0"))),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(Lbl'Unds'Set'Unds'{}(VarBusy:SortSet{},LblSetItem{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{})))),Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{},Var'Unds'Gen8:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(330,8,333,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("9530c6561ca2c4992b27947ca8895d014e1254324e22dc68fa4f872c9fd9d9db")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`acquire_;_KOOL-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar4),_Gen0,_Gen1,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(N)),_DotVar5)),_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),_Gen0,_Gen1,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(`_+Int_`(N,#token("1","Int")))),_DotVar5)),_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2c4ea230d342ee0afc93e3ac4d7db5e683869b92cfcb5535d97b74eb575f9491), org.kframework.attributes.Location(Location(338,8,339,54)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule147LHS{}(SortInt{},SortVal{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortMap{},SortControlCell{},SortEnvCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule147LHS{}(VarN:SortInt{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortMap{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(VarN:SortInt{})),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule147LHS{}(VarN:SortInt{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortMap{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")))),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(338,8,339,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2c4ea230d342ee0afc93e3ac4d7db5e683869b92cfcb5535d97b74eb575f9491")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`class___KOOL-SYNTAX_Stmt_Id_Block`(C,S))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`class_extends___KOOL-SYNTAX_Stmt_Id_Id_Block`(C,#token("Object","Id"),S))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(297951351c9e3c6fb1e22f0bd16385bd011f29259fe2c1c77639788165ddfcbb), org.kframework.attributes.Location(Location(365,6,365,46)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule148LHS{}(SortId{},SortBlock{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule148LHS{}(VarC:SortId{},VarS:SortBlock{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblclass'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(VarC:SortId{},VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule148LHS{}(VarC:SortId{},VarS:SortBlock{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(VarC:SortId{},\dv{SortId{}}("Object"),VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(365,6,365,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("297951351c9e3c6fb1e22f0bd16385bd011f29259fe2c1c77639788165ddfcbb")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`class_extends___KOOL-SYNTAX_Stmt_Id_Id_Block`(Class1,Class2,`{_}_KOOL-SYNTAX_Block_Stmt`(S)))~>_DotVar5),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,`<classes>`(`_ClassDataCellMap_`(`.ClassDataCellMap`(.KList),_DotVar2))),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar5),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(Class1),`<classData>`(`<className>`(Class1),`<baseClass>`(Class2),`<declarations>`(inj{Stmt,KItem}(S)))),_DotVar2))),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e92c3f887a95fe5698706bdc3bbd7fa8eb34021f8f8f270a323e5d7351b489a8), org.kframework.attributes.Location(Location(367,6,373,20)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule149LHS{}(SortId{},SortId{},SortStmt{},SortGeneratedCounterCell{},SortClassDataCellMap{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule149LHS{}(VarClass1:SortId{},VarClass2:SortId{},VarS:SortStmt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortClassDataCellMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblclass'Unds'extends'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(VarClass1:SortId{},VarClass2:SortId{},Lbl'LBraUndsRBraUnds'KOOL-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{}))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(Lbl'Stop'ClassDataCellMap{}(),Var'Unds'DotVar2:SortClassDataCellMap{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule149LHS{}(VarClass1:SortId{},VarClass2:SortId{},VarS:SortStmt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortClassDataCellMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarClass1:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarClass1:SortId{}),Lbl'-LT-'baseClass'-GT-'{}(VarClass2:SortId{}),Lbl'-LT-'declarations'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),dotk{}())))),Var'Unds'DotVar2:SortClassDataCellMap{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(367,6,373,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e92c3f887a95fe5698706bdc3bbd7fa8eb34021f8f8f270a323e5d7351b489a8")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__KOOL-SYNTAX_Stmt_Exp_Block_Block`(HOLE,K1,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerif(_)_else__KOOL-SYNTAX_Stmt_Exp_Block_Block0_`(inj{Block,KItem}(K1),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e9c180823ab47129e2aeab85e1e408c8b504aec257437f6a6e78470f5c66c0b0), avoid, heat, org.kframework.attributes.Location(Location(58,19,58,75)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict(1)]
  alias rule150LHS{}(SortExp{},SortBlock{},SortBlock{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule150LHS{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule150LHS{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,19,58,75)"), UNIQUE'Unds'ID{}("e9c180823ab47129e2aeab85e1e408c8b504aec257437f6a6e78470f5c66c0b0"), avoid{}()]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__KOOL-SYNTAX_Stmt_Exp_Block_Block`(inj{Bool,Exp}(#token("false","Bool")),_Gen0,S))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Block,KItem}(S)~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(93952caff1eb78b7af17446946faf61f56b0a7b963c9ea58976c13534074daa5), org.kframework.attributes.Location(Location(572,8,572,32)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule151LHS{}(SortBlock{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortBlock{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule151LHS{}(VarS:SortBlock{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortBlock{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("false")),Var'Unds'Gen0:SortBlock{},VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule151LHS{}(VarS:SortBlock{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortBlock{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarS:SortBlock{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(572,8,572,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("93952caff1eb78b7af17446946faf61f56b0a7b963c9ea58976c13534074daa5")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__KOOL-SYNTAX_Stmt_Exp_Block_Block`(inj{Bool,Exp}(#token("true","Bool")),S,_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Block,KItem}(S)~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(56208d995d53796a04ae57d8adfe8ed33224909de49bddbc6c7f8a0e0429acad), org.kframework.attributes.Location(Location(571,8,571,32)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule152LHS{}(SortBlock{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortBlock{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule152LHS{}(VarS:SortBlock{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortBlock{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("true")),VarS:SortBlock{},Var'Unds'Gen0:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule152LHS{}(VarS:SortBlock{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortBlock{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarS:SortBlock{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(571,8,571,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("56208d995d53796a04ae57d8adfe8ed33224909de49bddbc6c7f8a0e0429acad")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`join_;_KOOL-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerjoin_;_KOOL-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(ea394983b4f35521c386912ea1ab3a496d30acc5fe4ddc5fe0143f1973937dd7), heat, org.kframework.attributes.Location(Location(67,19,67,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule153LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule153LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule153LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,19,67,65)"), UNIQUE'Unds'ID{}("ea394983b4f35521c386912ea1ab3a496d30acc5fe4ddc5fe0143f1973937dd7")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`join_;_KOOL-SYNTAX_Stmt_Exp`(inj{Int,Exp}(T)))~>_DotVar5),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,_Gen5,`<terminated>`(`_Set_`(`SetItem`(inj{Int,KItem}(T)),_DotVar2)) #as _Gen13,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar5),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,_Gen5,_Gen13,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b3cb9c130b21811ecf427c55cfc4d7e997fd2d98146465b8506a7c54364c01a6), org.kframework.attributes.Location(Location(324,8,325,51)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule154LHS{}(SortInt{},SortGeneratedCounterCell{},SortSet{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortTerminatedCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule154LHS{}(VarT:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortSet{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen13:SortTerminatedCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbljoin'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarT:SortInt{}))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},\and{SortTerminatedCell{}}(Lbl'-LT-'terminated'-GT-'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortInt{}, SortKItem{}}(VarT:SortInt{})),Var'Unds'DotVar2:SortSet{})),Var'Unds'Gen13:SortTerminatedCell{}),Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule154LHS{}(VarT:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortSet{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen13:SortTerminatedCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen13:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,8,325,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b3cb9c130b21811ecf427c55cfc4d7e997fd2d98146465b8506a7c54364c01a6")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lookup(_)_KOOL_Exp_Int`(L))~>_DotVar5),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Val,KItem}(V)),_DotVar2)) #as _Gen13,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Val,KItem}(V)~>_DotVar5),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen13,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a7e5a0c5683fe047013587202c9cb99fdb679c00a4b396b9c9c9f13654a86a38), org.kframework.attributes.Location(Location(195,8,195,69)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule155LHS{}(SortInt{},SortVal{},SortGeneratedCounterCell{},SortMap{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortStoreCell{},SortHoldsCell{},SortIdCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule155LHS{}(VarL:SortInt{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen13:SortStoreCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(VarL:SortInt{})),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen13:SortStoreCell{}),Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule155LHS{}(VarL:SortInt{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen13:SortStoreCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen13:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(195,8,195,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a7e5a0c5683fe047013587202c9cb99fdb679c00a4b396b9c9c9f13654a86a38")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(HOLE)))~>`#freezer++__KOOL-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`++__KOOL-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(936e61e5d81ded5b96c989cbd53e2837714f9430bf364608e2cdcc3dc02df2b5), cool, org.kframework.attributes.Location(Location(266,11,266,35)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule156LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule156LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),kseq{}(Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule156LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(266,11,266,35)"), UNIQUE'Unds'ID{}("936e61e5d81ded5b96c989cbd53e2837714f9430bf364608e2cdcc3dc02df2b5")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(HOLE)))~>`#freezer_=__KOOL-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_=__KOOL-SYNTAX_Exp_Exp_Exp`(HOLE,_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(5879e1d879992b14395a6d088f93b1ac1daebe82f4f10436bfc3c079b67fc4d0), cool, org.kframework.attributes.Location(Location(228,11,228,37)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule157LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortExp{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule157LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule157LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(228,11,228,37)"), UNIQUE'Unds'ID{}("5879e1d879992b14395a6d088f93b1ac1daebe82f4f10436bfc3c079b67fc4d0")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Id,KItem}(X)))~>_DotVar4),_Gen0,`<env>`(Env),_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(`_.__KOOL-SYNTAX_Exp_Exp_Id`(`this_KOOL-SYNTAX_Exp`(.KList),X))))~>_DotVar4),_Gen0,`<env>`(Env),_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires `notBool_`(`Set:in`(inj{Id,KItem}(X),`keys(_)_MAP_Set_Map`(Env))) ensures #token("true","Bool") [UNIQUE_ID(aabbcd4094e9ea0c7f3107445407c8f06d9d0baa537d84de17c4cd9c05f67455), org.kframework.attributes.Location(Location(235,8,236,33)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule158LHS{}(SortMap{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule158LHS{}(VarEnv:SortMap{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarEnv:SortMap{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule158LHS{}(VarEnv:SortMap{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}(),VarX:SortId{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(235,8,236,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("aabbcd4094e9ea0c7f3107445407c8f06d9d0baa537d84de17c4cd9c05f67455")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Id,KItem}(X)))~>_DotVar4),_Gen0,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),inj{Int,KItem}(L)),_DotVar5)),_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Val,KItem}(`loc(_)_KOOL_Val_Int`(L))))~>_DotVar4),_Gen0,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),inj{Int,KItem}(L)),_DotVar5)),_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cc7b08cfab47e1f615b54d8be59859d5376b86799d8daf51ce27dbcaf82ec129), org.kframework.attributes.Location(Location(233,8,233,73)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule159LHS{}(SortInt{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortMap{},SortControlCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule159LHS{}(VarL:SortInt{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortMap{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule159LHS{}(VarL:SortInt{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortMap{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lblloc'LParUndsRParUnds'KOOL'Unds'Val'Unds'Int{}(VarL:SortInt{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(233,8,233,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cc7b08cfab47e1f615b54d8be59859d5376b86799d8daf51ce27dbcaf82ec129")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(`_.__KOOL-SYNTAX_Exp_Exp_Id`(HOLE,_Gen0))))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerlvalue(_)_KOOL_Exp_K0_2`(inj{Id,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(2f4d3f490912407f6714d7f06d017ad36e45ecfb640d0014b8c03095233e6e49), heat, org.kframework.attributes.Location(Location(237,11,237,34)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule160LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortId{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule160LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortId{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule160LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'2{}(kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(237,11,237,34)"), UNIQUE'Unds'ID{}("2f4d3f490912407f6714d7f06d017ad36e45ecfb640d0014b8c03095233e6e49")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(`_.__KOOL-SYNTAX_Exp_Exp_Id`(inj{Val,Exp}(`objectClosure(_,_)_KOOL_Val_Id_List`(Class,`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(Class,Env)),EStack))),X))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(`lookupMember(_,_)_KOOL_Exp_List_Id`(`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(Class,Env)),EStack),X))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3634ea44b5b27cdd8fef6b1db2cd0b4722da3c8c14f105b230e2f10739539a85), org.kframework.attributes.Location(Location(238,8,241,34)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule161LHS{}(SortId{},SortList{},SortMap{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule161LHS{}(VarClass:SortId{},VarEStack:SortList{},VarEnv:SortMap{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(inj{SortVal{}, SortExp{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(VarClass:SortId{},Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(VarClass:SortId{},VarEnv:SortMap{})),VarEStack:SortList{}))),VarX:SortId{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule161LHS{}(VarClass:SortId{},VarEStack:SortList{},VarEnv:SortMap{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(LbllookupMember'LParUndsCommUndsRParUnds'KOOL'Unds'Exp'Unds'List'Unds'Id{}(Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(VarClass:SortId{},VarEnv:SortMap{})),VarEStack:SortList{}),VarX:SortId{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(238,8,241,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3634ea44b5b27cdd8fef6b1db2cd0b4722da3c8c14f105b230e2f10739539a85")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(`_.__KOOL-SYNTAX_Exp_Exp_Id`(inj{Val,Exp}(`objectClosure(_,_)_KOOL_Val_Id_List`(Class,`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(Class',_Gen0)),_Gen1))),_X))))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(`_.__KOOL-SYNTAX_Exp_Exp_Id`(inj{Val,Exp}(`objectClosure(_,_)_KOOL_Val_Id_List`(Class,`_List_`(`.List`(.KList),_Gen1))),_X))))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0) requires `_=/=K_`(inj{Id,KItem}(Class),inj{Id,KItem}(Class')) ensures #token("true","Bool") [UNIQUE_ID(4bbc779b43f346bb8d1bd08a35ad573bb67dfac315e1feb72e74f68dcfb218e7), org.kframework.attributes.Location(Location(242,8,244,27)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule162LHS{}(SortId{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortMap{},SortList{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortControlCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortId{}) : SortGeneratedTopCell{}
  where rule162LHS{}(VarClass:SortId{},VarClass'Apos':SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortList{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'X:SortId{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarClass:SortId{}),dotk{}()),kseq{}(inj{SortId{}, SortKItem{}}(VarClass'Apos':SortId{}),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(inj{SortVal{}, SortExp{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(VarClass:SortId{},Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(VarClass'Apos':SortId{},Var'Unds'Gen0:SortMap{})),Var'Unds'Gen1:SortList{}))),Var'Unds'X:SortId{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule162LHS{}(VarClass:SortId{},VarClass'Apos':SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortList{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'X:SortId{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(inj{SortVal{}, SortExp{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(VarClass:SortId{},Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'Gen1:SortList{}))),Var'Unds'X:SortId{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(242,8,244,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("4bbc779b43f346bb8d1bd08a35ad573bb67dfac315e1feb72e74f68dcfb218e7")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(HOLE,_Gen0))))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerlvalue(_)_KOOL_Exp_K0_`(inj{Exps,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(5f8ffe2bf445f1dd2de0725a340f2ec066b10c2e21d17736652f2bb3ced6415a), heat, org.kframework.attributes.Location(Location(257,11,257,37)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule163LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortExps{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule163LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExps{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExps{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule163LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExps{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Var'Unds'Gen0:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,11,257,37)"), UNIQUE'Unds'ID{}("5f8ffe2bf445f1dd2de0725a340f2ec066b10c2e21d17736652f2bb3ced6415a")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(_Gen0,HOLE))))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerlvalue(_)_KOOL_Exp_K1_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(319fb02cacb694b9242e018fac355cc90e3b275a44187a7dc27f2f2c4ce3ac6b), heat, org.kframework.attributes.Location(Location(253,11,253,37)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule164LHS{}(SortExps{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortExp{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule164LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Var'Unds'Gen0:SortExp{},VarHOLE:SortExps{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule164LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(253,11,253,37)"), UNIQUE'Unds'ID{}("319fb02cacb694b9242e018fac355cc90e3b275a44187a7dc27f2f2c4ce3ac6b")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Exp,KItem}(`lookup(_)_KOOL_Exp_Int`(L))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_KOOL_Exp_K`(inj{Val,KItem}(`loc(_)_KOOL_Val_Int`(L))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4e9d67ba1b84c59bf48c42af66a44b41bfa71dbebba3f1538efbe07e29ad45b9), org.kframework.attributes.Location(Location(261,8,261,39)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule165LHS{}(SortInt{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule165LHS{}(VarL:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(VarL:SortInt{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule165LHS{}(VarL:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'KOOL'Unds'Exp'Unds'K{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lblloc'LParUndsRParUnds'KOOL'Unds'Val'Unds'Int{}(VarL:SortInt{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(261,8,261,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4e9d67ba1b84c59bf48c42af66a44b41bfa71dbebba3f1538efbe07e29ad45b9")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`method_(_)__KOOL-SYNTAX_Stmt_Id_Ids_Block`(F,Xs,S))~>_DotVar5),`<control>`(_Gen0,_Gen1,`<crntObj>`(`<crntClass>`(Class),_DotVar7,`<location>`(inj{Int,KItem}(OL)))),`<env>`(Env),_Gen2,_Gen3)),_DotVar3)),`<store>`(`_Map_`(`.Map`(.KList),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,`<nextLoc>`(L),_Gen8),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar5),`<control>`(_Gen0,_Gen1,`<crntObj>`(`<crntClass>`(Class),_DotVar7,`<location>`(inj{Int,KItem}(OL)))),`<env>`(`Map:update`(Env,inj{Id,KItem}(F),inj{Int,KItem}(L))),_Gen2,_Gen3)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Val,KItem}(`methodClosure(_,_,_,_)_KOOL_Val_Id_Int_Ids_Stmt`(Class,OL,Xs,inj{Block,Stmt}(S)))),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,`<nextLoc>`(`_+Int_`(L,#token("1","Int"))),_Gen8),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dbe8f10c5485ab3c27296ac6ebca66ec08222b7f3eb585084e2ea0dd9be8c266), org.kframework.attributes.Location(Location(449,8,454,42)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule166LHS{}(SortId{},SortMap{},SortId{},SortInt{},SortInt{},SortBlock{},SortIds{},SortGeneratedCounterCell{},SortMap{},SortThreadCellSet{},SortK{},SortEnvStackCell{},SortFstackCell{},SortXstackCell{},SortHoldsCell{},SortIdCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule166LHS{}(VarClass:SortId{},VarEnv:SortMap{},VarF:SortId{},VarL:SortInt{},VarOL:SortInt{},VarS:SortBlock{},VarXs:SortIds{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'DotVar7:SortEnvStackCell{},Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblmethod'UndsLParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(VarF:SortId{},VarXs:SortIds{},VarS:SortBlock{})),Var'Unds'DotVar5:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarClass:SortId{}),Var'Unds'DotVar7:SortEnvStackCell{},Lbl'-LT-'location'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarOL:SortInt{}),dotk{}())))),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Lbl'-LT-'nextLoc'-GT-'{}(VarL:SortInt{}),Var'Unds'Gen8:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule166LHS{}(VarClass:SortId{},VarEnv:SortMap{},VarF:SortId{},VarL:SortInt{},VarOL:SortInt{},VarS:SortBlock{},VarXs:SortIds{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'DotVar7:SortEnvStackCell{},Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarClass:SortId{}),Var'Unds'DotVar7:SortEnvStackCell{},Lbl'-LT-'location'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarOL:SortInt{}),dotk{}())))),Lbl'-LT-'env'-GT-'{}(LblMap'Coln'update{}(VarEnv:SortMap{},inj{SortId{}, SortKItem{}}(VarF:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{}))),Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortVal{}, SortKItem{}}(LblmethodClosure'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'Int'Unds'Ids'Unds'Stmt{}(VarClass:SortId{},VarOL:SortInt{},VarXs:SortIds{},inj{SortBlock{}, SortStmt{}}(VarS:SortBlock{})))),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Lbl'-LT-'nextLoc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'Gen8:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(449,8,454,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("dbe8f10c5485ab3c27296ac6ebca66ec08222b7f3eb585084e2ea0dd9be8c266")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`new_(_)_KOOL-SYNTAX_Exp_Id_Exps`(Class,inj{Vals,Exps}(Vs)))~>K),`<control>`(`<fstack>`(`_List_`(`.List`(.KList),_DotVar4)),`<xstack>`(XS),`<crntObj>`(_Gen0,_Gen1,_Gen2)),`<env>`(Env),_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,`<nextLoc>`(L),_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(`create(_)_KOOL_KItem_Id`(Class)~>`storeObj_KOOL_KItem`(.KList)~>inj{Stmt,KItem}(`___KOOL-SYNTAX_Stmt_Stmt_Stmt`(`_;_KOOL-SYNTAX_Stmt_Exp`(`_(_)_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(Class),inj{Vals,Exps}(Vs))),`return_;_KOOL-SYNTAX_Stmt_Exp`(`this_KOOL-SYNTAX_Exp`(.KList))))),`<control>`(`<fstack>`(`_List_`(`ListItem`(`fstackFrame(_,_,_,_)_KOOL_KItem_Map_K_List_K`(Env,K,XS,inj{CrntObjCell,KItem}(`<crntObj>`(_Gen0,_Gen1,_Gen2)))),_DotVar4)),`<xstack>`(XS),`<crntObj>`(`<crntClass>`(#token("Object","Id")),`<envStack>`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(#token("Object","Id"),`.Map`(.KList)))),`<location>`(inj{Int,KItem}(L)))),`<env>`(`.Map`(.KList)),_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,`<nextLoc>`(`_+Int_`(L,#token("1","Int"))),_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(716f458d963cc1ae70531dc959e9c67095afe44bbcd08d26d2557d3982c9d931), org.kframework.attributes.Location(Location(379,8,390,18)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule167LHS{}(SortId{},SortMap{},SortK{},SortInt{},SortVals{},SortList{},SortGeneratedCounterCell{},SortThreadCellSet{},SortList{},SortCrntClassCell{},SortEnvStackCell{},SortClassesCell{},SortLocationCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule167LHS{}(VarClass:SortId{},VarEnv:SortMap{},VarK:SortK{},VarL:SortInt{},VarVs:SortVals{},VarXS:SortList{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortList{},Var'Unds'Gen0:SortCrntClassCell{},Var'Unds'Gen1:SortEnvStackCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortLocationCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(VarClass:SortId{},inj{SortVals{}, SortExps{}}(VarVs:SortVals{}))),VarK:SortK{})),Lbl'-LT-'control'-GT-'{}(Lbl'-LT-'fstack'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar4:SortList{})),Lbl'-LT-'xstack'-GT-'{}(VarXS:SortList{}),Lbl'-LT-'crntObj'-GT-'{}(Var'Unds'Gen0:SortCrntClassCell{},Var'Unds'Gen1:SortEnvStackCell{},Var'Unds'Gen2:SortLocationCell{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Lbl'-LT-'nextLoc'-GT-'{}(VarL:SortInt{}),Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule167LHS{}(VarClass:SortId{},VarEnv:SortMap{},VarK:SortK{},VarL:SortInt{},VarVs:SortVals{},VarXS:SortList{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortList{},Var'Unds'Gen0:SortCrntClassCell{},Var'Unds'Gen1:SortEnvStackCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortLocationCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lblcreate'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(VarClass:SortId{}),kseq{}(LblstoreObj'Unds'KOOL'Unds'KItem{}(),kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Lbl'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarClass:SortId{}),inj{SortVals{}, SortExps{}}(VarVs:SortVals{}))),Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}()))),dotk{}())))),Lbl'-LT-'control'-GT-'{}(Lbl'-LT-'fstack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(VarEnv:SortMap{},VarK:SortK{},VarXS:SortList{},kseq{}(inj{SortCrntObjCell{}, SortKItem{}}(Lbl'-LT-'crntObj'-GT-'{}(Var'Unds'Gen0:SortCrntClassCell{},Var'Unds'Gen1:SortEnvStackCell{},Var'Unds'Gen2:SortLocationCell{})),dotk{}()))),Var'Unds'DotVar4:SortList{})),Lbl'-LT-'xstack'-GT-'{}(VarXS:SortList{}),Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(\dv{SortId{}}("Object")),Lbl'-LT-'envStack'-GT-'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(\dv{SortId{}}("Object"),Lbl'Stop'Map{}()))),Lbl'-LT-'location'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),dotk{}())))),Lbl'-LT-'env'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Lbl'-LT-'nextLoc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(379,8,390,18)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("716f458d963cc1ae70531dc959e9c67095afe44bbcd08d26d2557d3982c9d931")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`new_(_)_KOOL-SYNTAX_Exp_Id_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezernew_(_)_KOOL-SYNTAX_Exp_Id_Exps1_`(inj{Id,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(489ece1efc5a5fb5b7a400ce9ab0e53aa5fb531325f580f6e20621f396db0828), heat, org.kframework.attributes.Location(Location(19,18,19,53)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict(2)]
  alias rule168LHS{}(SortExps{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule168LHS{}(VarHOLE:SortExps{},VarK0:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblnew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(VarK0:SortId{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule168LHS{}(VarHOLE:SortExps{},VarK0:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,53)"), UNIQUE'Unds'ID{}("489ece1efc5a5fb5b7a400ce9ab0e53aa5fb531325f580f6e20621f396db0828")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`print(_);_KOOL-SYNTAX_Stmt_Exps`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerprint(_);_KOOL-SYNTAX_Stmt_Exps0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(51ac50454319f1328c2d11a763c7003c56407f85d4dd3ef12b5c161705f3f44a), heat, org.kframework.attributes.Location(Location(64,19,64,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule169LHS{}(SortExps{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule169LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule169LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,19,64,65)"), UNIQUE'Unds'ID{}("51ac50454319f1328c2d11a763c7003c56407f85d4dd3ef12b5c161705f3f44a")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`print(_);_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(inj{Val,Exp}(V),Es)))~>_DotVar5),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,_Gen5,_Gen6,_Gen7,`<output>`(`_List_`(_DotVar2,`.List`(.KList))),_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`print(_);_KOOL-SYNTAX_Stmt_Exps`(Es))~>_DotVar5),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,_Gen5,_Gen6,_Gen7,`<output>`(`_List_`(_DotVar2,`ListItem`(inj{Val,KItem}(V)))),_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b7c7bd7b290f301453bbe3f0d75bc18f0458905d4dde289d61e1016dc6033e0), org.kframework.attributes.Location(Location(586,8,586,86)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule170LHS{}(SortExps{},SortVal{},SortGeneratedCounterCell{},SortList{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule170LHS{}(VarEs:SortExps{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortList{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}),VarEs:SortExps{}))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar2:SortList{},Lbl'Stop'List{}())),Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule170LHS{}(VarEs:SortExps{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortList{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(VarEs:SortExps{})),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar2:SortList{},LblListItem{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{})))),Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(586,8,586,86)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3b7c7bd7b290f301453bbe3f0d75bc18f0458905d4dde289d61e1016dc6033e0")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`print(_);_KOOL-SYNTAX_Stmt_Exps`(inj{Vals,Exps}(`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(94b60172709aa13297671a0619622d7be113e1362d6c2cb37b3e70e0e38544ea), org.kframework.attributes.Location(Location(587,8,587,26)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule171LHS{}(SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule171LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule171LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(587,8,587,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("94b60172709aa13297671a0619622d7be113e1362d6c2cb37b3e70e0e38544ea")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`read()_KOOL-SYNTAX_Exp`(.KList))~>_DotVar5),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,_Gen5,_Gen6,`<input>`(`_List_`(`ListItem`(inj{Int,KItem}(I)),_DotVar2)),_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(I)~>_DotVar5),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,_Gen5,_Gen6,`<input>`(`_List_`(`.List`(.KList),_DotVar2)),_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b415e4a51aa85296e67e4c72c834a434ae6659af7f60e932e1d27f9382ed144a), org.kframework.attributes.Location(Location(585,8,585,76)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule172LHS{}(SortInt{},SortGeneratedCounterCell{},SortList{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule172LHS{}(VarI:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortList{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblread'LParRParUnds'KOOL-SYNTAX'Unds'Exp{}()),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{})),Var'Unds'DotVar2:SortList{})),Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule172LHS{}(VarI:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortList{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar2:SortList{})),Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(585,8,585,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b415e4a51aa85296e67e4c72c834a434ae6659af7f60e932e1d27f9382ed144a")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`release_;_KOOL-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrelease_;_KOOL-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(cad1e43297f77d2e98e26f4ab8505d77f75733d5e8aee85b61e4aaba13e59b89), heat, org.kframework.attributes.Location(Location(69,19,69,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule173LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule173LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule173LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(69,19,69,65)"), UNIQUE'Unds'ID{}("cad1e43297f77d2e98e26f4ab8505d77f75733d5e8aee85b61e4aaba13e59b89")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`release_;_KOOL-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar4),_Gen0,_Gen1,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(N)),_DotVar5)),_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),_Gen0,_Gen1,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(`_-Int_`(N,#token("1","Int")))),_DotVar5)),_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires `_>Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(e396aad99ba0a224b7adb5f13e59ae06df8a746ec88d71dc540129548ec3beac), org.kframework.attributes.Location(Location(344,8,346,22)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule174LHS{}(SortInt{},SortVal{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortMap{},SortControlCell{},SortEnvCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule174LHS{}(VarN:SortInt{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortMap{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(VarN:SortInt{})),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule174LHS{}(VarN:SortInt{},VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortMap{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")))),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(344,8,346,22)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("e396aad99ba0a224b7adb5f13e59ae06df8a746ec88d71dc540129548ec3beac")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`release_;_KOOL-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar5),_Gen0,_Gen1,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(#token("0","Int"))),_DotVar6)),_Gen2)),_DotVar3)),_Gen3,`<busy>`(`_Set_`(`SetItem`(inj{Val,KItem}(V)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar5),_Gen0,_Gen1,`<holds>`(`_Map_`(`.Map`(.KList),_DotVar6)),_Gen2)),_DotVar3)),_Gen3,`<busy>`(`_Set_`(`.Set`(.KList),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(731ee73665867db416b3eb4eab520107e2f968bbfb64cc476bcf397ca14a08d1), org.kframework.attributes.Location(Location(350,8,351,47)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule175LHS{}(SortVal{},SortGeneratedCounterCell{},SortSet{},SortThreadCellSet{},SortK{},SortMap{},SortControlCell{},SortEnvCell{},SortIdCell{},SortStoreCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule175LHS{}(VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortSet{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'DotVar6:SortMap{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{},Var'Unds'Gen8:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0"))),Var'Unds'DotVar6:SortMap{})),Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar2:SortSet{})),Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{},Var'Unds'Gen8:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule175LHS{}(VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortSet{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'DotVar6:SortMap{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{},Var'Unds'Gen8:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),Var'Unds'DotVar6:SortMap{})),Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),Var'Unds'DotVar2:SortSet{})),Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{},Var'Unds'Gen8:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(350,8,351,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("731ee73665867db416b3eb4eab520107e2f968bbfb64cc476bcf397ca14a08d1")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`rendezvous_;_KOOL-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrendezvous_;_KOOL-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(29623361bbcc66bf3f54a60169e4877dbe499efc41e9779c15f58eeeff685e79), heat, org.kframework.attributes.Location(Location(70,19,70,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule176LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule176LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule176LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(70,19,70,65)"), UNIQUE'Unds'ID{}("29623361bbcc66bf3f54a60169e4877dbe499efc41e9779c15f58eeeff685e79")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`return_;_KOOL-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerreturn_;_KOOL-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(1e6e0e38d96d69198cccc2b2eedeea03c41faa6bd1a267cef7a1c1776305a6d6), heat, org.kframework.attributes.Location(Location(62,19,62,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule177LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule177LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule177LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,19,62,65)"), UNIQUE'Unds'ID{}("1e6e0e38d96d69198cccc2b2eedeea03c41faa6bd1a267cef7a1c1776305a6d6")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`return_;_KOOL-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_Gen0),`<control>`(`<fstack>`(`_List_`(`ListItem`(`fstackFrame(_,_,_,_)_KOOL_KItem_Map_K_List_K`(Env,K,XS,inj{CrntObjCell,KItem}(`<crntObj>`(_Gen4,_Gen5,_Gen6)))),_DotVar4)),`<xstack>`(_Gen1),`<crntObj>`(_Gen7,_Gen8,_Gen9)),`<env>`(_Gen3),_Gen10,_Gen11)),_DotVar2)),_Gen12,_Gen13,_Gen14,_Gen15,_Gen16,_Gen17,_Gen18),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Val,KItem}(V)~>K),`<control>`(`<fstack>`(`_List_`(`.List`(.KList),_DotVar4)),`<xstack>`(XS),`<crntObj>`(_Gen4,_Gen5,_Gen6)),`<env>`(Env),_Gen10,_Gen11)),_DotVar2)),_Gen12,_Gen13,_Gen14,_Gen15,_Gen16,_Gen17,_Gen18),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8b6c6a52ff866d67ae373b9ca3323724aa74d2489f8674c3e5127c7ee506ccbd), org.kframework.attributes.Location(Location(209,8,215,29)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule178LHS{}(SortMap{},SortK{},SortVal{},SortList{},SortGeneratedCounterCell{},SortThreadCellSet{},SortList{},SortK{},SortList{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortMap{},SortCrntClassCell{},SortEnvStackCell{},SortLocationCell{},SortCrntClassCell{},SortEnvStackCell{},SortLocationCell{}) : SortGeneratedTopCell{}
  where rule178LHS{}(VarEnv:SortMap{},VarK:SortK{},VarV:SortVal{},VarXS:SortList{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortList{},Var'Unds'Gen0:SortK{},Var'Unds'Gen1:SortList{},Var'Unds'Gen10:SortHoldsCell{},Var'Unds'Gen11:SortIdCell{},Var'Unds'Gen12:SortStoreCell{},Var'Unds'Gen13:SortBusyCell{},Var'Unds'Gen14:SortTerminatedCell{},Var'Unds'Gen15:SortInputCell{},Var'Unds'Gen16:SortOutputCell{},Var'Unds'Gen17:SortNextLocCell{},Var'Unds'Gen18:SortClassesCell{},Var'Unds'Gen3:SortMap{},Var'Unds'Gen4:SortCrntClassCell{},Var'Unds'Gen5:SortEnvStackCell{},Var'Unds'Gen6:SortLocationCell{},Var'Unds'Gen7:SortCrntClassCell{},Var'Unds'Gen8:SortEnvStackCell{},Var'Unds'Gen9:SortLocationCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'Gen0:SortK{})),Lbl'-LT-'control'-GT-'{}(Lbl'-LT-'fstack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(LblfstackFrame'LParUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Map'Unds'K'Unds'List'Unds'K{}(VarEnv:SortMap{},VarK:SortK{},VarXS:SortList{},kseq{}(inj{SortCrntObjCell{}, SortKItem{}}(Lbl'-LT-'crntObj'-GT-'{}(Var'Unds'Gen4:SortCrntClassCell{},Var'Unds'Gen5:SortEnvStackCell{},Var'Unds'Gen6:SortLocationCell{})),dotk{}()))),Var'Unds'DotVar4:SortList{})),Lbl'-LT-'xstack'-GT-'{}(Var'Unds'Gen1:SortList{}),Lbl'-LT-'crntObj'-GT-'{}(Var'Unds'Gen7:SortCrntClassCell{},Var'Unds'Gen8:SortEnvStackCell{},Var'Unds'Gen9:SortLocationCell{})),Lbl'-LT-'env'-GT-'{}(Var'Unds'Gen3:SortMap{}),Var'Unds'Gen10:SortHoldsCell{},Var'Unds'Gen11:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen12:SortStoreCell{},Var'Unds'Gen13:SortBusyCell{},Var'Unds'Gen14:SortTerminatedCell{},Var'Unds'Gen15:SortInputCell{},Var'Unds'Gen16:SortOutputCell{},Var'Unds'Gen17:SortNextLocCell{},Var'Unds'Gen18:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule178LHS{}(VarEnv:SortMap{},VarK:SortK{},VarV:SortVal{},VarXS:SortList{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortList{},Var'Unds'Gen0:SortK{},Var'Unds'Gen1:SortList{},Var'Unds'Gen10:SortHoldsCell{},Var'Unds'Gen11:SortIdCell{},Var'Unds'Gen12:SortStoreCell{},Var'Unds'Gen13:SortBusyCell{},Var'Unds'Gen14:SortTerminatedCell{},Var'Unds'Gen15:SortInputCell{},Var'Unds'Gen16:SortOutputCell{},Var'Unds'Gen17:SortNextLocCell{},Var'Unds'Gen18:SortClassesCell{},Var'Unds'Gen3:SortMap{},Var'Unds'Gen4:SortCrntClassCell{},Var'Unds'Gen5:SortEnvStackCell{},Var'Unds'Gen6:SortLocationCell{},Var'Unds'Gen7:SortCrntClassCell{},Var'Unds'Gen8:SortEnvStackCell{},Var'Unds'Gen9:SortLocationCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),VarK:SortK{})),Lbl'-LT-'control'-GT-'{}(Lbl'-LT-'fstack'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar4:SortList{})),Lbl'-LT-'xstack'-GT-'{}(VarXS:SortList{}),Lbl'-LT-'crntObj'-GT-'{}(Var'Unds'Gen4:SortCrntClassCell{},Var'Unds'Gen5:SortEnvStackCell{},Var'Unds'Gen6:SortLocationCell{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen10:SortHoldsCell{},Var'Unds'Gen11:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen12:SortStoreCell{},Var'Unds'Gen13:SortBusyCell{},Var'Unds'Gen14:SortTerminatedCell{},Var'Unds'Gen15:SortInputCell{},Var'Unds'Gen16:SortOutputCell{},Var'Unds'Gen17:SortNextLocCell{},Var'Unds'Gen18:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(209,8,215,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8b6c6a52ff866d67ae373b9ca3323724aa74d2489f8674c3e5127c7ee506ccbd")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`sizeOf(_)_KOOL-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezersizeOf(_)_KOOL-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(22422e8f044bc03b576cbef070bc9109c92ad8d1c9febe5f5643a92c1d6e27ea), heat, org.kframework.attributes.Location(Location(24,18,24,50)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule179LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule179LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule179LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,18,24,50)"), UNIQUE'Unds'ID{}("22422e8f044bc03b576cbef070bc9109c92ad8d1c9febe5f5643a92c1d6e27ea")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`sizeOf(_)_KOOL-SYNTAX_Exp_Exp`(inj{Val,Exp}(`array(_,_)_KOOL_Val_Int_Int`(_Gen0,N))))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(N)~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4ca0537faba96eb2c5f27bd3823d69bdddc74faf912fdf40695ac27428892a7e), org.kframework.attributes.Location(Location(544,8,544,31)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule180LHS{}(SortInt{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortInt{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule180LHS{}(VarN:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LblsizeOf'LParUndsRParUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblarray'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Int'Unds'Int{}(Var'Unds'Gen0:SortInt{},VarN:SortInt{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule180LHS{}(VarN:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarN:SortInt{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(544,8,544,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4ca0537faba96eb2c5f27bd3823d69bdddc74faf912fdf40695ac27428892a7e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`this_KOOL-SYNTAX_Exp`(.KList))~>_DotVar4),`<control>`(_Gen0,_Gen1,`<crntObj>`(`<crntClass>`(CC),`<envStack>`(ES),`.LocationCell`(.KList))),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Val,KItem}(`objectClosure(_,_)_KOOL_Val_Id_List`(CC,ES))~>_DotVar4),`<control>`(_Gen0,_Gen1,`<crntObj>`(`<crntClass>`(CC),`<envStack>`(ES),`.LocationCell`(.KList))),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(508c2e757d251a20f5d3ae9cc45018193c28e26bc5f1125676e02f68b4a42236), org.kframework.attributes.Location(Location(420,8,421,82)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule181LHS{}(SortId{},SortList{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortFstackCell{},SortXstackCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule181LHS{}(VarCC:SortId{},VarES:SortList{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblthis'Unds'KOOL-SYNTAX'Unds'Exp{}()),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarCC:SortId{}),Lbl'-LT-'envStack'-GT-'{}(VarES:SortList{}),Lbl'Stop'LocationCell{}())),Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule181LHS{}(VarCC:SortId{},VarES:SortList{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(VarCC:SortId{},VarES:SortList{})),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarCC:SortId{}),Lbl'-LT-'envStack'-GT-'{}(VarES:SortList{}),Lbl'Stop'LocationCell{}())),Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(420,8,421,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("508c2e757d251a20f5d3ae9cc45018193c28e26bc5f1125676e02f68b4a42236")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`throw_;_KOOL-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerthrow_;_KOOL-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(9d41f19335ec9488336a4a31324ef945836e9fa077352cc62d87f00af61b108e), heat, org.kframework.attributes.Location(Location(66,19,66,65)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), strict]
  alias rule182LHS{}(SortExp{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule182LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule182LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(66,19,66,65)"), UNIQUE'Unds'ID{}("9d41f19335ec9488336a4a31324ef945836e9fa077352cc62d87f00af61b108e")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`throw_;_KOOL-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_Gen0),`<control>`(_Gen3,`<xstack>`(`_List_`(`ListItem`(`xstackFrame(_,_,_,_,_)_KOOL_KItem_Id_Stmt_K_Map_K`(X,S2,K,Env,inj{ControlCellFragment,KItem}(`<control>-fragment`(inj{FstackCell,FstackCellOpt}(_Gen5),noXstackCell(.KList),inj{CrntObjCell,CrntObjCellOpt}(_Gen6))))),_DotVar4)),_Gen4),`<env>`(_Gen2),_Gen7,_Gen8)),_DotVar2)),_Gen9,_Gen10,_Gen11,_Gen12,_Gen13,_Gen14,_Gen15),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Block,KItem}(`{_}_KOOL-SYNTAX_Block_Stmt`(`___KOOL-SYNTAX_Stmt_Stmt_Stmt`(`var_;_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(`_=__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(X),inj{Val,Exp}(V)),inj{Vals,Exps}(`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),S2)))~>K),`<control>`(_Gen5,`<xstack>`(`_List_`(`.List`(.KList),_DotVar4)),_Gen6),`<env>`(Env),_Gen7,_Gen8)),_DotVar2)),_Gen9,_Gen10,_Gen11,_Gen12,_Gen13,_Gen14,_Gen15),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(862205168d567458588c0b533794d61b1f3cbc01dea8d67669d30e73b5ef6e30), org.kframework.attributes.Location(Location(293,10,298,29)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule183LHS{}(SortMap{},SortK{},SortStmt{},SortVal{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortList{},SortK{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortMap{},SortFstackCell{},SortCrntObjCell{},SortFstackCell{},SortCrntObjCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule183LHS{}(VarEnv:SortMap{},VarK:SortK{},VarS2:SortStmt{},VarV:SortVal{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortList{},Var'Unds'Gen0:SortK{},Var'Unds'Gen10:SortBusyCell{},Var'Unds'Gen11:SortTerminatedCell{},Var'Unds'Gen12:SortInputCell{},Var'Unds'Gen13:SortOutputCell{},Var'Unds'Gen14:SortNextLocCell{},Var'Unds'Gen15:SortClassesCell{},Var'Unds'Gen2:SortMap{},Var'Unds'Gen3:SortFstackCell{},Var'Unds'Gen4:SortCrntObjCell{},Var'Unds'Gen5:SortFstackCell{},Var'Unds'Gen6:SortCrntObjCell{},Var'Unds'Gen7:SortHoldsCell{},Var'Unds'Gen8:SortIdCell{},Var'Unds'Gen9:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'Gen0:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen3:SortFstackCell{},Lbl'-LT-'xstack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(VarX:SortId{},VarS2:SortStmt{},VarK:SortK{},VarEnv:SortMap{},kseq{}(inj{SortControlCellFragment{}, SortKItem{}}(Lbl'-LT-'control'-GT-'-fragment{}(inj{SortFstackCell{}, SortFstackCellOpt{}}(Var'Unds'Gen5:SortFstackCell{}),LblnoXstackCell{}(),inj{SortCrntObjCell{}, SortCrntObjCellOpt{}}(Var'Unds'Gen6:SortCrntObjCell{}))),dotk{}()))),Var'Unds'DotVar4:SortList{})),Var'Unds'Gen4:SortCrntObjCell{}),Lbl'-LT-'env'-GT-'{}(Var'Unds'Gen2:SortMap{}),Var'Unds'Gen7:SortHoldsCell{},Var'Unds'Gen8:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen9:SortStoreCell{},Var'Unds'Gen10:SortBusyCell{},Var'Unds'Gen11:SortTerminatedCell{},Var'Unds'Gen12:SortInputCell{},Var'Unds'Gen13:SortOutputCell{},Var'Unds'Gen14:SortNextLocCell{},Var'Unds'Gen15:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule183LHS{}(VarEnv:SortMap{},VarK:SortK{},VarS2:SortStmt{},VarV:SortVal{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortList{},Var'Unds'Gen0:SortK{},Var'Unds'Gen10:SortBusyCell{},Var'Unds'Gen11:SortTerminatedCell{},Var'Unds'Gen12:SortInputCell{},Var'Unds'Gen13:SortOutputCell{},Var'Unds'Gen14:SortNextLocCell{},Var'Unds'Gen15:SortClassesCell{},Var'Unds'Gen2:SortMap{},Var'Unds'Gen3:SortFstackCell{},Var'Unds'Gen4:SortCrntObjCell{},Var'Unds'Gen5:SortFstackCell{},Var'Unds'Gen6:SortCrntObjCell{},Var'Unds'Gen7:SortHoldsCell{},Var'Unds'Gen8:SortIdCell{},Var'Unds'Gen9:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraUndsRBraUnds'KOOL-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVal{}, SortExp{}}(VarV:SortVal{})),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),VarS2:SortStmt{}))),VarK:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen5:SortFstackCell{},Lbl'-LT-'xstack'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar4:SortList{})),Var'Unds'Gen6:SortCrntObjCell{}),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen7:SortHoldsCell{},Var'Unds'Gen8:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen9:SortStoreCell{},Var'Unds'Gen10:SortBusyCell{},Var'Unds'Gen11:SortTerminatedCell{},Var'Unds'Gen12:SortInputCell{},Var'Unds'Gen13:SortOutputCell{},Var'Unds'Gen14:SortNextLocCell{},Var'Unds'Gen15:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(293,10,298,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("862205168d567458588c0b533794d61b1f3cbc01dea8d67669d30e73b5ef6e30")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`try_catch(_)__KOOL-SYNTAX_Stmt_Block_Id_Block`(S1,X,`{_}_KOOL-SYNTAX_Block_Stmt`(S2)))~>K),`<control>`(_Gen0,`<xstack>`(`_List_`(`.List`(.KList),_DotVar4)),_Gen1),`<env>`(Env),_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Block,KItem}(S1)~>`popx_KOOL_KItem`(.KList)~>K),`<control>`(_Gen0,`<xstack>`(`_List_`(`ListItem`(`xstackFrame(_,_,_,_,_)_KOOL_KItem_Id_Stmt_K_Map_K`(X,S2,K,Env,inj{ControlCellFragment,KItem}(`<control>-fragment`(inj{FstackCell,FstackCellOpt}(_Gen0),noXstackCell(.KList),inj{CrntObjCell,CrntObjCellOpt}(_Gen1))))),_DotVar4)),_Gen1),`<env>`(Env),_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dd066460498f3c2e044714dfeeaae34b646ae488c54fd3d257d2b493365b54f2), org.kframework.attributes.Location(Location(278,8,283,24)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule184LHS{}(SortMap{},SortK{},SortBlock{},SortStmt{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortList{},SortFstackCell{},SortCrntObjCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule184LHS{}(VarEnv:SortMap{},VarK:SortK{},VarS1:SortBlock{},VarS2:SortStmt{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortList{},Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortCrntObjCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(VarS1:SortBlock{},VarX:SortId{},Lbl'LBraUndsRBraUnds'KOOL-SYNTAX'Unds'Block'Unds'Stmt{}(VarS2:SortStmt{}))),VarK:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen0:SortFstackCell{},Lbl'-LT-'xstack'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar4:SortList{})),Var'Unds'Gen1:SortCrntObjCell{}),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule184LHS{}(VarEnv:SortMap{},VarK:SortK{},VarS1:SortBlock{},VarS2:SortStmt{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortList{},Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortCrntObjCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarS1:SortBlock{}),kseq{}(Lblpopx'Unds'KOOL'Unds'KItem{}(),VarK:SortK{}))),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen0:SortFstackCell{},Lbl'-LT-'xstack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(LblxstackFrame'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Stmt'Unds'K'Unds'Map'Unds'K{}(VarX:SortId{},VarS2:SortStmt{},VarK:SortK{},VarEnv:SortMap{},kseq{}(inj{SortControlCellFragment{}, SortKItem{}}(Lbl'-LT-'control'-GT-'-fragment{}(inj{SortFstackCell{}, SortFstackCellOpt{}}(Var'Unds'Gen0:SortFstackCell{}),LblnoXstackCell{}(),inj{SortCrntObjCell{}, SortCrntObjCellOpt{}}(Var'Unds'Gen1:SortCrntObjCell{}))),dotk{}()))),Var'Unds'DotVar4:SortList{})),Var'Unds'Gen1:SortCrntObjCell{}),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(278,8,283,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("dd066460498f3c2e044714dfeeaae34b646ae488c54fd3d257d2b493365b54f2")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`var_;_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(E1,`_,__KOOL-SYNTAX_Exps_Exp_Exps`(E2,Es))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`___KOOL-SYNTAX_Stmt_Stmt_Stmt`(`var_;_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(E1,`.List{"_,__KOOL-SYNTAX_Exps_Exp_Exps"}_Exps`(.KList))),`var_;_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(E2,Es))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(05c0e979dc50cae79ea8b82355a4b77458873b9b70353d1f540b754d41fac214), org.kframework.attributes.Location(Location(78,8,78,59)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule185LHS{}(SortExp{},SortExp{},SortExps{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule185LHS{}(VarE1:SortExp{},VarE2:SortExp{},VarEs:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE1:SortExp{},Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE2:SortExp{},VarEs:SortExps{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule185LHS{}(VarE1:SortExp{},VarE2:SortExp{},VarEs:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE1:SortExp{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}())),Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE2:SortExp{},VarEs:SortExps{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(78,8,78,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("05c0e979dc50cae79ea8b82355a4b77458873b9b70353d1f540b754d41fac214")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`var_;_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(`_=__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(X),E),`.List{"_,__KOOL-SYNTAX_Exps_Exp_Exps"}_Exps`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`___KOOL-SYNTAX_Stmt_Stmt_Stmt`(`var_;_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),`.List{"_,__KOOL-SYNTAX_Exps_Exp_Exps"}_Exps`(.KList))),`_;_KOOL-SYNTAX_Stmt_Exp`(`_=__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(X),E))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4c29fb35d8a681c0afe7e1a5385c95ad72623cecfc83df69550b4c0599c3766f), org.kframework.attributes.Location(Location(79,8,79,38)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule186LHS{}(SortExp{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule186LHS{}(VarE:SortExp{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),VarE:SortExp{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule186LHS{}(VarE:SortExp{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}())),Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),VarE:SortExp{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(79,8,79,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4c29fb35d8a681c0afe7e1a5385c95ad72623cecfc83df69550b4c0599c3766f")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`var_;_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(X),inj{Vals,Exps}(`_,__KOOL-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N),`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Vals,Exps}(`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar5),_Gen0,`<env>`(Env),_Gen1,_Gen2)),_DotVar3)),`<store>`(`_Map_`(`.Map`(.KList),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,`<nextLoc>`(L),_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar5),_Gen0,`<env>`(`Map:update`(Env,inj{Id,KItem}(X),inj{Int,KItem}(L))),_Gen1,_Gen2)),_DotVar3)),`<store>`(`_Map_`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Val,KItem}(`array(_,_)_KOOL_Val_Int_Int`(`_+Int_`(L,#token("1","Int")),N))),`_..._|->__KOOL_Map_Int_Int_K`(`_+Int_`(L,#token("1","Int")),`_+Int_`(L,N),`undefined_KOOL_KItem`(.KList))),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,`<nextLoc>`(`_+Int_`(`_+Int_`(L,#token("1","Int")),N)),_Gen7),_DotVar0) requires `_>=Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(c9d2127dd550b6e5f497389cd6c089a0f726d3445cd4d79b01b35fcb6ec3b636), org.kframework.attributes.Location(Location(159,8,164,23)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule187LHS{}(SortMap{},SortInt{},SortInt{},SortId{},SortGeneratedCounterCell{},SortMap{},SortThreadCellSet{},SortK{},SortControlCell{},SortHoldsCell{},SortIdCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule187LHS{}(VarEnv:SortMap{},VarL:SortInt{},VarN:SortInt{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN:SortInt{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Lbl'-LT-'nextLoc'-GT-'{}(VarL:SortInt{}),Var'Unds'Gen7:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule187LHS{}(VarEnv:SortMap{},VarL:SortInt{},VarN:SortInt{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(LblMap'Coln'update{}(VarEnv:SortMap{},inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{}))),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortVal{}, SortKItem{}}(Lblarray'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Int'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")),VarN:SortInt{}))),Lbl'UndsStopStopStopUndsPipe'-'-GT-UndsUnds'KOOL'Unds'Map'Unds'Int'Unds'Int'Unds'K{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},VarN:SortInt{}),kseq{}(Lblundefined'Unds'KOOL'Unds'KItem{}(),dotk{}()))),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Lbl'-LT-'nextLoc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")),VarN:SortInt{})),Var'Unds'Gen7:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(159,8,164,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("c9d2127dd550b6e5f497389cd6c089a0f726d3445cd4d79b01b35fcb6ec3b636")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`var_;_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(X),inj{Vals,Exps}(`_,__KOOL-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N1),`_,__KOOL-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N2),Vs)))),inj{Vals,Exps}(`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`___KOOL-SYNTAX_Stmt_Stmt_Stmt`(`var_;_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(X),inj{Vals,Exps}(`_,__KOOL-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N1),`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Vals,Exps}(`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Block,Stmt}(`{_}_KOOL-SYNTAX_Block_Stmt`(inj{Block,Stmt}(`{_}_KOOL-SYNTAX_Block_Stmt`(`___KOOL-SYNTAX_Stmt_Stmt_Stmt`(`var_;_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(`_=__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(#token("$1","Id")),inj{Int,Exp}(#token("0","Int"))),inj{Vals,Exps}(`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),`while(_)__KOOL-SYNTAX_Stmt_Exp_Block`(`_<=__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(#token("$1","Id")),`_-__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(N1),inj{Int,Exp}(#token("1","Int")))),`{_}_KOOL-SYNTAX_Block_Stmt`(`___KOOL-SYNTAX_Stmt_Stmt_Stmt`(`___KOOL-SYNTAX_Stmt_Stmt_Stmt`(`var_;_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(#token("$2","Id")),inj{Vals,Exps}(`_,__KOOL-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N2),Vs))),inj{Vals,Exps}(`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),`_;_KOOL-SYNTAX_Stmt_Exp`(`_=__KOOL-SYNTAX_Exp_Exp_Exp`(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(X),`_,__KOOL-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(#token("$1","Id")),inj{Vals,Exps}(`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Id,Exp}(#token("$2","Id"))))),`_;_KOOL-SYNTAX_Stmt_Exp`(`++__KOOL-SYNTAX_Exp_Exp`(inj{Id,Exp}(#token("$1","Id"))))))))))))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ba150b859017553a347d6b45beb4d6db31885d5a7de5514d0d24e1f000bc52d6), org.kframework.attributes.Location(Location(169,8,176,9)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule188LHS{}(SortInt{},SortInt{},SortVals{},SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule188LHS{}(VarN1:SortInt{},VarN2:SortInt{},VarVs:SortVals{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN1:SortInt{}),Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN2:SortInt{}),VarVs:SortVals{})))),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule188LHS{}(VarN1:SortInt{},VarN2:SortInt{},VarVs:SortVals{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN1:SortInt{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortBlock{}, SortStmt{}}(Lbl'LBraUndsRBraUnds'KOOL-SYNTAX'Unds'Block'Unds'Stmt{}(inj{SortBlock{}, SortStmt{}}(Lbl'LBraUndsRBraUnds'KOOL-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$1")),inj{SortInt{}, SortExp{}}(\dv{SortInt{}}("0"))),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Lbl'Unds-LT-EqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$1")),Lbl'Unds'-'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarN1:SortInt{}),inj{SortInt{}, SortExp{}}(\dv{SortInt{}}("1")))),Lbl'LBraUndsRBraUnds'KOOL-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$2")),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN2:SortInt{}),VarVs:SortVals{}))),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$1")),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortId{}, SortExp{}}(\dv{SortId{}}("$2"))))),Lbl'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(Lbl'PlusPlusUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$1")))))))))))))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(169,8,176,9)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ba150b859017553a347d6b45beb4d6db31885d5a7de5514d0d24e1f000bc52d6")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`var_;_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(`_[_]_KOOL-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(_Gen0),HOLE),inj{Vals,Exps}(`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezervar_;_KOOL-SYNTAX_Stmt_Exps1_`(inj{Id,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(cc1996286f56228066089902d11394ee6ab12358571d4e56fd39077c126d4ccb), heat, org.kframework.attributes.Location(Location(154,11,154,26)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule189LHS{}(SortExps{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortId{},SortControlCell{},SortNextLocCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule189LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(Var'Unds'Gen0:SortId{}),VarHOLE:SortExps{}),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule189LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezervar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{},Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), heat{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(154,11,154,26)"), UNIQUE'Unds'ID{}("cc1996286f56228066089902d11394ee6ab12358571d4e56fd39077c126d4ccb")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`var_;_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),inj{Vals,Exps}(`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar5),_Gen0,`<env>`(Env),_Gen1,_Gen2)),_DotVar3)),`<store>`(`_Map_`(`.Map`(.KList),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,`<nextLoc>`(L),_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar5),_Gen0,`<env>`(`Map:update`(Env,inj{Id,KItem}(X),inj{Int,KItem}(L))),_Gen1,_Gen2)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),`undefined_KOOL_KItem`(.KList)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,`<nextLoc>`(`_+Int_`(L,#token("1","Int"))),_Gen7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d8ea2285c930b9e0eb9113ee5964ca904d9866a53f4234040ef333666e3a8ef9), org.kframework.attributes.Location(Location(147,8,150,42)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule190LHS{}(SortMap{},SortInt{},SortId{},SortGeneratedCounterCell{},SortMap{},SortThreadCellSet{},SortK{},SortControlCell{},SortHoldsCell{},SortIdCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule190LHS{}(VarEnv:SortMap{},VarL:SortInt{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Lbl'-LT-'nextLoc'-GT-'{}(VarL:SortInt{}),Var'Unds'Gen7:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule190LHS{}(VarEnv:SortMap{},VarL:SortInt{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(LblMap'Coln'update{}(VarEnv:SortMap{},inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{}))),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),Lblundefined'Unds'KOOL'Unds'KItem{}()),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Lbl'-LT-'nextLoc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'Gen7:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(147,8,150,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d8ea2285c930b9e0eb9113ee5964ca904d9866a53f4234040ef333666e3a8ef9")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`while(_)__KOOL-SYNTAX_Stmt_Exp_Block`(E,S))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__KOOL-SYNTAX_Stmt_Exp_Block_Block`(E,`{_}_KOOL-SYNTAX_Block_Stmt`(`___KOOL-SYNTAX_Stmt_Stmt_Stmt`(inj{Block,Stmt}(S),`while(_)__KOOL-SYNTAX_Stmt_Exp_Block`(E,S))),`{}_KOOL-SYNTAX_Block`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(048203e7c274174d81a1fd2773eb7c97571d0e23db1d623334b7a3d39cdcc882), org.kframework.attributes.Location(Location(574,8,574,43)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule191LHS{}(SortExp{},SortBlock{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule191LHS{}(VarE:SortExp{},VarS:SortBlock{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(VarE:SortExp{},VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule191LHS{}(VarE:SortExp{},VarS:SortBlock{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarE:SortExp{},Lbl'LBraUndsRBraUnds'KOOL-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(inj{SortBlock{}, SortStmt{}}(VarS:SortBlock{}),Lblwhile'LParUndsRParUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(VarE:SortExp{},VarS:SortBlock{}))),Lbl'LBraRBraUnds'KOOL-SYNTAX'Unds'Block{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(574,8,574,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("048203e7c274174d81a1fd2773eb7c97571d0e23db1d623334b7a3d39cdcc882")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Block,KItem}(`{_}_KOOL-SYNTAX_Block_Stmt`(S))~>_DotVar4),_Gen0,`<env>`(Env),_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(S)~>`setEnv(_)_KOOL_KItem_Map`(Env)~>_DotVar4),_Gen0,`<env>`(Env),_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b48b4b8c855efa270242a5a3764d011e2f40f3d326c94e11926c6f02972733b), org.kframework.attributes.Location(Location(566,8,566,63)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule192LHS{}(SortMap{},SortStmt{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule192LHS{}(VarEnv:SortMap{},VarS:SortStmt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraUndsRBraUnds'KOOL-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule192LHS{}(VarEnv:SortMap{},VarS:SortStmt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),kseq{}(LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(VarEnv:SortMap{}),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{},Var'Unds'Gen9:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(566,8,566,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3b48b4b8c855efa270242a5a3764d011e2f40f3d326c94e11926c6f02972733b")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Block,KItem}(`{}_KOOL-SYNTAX_Block`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(18c6aa78e72fbc50ce67587d11bcf71cdf5c5a438a5a18ee8461e558e9580fb4), org.kframework.attributes.Location(Location(564,8,564,15)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule193LHS{}(SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortControlCell{},SortEnvCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule193LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraRBraUnds'KOOL-SYNTAX'Unds'Block{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule193LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(564,8,564,15)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("18c6aa78e72fbc50ce67587d11bcf71cdf5c5a438a5a18ee8461e558e9580fb4")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(`popx_KOOL_KItem`(.KList)~>_DotVar4),`<control>`(_Gen1,`<xstack>`(`_List_`(`ListItem`(_Gen0),_DotVar6)),_Gen2),_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),`<control>`(_Gen1,`<xstack>`(`_List_`(`.List`(.KList),_DotVar6)),_Gen2),_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0083f622251d2ac5087566ff1355e9cbed76a54c1d12a04a1ee75428de3805a), org.kframework.attributes.Location(Location(288,8,289,50)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule194LHS{}(SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortList{},SortKItem{},SortFstackCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortCrntObjCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{}) : SortGeneratedTopCell{}
  where rule194LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar6:SortList{},Var'Unds'Gen0:SortKItem{},Var'Unds'Gen1:SortFstackCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortCrntObjCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lblpopx'Unds'KOOL'Unds'KItem{}(),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen1:SortFstackCell{},Lbl'-LT-'xstack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(Var'Unds'Gen0:SortKItem{}),Var'Unds'DotVar6:SortList{})),Var'Unds'Gen2:SortCrntObjCell{}),Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule194LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar6:SortList{},Var'Unds'Gen0:SortKItem{},Var'Unds'Gen1:SortFstackCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortCrntObjCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen1:SortFstackCell{},Lbl'-LT-'xstack'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar6:SortList{})),Var'Unds'Gen2:SortCrntObjCell{}),Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(288,8,289,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b0083f622251d2ac5087566ff1355e9cbed76a54c1d12a04a1ee75428de3805a")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(`setCrntClass(_)_KOOL_KItem_Id`(C)~>_DotVar4),`<control>`(_Gen3,_Gen4,`<crntObj>`(`<crntClass>`(_Gen0),_Gen1,_Gen2)),_Gen5,_Gen6,_Gen7)),_DotVar2)),_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13,_Gen14),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),`<control>`(_Gen3,_Gen4,`<crntObj>`(`<crntClass>`(C),_Gen1,_Gen2)),_Gen5,_Gen6,_Gen7)),_DotVar2)),_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13,_Gen14),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1fb329c654975314c9d330c22387fab432273bcdedde230a3b0302c2bf363171), org.kframework.attributes.Location(Location(404,8,405,39)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule195LHS{}(SortId{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortId{},SortEnvStackCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortLocationCell{},SortFstackCell{},SortXstackCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{}) : SortGeneratedTopCell{}
  where rule195LHS{}(VarC:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortEnvStackCell{},Var'Unds'Gen10:SortTerminatedCell{},Var'Unds'Gen11:SortInputCell{},Var'Unds'Gen12:SortOutputCell{},Var'Unds'Gen13:SortNextLocCell{},Var'Unds'Gen14:SortClassesCell{},Var'Unds'Gen2:SortLocationCell{},Var'Unds'Gen3:SortFstackCell{},Var'Unds'Gen4:SortXstackCell{},Var'Unds'Gen5:SortEnvCell{},Var'Unds'Gen6:SortHoldsCell{},Var'Unds'Gen7:SortIdCell{},Var'Unds'Gen8:SortStoreCell{},Var'Unds'Gen9:SortBusyCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblsetCrntClass'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Id{}(VarC:SortId{}),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen3:SortFstackCell{},Var'Unds'Gen4:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(Var'Unds'Gen0:SortId{}),Var'Unds'Gen1:SortEnvStackCell{},Var'Unds'Gen2:SortLocationCell{})),Var'Unds'Gen5:SortEnvCell{},Var'Unds'Gen6:SortHoldsCell{},Var'Unds'Gen7:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen8:SortStoreCell{},Var'Unds'Gen9:SortBusyCell{},Var'Unds'Gen10:SortTerminatedCell{},Var'Unds'Gen11:SortInputCell{},Var'Unds'Gen12:SortOutputCell{},Var'Unds'Gen13:SortNextLocCell{},Var'Unds'Gen14:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule195LHS{}(VarC:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortEnvStackCell{},Var'Unds'Gen10:SortTerminatedCell{},Var'Unds'Gen11:SortInputCell{},Var'Unds'Gen12:SortOutputCell{},Var'Unds'Gen13:SortNextLocCell{},Var'Unds'Gen14:SortClassesCell{},Var'Unds'Gen2:SortLocationCell{},Var'Unds'Gen3:SortFstackCell{},Var'Unds'Gen4:SortXstackCell{},Var'Unds'Gen5:SortEnvCell{},Var'Unds'Gen6:SortHoldsCell{},Var'Unds'Gen7:SortIdCell{},Var'Unds'Gen8:SortStoreCell{},Var'Unds'Gen9:SortBusyCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen3:SortFstackCell{},Var'Unds'Gen4:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarC:SortId{}),Var'Unds'Gen1:SortEnvStackCell{},Var'Unds'Gen2:SortLocationCell{})),Var'Unds'Gen5:SortEnvCell{},Var'Unds'Gen6:SortHoldsCell{},Var'Unds'Gen7:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen8:SortStoreCell{},Var'Unds'Gen9:SortBusyCell{},Var'Unds'Gen10:SortTerminatedCell{},Var'Unds'Gen11:SortInputCell{},Var'Unds'Gen12:SortOutputCell{},Var'Unds'Gen13:SortNextLocCell{},Var'Unds'Gen14:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(404,8,405,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("1fb329c654975314c9d330c22387fab432273bcdedde230a3b0302c2bf363171")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(`setEnv(_)_KOOL_KItem_Map`(Env)~>_DotVar4),_Gen1,`<env>`(_Gen0),_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),_Gen1,`<env>`(Env),_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3da36596bd452e810a98947658f0fb3f22d21794128b62292b4e4825bc1942bb), org.kframework.attributes.Location(Location(577,8,578,29)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule196LHS{}(SortMap{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortMap{},SortControlCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule196LHS{}(VarEnv:SortMap{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(VarEnv:SortMap{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(Var'Unds'Gen0:SortMap{}),Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule196LHS{}(VarEnv:SortMap{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(577,8,578,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3da36596bd452e810a98947658f0fb3f22d21794128b62292b4e4825bc1942bb")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(`setEnv(_)_KOOL_KItem_Map`(_Gen0)~>`setEnv(_)_KOOL_KItem_Map`(_Gen1)~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(`setEnv(_)_KOOL_KItem_Map`(_Gen1)~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d97abfc868984ba1a70d85ebd3120a95d82958c991bbd7c23bd55e6c23d26c4), org.kframework.attributes.Location(Location(579,8,579,37)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule197LHS{}(SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortMap{},SortMap{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortControlCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{}) : SortGeneratedTopCell{}
  where rule197LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortMap{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Var'Unds'Gen0:SortMap{}),kseq{}(LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Var'Unds'Gen1:SortMap{}),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule197LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortMap{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblsetEnv'LParUndsRParUnds'KOOL'Unds'KItem'Unds'Map{}(Var'Unds'Gen1:SortMap{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{},Var'Unds'Gen12:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(579,8,579,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2d97abfc868984ba1a70d85ebd3120a95d82958c991bbd7c23bd55e6c23d26c4")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(`storeObj_KOOL_KItem`(.KList)~>_DotVar5),`<control>`(_Gen0,_Gen1,`<crntObj>`(`<crntClass>`(CC),`<envStack>`(ES),`<location>`(inj{Int,KItem}(L)))),_Gen2,_Gen3,_Gen4)),_DotVar3)),`<store>`(`_Map_`(`.Map`(.KList),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar5),`<control>`(_Gen0,_Gen1,`<crntObj>`(`<crntClass>`(CC),`<envStack>`(ES),`.LocationCell`(.KList))),_Gen2,_Gen3,_Gen4)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Val,KItem}(`objectClosure(_,_)_KOOL_Val_Id_List`(CC,ES))),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(49c3dc8aee09d7d663d2508a8a3cccd97fd2b9b8e3671267f10eab241adb9871), org.kframework.attributes.Location(Location(416,8,418,66)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule198LHS{}(SortId{},SortList{},SortInt{},SortGeneratedCounterCell{},SortMap{},SortThreadCellSet{},SortK{},SortFstackCell{},SortXstackCell{},SortClassesCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortBusyCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{}) : SortGeneratedTopCell{}
  where rule198LHS{}(VarCC:SortId{},VarES:SortList{},VarL:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblstoreObj'Unds'KOOL'Unds'KItem{}(),Var'Unds'DotVar5:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarCC:SortId{}),Lbl'-LT-'envStack'-GT-'{}(VarES:SortList{}),Lbl'-LT-'location'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),dotk{}())))),Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule198LHS{}(VarCC:SortId{},VarES:SortList{},VarL:SortInt{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortMap{},Var'Unds'DotVar3:SortThreadCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Lbl'-LT-'crntClass'-GT-'{}(VarCC:SortId{}),Lbl'-LT-'envStack'-GT-'{}(VarES:SortList{}),Lbl'Stop'LocationCell{}())),Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortVal{}, SortKItem{}}(LblobjectClosure'LParUndsCommUndsRParUnds'KOOL'Unds'Val'Unds'Id'Unds'List{}(VarCC:SortId{},VarES:SortList{}))),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{},Var'Unds'Gen10:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(416,8,418,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("49c3dc8aee09d7d663d2508a8a3cccd97fd2b9b8e3671267f10eab241adb9871")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`rendezvous_;_KOOL-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`rendezvous_;_KOOL-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar6),_Gen4,_Gen5,_Gen6,_Gen7))),_DotVar2)),_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13,_Gen14),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar6),_Gen4,_Gen5,_Gen6,_Gen7))),_DotVar2)),_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13,_Gen14),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(00b3e5548430185d985e12aa8389486ad38ab67ba1d65df79b3813eddc9d9df5), org.kframework.attributes.Location(Location(354,8,355,38)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule199LHS{}(SortVal{},SortGeneratedCounterCell{},SortThreadCellSet{},SortK{},SortK{},SortControlCell{},SortEnvCell{},SortTerminatedCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortHoldsCell{},SortIdCell{},SortControlCell{},SortEnvCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{}) : SortGeneratedTopCell{}
  where rule199LHS{}(VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar6:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortTerminatedCell{},Var'Unds'Gen11:SortInputCell{},Var'Unds'Gen12:SortOutputCell{},Var'Unds'Gen13:SortNextLocCell{},Var'Unds'Gen14:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortControlCell{},Var'Unds'Gen5:SortEnvCell{},Var'Unds'Gen6:SortHoldsCell{},Var'Unds'Gen7:SortIdCell{},Var'Unds'Gen8:SortStoreCell{},Var'Unds'Gen9:SortBusyCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar6:SortK{})),Var'Unds'Gen4:SortControlCell{},Var'Unds'Gen5:SortEnvCell{},Var'Unds'Gen6:SortHoldsCell{},Var'Unds'Gen7:SortIdCell{}))),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen8:SortStoreCell{},Var'Unds'Gen9:SortBusyCell{},Var'Unds'Gen10:SortTerminatedCell{},Var'Unds'Gen11:SortInputCell{},Var'Unds'Gen12:SortOutputCell{},Var'Unds'Gen13:SortNextLocCell{},Var'Unds'Gen14:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule199LHS{}(VarV:SortVal{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar6:SortK{},Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen10:SortTerminatedCell{},Var'Unds'Gen11:SortInputCell{},Var'Unds'Gen12:SortOutputCell{},Var'Unds'Gen13:SortNextLocCell{},Var'Unds'Gen14:SortClassesCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{},Var'Unds'Gen4:SortControlCell{},Var'Unds'Gen5:SortEnvCell{},Var'Unds'Gen6:SortHoldsCell{},Var'Unds'Gen7:SortIdCell{},Var'Unds'Gen8:SortStoreCell{},Var'Unds'Gen9:SortBusyCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar6:SortK{}),Var'Unds'Gen4:SortControlCell{},Var'Unds'Gen5:SortEnvCell{},Var'Unds'Gen6:SortHoldsCell{},Var'Unds'Gen7:SortIdCell{}))),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen8:SortStoreCell{},Var'Unds'Gen9:SortBusyCell{},Var'Unds'Gen10:SortTerminatedCell{},Var'Unds'Gen11:SortInputCell{},Var'Unds'Gen12:SortOutputCell{},Var'Unds'Gen13:SortNextLocCell{},Var'Unds'Gen14:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(354,8,355,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("00b3e5548430185d985e12aa8389486ad38ab67ba1d65df79b3813eddc9d9df5")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`spawn__KOOL-SYNTAX_Exp_Block`(S))~>_DotVar4),`<control>`(_Gen3,_Gen4,`<crntObj>`(_Gen0,_Gen1,_Gen2)),`<env>`(Env),_Gen5,_Gen6)),`.ThreadCellSet`(.KList)),_DotVar2)),_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13),`<generatedCounter>`(#Fresh))=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(`freshInt(_)_INT_Int_Int`(`_+Int_`(#Fresh,#token("0","Int"))))~>_DotVar4),`<control>`(_Gen3,_Gen4,`<crntObj>`(_Gen0,_Gen1,_Gen2)),`<env>`(Env),_Gen5,_Gen6)),`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Block,KItem}(S)),`<control>`(initFstackCell(.KList),initXstackCell(.KList),`<crntObj>`(_Gen0,_Gen1,_Gen2)),`<env>`(Env),initHoldsCell(.KList),`<id>`(`freshInt(_)_INT_Int_Int`(`_+Int_`(#Fresh,#token("0","Int"))))))),_DotVar2)),_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13),`<generatedCounter>`(`_+Int_`(#Fresh,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a0eb6538edd939ada4d5fab83408041eb45d97f89cfe98771d9e32398be1a9dc), org.kframework.attributes.Location(Location(302,8,312,27)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule200LHS{}(SortInt{},SortMap{},SortBlock{},SortThreadCellSet{},SortK{},SortCrntClassCell{},SortEnvStackCell{},SortInputCell{},SortOutputCell{},SortNextLocCell{},SortClassesCell{},SortLocationCell{},SortFstackCell{},SortXstackCell{},SortHoldsCell{},SortIdCell{},SortStoreCell{},SortBusyCell{},SortTerminatedCell{}) : SortGeneratedTopCell{}
  where rule200LHS{}(Var'Hash'Fresh:SortInt{},VarEnv:SortMap{},VarS:SortBlock{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortCrntClassCell{},Var'Unds'Gen1:SortEnvStackCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{},Var'Unds'Gen2:SortLocationCell{},Var'Unds'Gen3:SortFstackCell{},Var'Unds'Gen4:SortXstackCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblspawn'UndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Block{}(VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen3:SortFstackCell{},Var'Unds'Gen4:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Var'Unds'Gen0:SortCrntClassCell{},Var'Unds'Gen1:SortEnvStackCell{},Var'Unds'Gen2:SortLocationCell{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{})),Lbl'Stop'ThreadCellSet{}()),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{}),Lbl'-LT-'generatedCounter'-GT-'{}(Var'Hash'Fresh:SortInt{}))) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule200LHS{}(Var'Hash'Fresh:SortInt{},VarEnv:SortMap{},VarS:SortBlock{},Var'Unds'DotVar2:SortThreadCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortCrntClassCell{},Var'Unds'Gen1:SortEnvStackCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{},Var'Unds'Gen2:SortLocationCell{},Var'Unds'Gen3:SortFstackCell{},Var'Unds'Gen4:SortXstackCell{},Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(Var'Hash'Fresh:SortInt{},\dv{SortInt{}}("0")))),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen3:SortFstackCell{},Var'Unds'Gen4:SortXstackCell{},Lbl'-LT-'crntObj'-GT-'{}(Var'Unds'Gen0:SortCrntClassCell{},Var'Unds'Gen1:SortEnvStackCell{},Var'Unds'Gen2:SortLocationCell{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen5:SortHoldsCell{},Var'Unds'Gen6:SortIdCell{})),LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarS:SortBlock{}),dotk{}())),Lbl'-LT-'control'-GT-'{}(LblinitFstackCell{}(),LblinitXstackCell{}(),Lbl'-LT-'crntObj'-GT-'{}(Var'Unds'Gen0:SortCrntClassCell{},Var'Unds'Gen1:SortEnvStackCell{},Var'Unds'Gen2:SortLocationCell{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),LblinitHoldsCell{}(),Lbl'-LT-'id'-GT-'{}(LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(Var'Hash'Fresh:SortInt{},\dv{SortInt{}}("0"))))))),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{},Var'Unds'Gen13:SortClassesCell{}),Lbl'-LT-'generatedCounter'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(Var'Hash'Fresh:SortInt{},\dv{SortInt{}}("1"))))))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(302,8,312,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a0eb6538edd939ada4d5fab83408041eb45d97f89cfe98771d9e32398be1a9dc")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("false","Bool"))=>#token("\"false\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f), org.kframework.attributes.Location(Location(1585,8,1585,37)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
     \and{SortString{}} (
       \dv{SortString{}}("false"),
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1585,8,1585,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("true","Bool"))=>#token("\"true\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d), org.kframework.attributes.Location(Location(1584,8,1584,36)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
     \and{SortString{}} (
       \dv{SortString{}}("true"),
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1584,8,1584,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d")]

// rule `ClassDataCellMapKey`(`<classData>`(Key,_Gen0,_Gen1))=>Key requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(747f7a06bd4c14145121771d9da7921eab078d66bfe799912fa06ede192a84e3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortClassDataCell{}, R} (
            X0:SortClassDataCell{},
            Lbl'-LT-'classData'-GT-'{}(VarKey:SortClassNameCell{},Var'Unds'Gen0:SortBaseClassCell{},Var'Unds'Gen1:SortDeclarationsCell{})
          ),
          \top{R} ()
        )),
    \equals{SortClassNameCell{},R} (
      LblClassDataCellMapKey{}(X0:SortClassDataCell{}),
     \and{SortClassNameCell{}} (
       VarKey:SortClassNameCell{},
        \top{SortClassNameCell{}}())))
  [UNIQUE'Unds'ID{}("747f7a06bd4c14145121771d9da7921eab078d66bfe799912fa06ede192a84e3")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"false\"","String"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835), org.kframework.attributes.Location(Location(1591,8,1591,37)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1591,8,1591,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"true\"","String"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8), org.kframework.attributes.Location(Location(1590,8,1590,36)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1590,8,1590,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8")]

// rule `_..._|->__KOOL_Map_Int_Int_K`(N,M,K #as _Gen0)=>`_Map_`(`_|->_`(inj{Int,KItem}(N),K),`_..._|->__KOOL_Map_Int_Int_K`(`_+Int_`(N,#token("1","Int")),M,_Gen0)) requires `_<=Int_`(N,M) ensures #token("true","Bool") [UNIQUE_ID(3ca5e206bcbf210fd6a5008da5d2b5869d6c50ae06bbcb1ea4bd94efb69d0bee), org.kframework.attributes.Location(Location(583,8,583,71)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarM:SortInt{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            \and{SortK{}}(kseq{}(VarK:SortKItem{},dotk{}()),Var'Unds'Gen0:SortK{})
          ),
          \top{R} ()
        )))),
    \equals{SortMap{},R} (
      Lbl'UndsStopStopStopUndsPipe'-'-GT-UndsUnds'KOOL'Unds'Map'Unds'Int'Unds'Int'Unds'K{}(X0:SortInt{},X1:SortInt{},X2:SortK{}),
     \and{SortMap{}} (
       Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarN:SortInt{}),VarK:SortKItem{}),Lbl'UndsStopStopStopUndsPipe'-'-GT-UndsUnds'KOOL'Unds'Map'Unds'Int'Unds'Int'Unds'K{}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),VarM:SortInt{},Var'Unds'Gen0:SortK{})),
        \top{SortMap{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(583,8,583,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("3ca5e206bcbf210fd6a5008da5d2b5869d6c50ae06bbcb1ea4bd94efb69d0bee")]

// rule `_..._|->__KOOL_Map_Int_Int_K`(N,M,_Gen0)=>`.Map`(.KList) requires `_>Int_`(N,M) ensures #token("true","Bool") [UNIQUE_ID(f8a7c60b9d9861aaab8b51f0e78ce874e2ae0077264bbe4b8f862d6000b66d22), org.kframework.attributes.Location(Location(582,8,582,46)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarM:SortInt{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            Var'Unds'Gen0:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortMap{},R} (
      Lbl'UndsStopStopStopUndsPipe'-'-GT-UndsUnds'KOOL'Unds'Map'Unds'Int'Unds'Int'Unds'K{}(X0:SortInt{},X1:SortInt{},X2:SortK{}),
     \and{SortMap{}} (
       Lbl'Stop'Map{}(),
        \top{SortMap{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(582,8,582,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("f8a7c60b9d9861aaab8b51f0e78ce874e2ae0077264bbe4b8f862d6000b66d22")]

// rule `_<=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80), org.kframework.attributes.Location(Location(1684,8,1684,63)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1684,8,1684,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80")]

// rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f), org.kframework.attributes.Location(Location(960,8,960,57)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB1:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB2:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(960,8,960,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f")]

// rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3), org.kframework.attributes.Location(Location(1250,8,1250,53)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Int'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1250,8,1250,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3")]

// rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c), org.kframework.attributes.Location(Location(2220,8,2220,45)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarK2:SortK{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'K'Unds'{}(X0:SortK{},X1:SortK{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2220,8,2220,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c")]

// rule `_=/=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_==String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7), org.kframework.attributes.Location(Location(1664,8,1664,65)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1664,8,1664,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7")]

// rule `_==Bool_`(K1,K2)=>`_==K_`(inj{Bool,KItem}(K1),inj{Bool,KItem}(K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(38ffdc1e6b663e78098dbe23e48e95796e1eaea0d8c363333e68c6a642528346), org.kframework.attributes.Location(Location(2210,8,2210,43)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK1:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK2:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsEqls'Bool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarK1:SortBool{}),dotk{}()),kseq{}(inj{SortBool{}, SortKItem{}}(VarK2:SortBool{}),dotk{}())),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2210,8,2210,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("38ffdc1e6b663e78098dbe23e48e95796e1eaea0d8c363333e68c6a642528346")]

// rule `_==Int_`(I1,I2)=>`_==K_`(inj{Int,KItem}(I1),inj{Int,KItem}(I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(07c2f9d6aae03c707c0d053b86a56d020de84928e5c794dd863a33fdc95c0f67), org.kframework.attributes.Location(Location(1206,8,1206,40)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsEqls'Int'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI1:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}())),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1206,8,1206,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("07c2f9d6aae03c707c0d053b86a56d020de84928e5c794dd863a33fdc95c0f67")]

// rule `_==String__STRING-COMMON_Bool_String_String`(S1,S2)=>`_==K_`(inj{String,KItem}(S1),inj{String,KItem}(S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(64c904c4f6b48cb30503562ba4561ee04dffc8820b3a2fa3056fef97a9386488), org.kframework.attributes.Location(Location(1718,8,1718,49)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS1:SortString{}),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(VarS2:SortString{}),dotk{}())),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1718,8,1718,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("64c904c4f6b48cb30503562ba4561ee04dffc8820b3a2fa3056fef97a9386488")]

// rule `_>=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17), org.kframework.attributes.Location(Location(1686,8,1686,63)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1686,8,1686,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17")]

// rule `_>String__STRING-COMMON_Bool_String_String`(S1,S2)=>`_<String__STRING-COMMON_Bool_String_String`(S2,S1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0), org.kframework.attributes.Location(Location(1685,8,1685,52)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{}),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1685,8,1685,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0")]

// rule `_andBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497), org.kframework.attributes.Location(Location(933,8,933,37)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(933,8,933,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497")]

// rule `_andBool_`(B,#token("true","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98), org.kframework.attributes.Location(Location(932,8,932,37)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(932,8,932,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98")]

// rule `_andBool_`(_Gen0,#token("false","Bool") #as _Gen1)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca), org.kframework.attributes.Location(Location(934,8,934,37)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(934,8,934,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca")]

// rule `_andBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f), org.kframework.attributes.Location(Location(931,8,931,37)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(931,8,931,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f")]

// rule `_andThenBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d), org.kframework.attributes.Location(Location(938,8,938,36)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(938,8,938,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d")]

// rule `_andThenBool_`(K,#token("true","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c), org.kframework.attributes.Location(Location(937,8,937,37)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(937,8,937,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c")]

// rule `_andThenBool_`(_Gen0,#token("false","Bool") #as _Gen1)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2), org.kframework.attributes.Location(Location(939,8,939,36)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(939,8,939,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2")]

// rule `_andThenBool_`(#token("true","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689), org.kframework.attributes.Location(Location(936,8,936,37)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(936,8,936,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689")]

// rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4), org.kframework.attributes.Location(Location(1239,8,1240,23)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      Lbl'Unds'divInt'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsSlsh'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarI2:SortInt{}),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1239,8,1240,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4")]

// rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5), org.kframework.attributes.Location(Location(1251,8,1251,58)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},VarI1:SortInt{}),\dv{SortInt{}}("0")),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1251,8,1251,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5")]

// rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96), org.kframework.attributes.Location(Location(958,8,958,45)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(VarB:SortBool{}),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(958,8,958,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96")]

// rule `_impliesBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712), org.kframework.attributes.Location(Location(957,8,957,39)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(957,8,957,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712")]

// rule `_impliesBool_`(#token("false","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e), org.kframework.attributes.Location(Location(956,8,956,40)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(956,8,956,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e")]

// rule `_impliesBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d), org.kframework.attributes.Location(Location(955,8,955,36)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(955,8,955,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d")]

// rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6), concrete, org.kframework.attributes.Location(Location(1242,5,1245,23)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \equals{SortInt{},R} (
      Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsPerc'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1242,5,1245,23)"), simplification{}(), UNIQUE'Unds'ID{}("adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6")]

// rule `_orBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26), org.kframework.attributes.Location(Location(948,8,948,32)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(948,8,948,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26")]

// rule `_orBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3), org.kframework.attributes.Location(Location(946,8,946,34)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(946,8,946,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3")]

// rule `_orBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b), org.kframework.attributes.Location(Location(947,8,947,32)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(947,8,947,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b")]

// rule `_orBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2), org.kframework.attributes.Location(Location(945,8,945,34)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(945,8,945,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2")]

// rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480), org.kframework.attributes.Location(Location(953,8,953,37)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(953,8,953,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480")]

// rule `_orElseBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14), org.kframework.attributes.Location(Location(951,8,951,33)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(951,8,951,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14")]

// rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf), org.kframework.attributes.Location(Location(952,8,952,37)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(952,8,952,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf")]

// rule `_orElseBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6), org.kframework.attributes.Location(Location(950,8,950,33)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(950,8,950,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6")]

// rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f), org.kframework.attributes.Location(Location(943,8,943,38)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(943,8,943,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f")]

// rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75), org.kframework.attributes.Location(Location(942,8,942,38)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(942,8,942,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75")]

// rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf), org.kframework.attributes.Location(Location(941,8,941,38)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(941,8,941,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf")]

// rule `_|Set__SET_Set_Set_Set`(S1,S2)=>`_Set_`(S1,`Set:difference`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62), concrete, org.kframework.attributes.Location(Location(559,8,559,45)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortSet{}, R} (
            X0:SortSet{},
            VarS1:SortSet{}
          ),\and{R} (
          \in{SortSet{}, R} (
            X1:SortSet{},
            VarS2:SortSet{}
          ),
          \top{R} ()
        ))),
    \equals{SortSet{},R} (
      Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(X0:SortSet{},X1:SortSet{}),
     \and{SortSet{}} (
       Lbl'Unds'Set'Unds'{}(VarS1:SortSet{},LblSet'Coln'difference{}(VarS2:SortSet{},VarS1:SortSet{})),
        \top{SortSet{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(559,8,559,45)"), UNIQUE'Unds'ID{}("e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62")]

// rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119), org.kframework.attributes.Location(Location(1235,8,1235,85)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI:SortInt{},VarIDX:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1235,8,1235,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToCount)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToCount)) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e), org.kframework.attributes.Location(Location(1695,8,1696,60)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortInt{}} (
       Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToCount:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToCount:SortString{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1695,8,1696,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>#token("0","Int") requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84), org.kframework.attributes.Location(Location(1693,8,1694,59)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1693,8,1694,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),#token("-1","Int")),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)))) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295), org.kframework.attributes.Location(Location(1688,8,1688,431)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{})))),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1688,8,1688,431)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117), org.kframework.attributes.Location(Location(1689,8,1689,32)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'Gen1:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("-1"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1689,8,1689,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117")]

// rule `freshId(_)_ID-COMMON_Id_Int`(I)=>`String2Id(_)_ID-COMMON_Id_String`(`_+String__STRING-COMMON_String_String_String`(#token("\"_\"","String"),`Int2String(_)_STRING-COMMON_String_Int`(I))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3965c8e65257ebae926d601fa8ac672d34e4c211d73ba594c571c6bc5960f3de), org.kframework.attributes.Location(Location(2146,8,2146,62)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortId{},R} (
      LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(X0:SortInt{}),
     \and{SortId{}} (
       LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("_"),LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(VarI:SortInt{}))),
        \top{SortId{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2146,8,2146,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3965c8e65257ebae926d601fa8ac672d34e4c211d73ba594c571c6bc5960f3de")]

// rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b), org.kframework.attributes.Location(Location(1254,8,1254,28)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(X0:SortInt{}),
     \and{SortInt{}} (
       VarI:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1254,8,1254,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b")]

// rule getGeneratedCounterCell(`<generatedTop>`(_DotVar0,Cell))=>Cell requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortGeneratedTopCell{}, R} (
            X0:SortGeneratedTopCell{},
            Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'DotVar0:SortTCell{},VarCell:SortGeneratedCounterCell{})
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      LblgetGeneratedCounterCell{}(X0:SortGeneratedTopCell{}),
     \and{SortGeneratedCounterCell{}} (
       VarCell:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  []

// rule initBaseClassCell(.KList)=>`<baseClass>`(#token("Object","Id")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da1b5544898644f5113e5efc5637da01f2f5d7ecd517525eaf42766d7af78f12), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortBaseClassCell{},R} (
      LblinitBaseClassCell{}(),
     \and{SortBaseClassCell{}} (
       Lbl'-LT-'baseClass'-GT-'{}(\dv{SortId{}}("Object")),
        \top{SortBaseClassCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("da1b5544898644f5113e5efc5637da01f2f5d7ecd517525eaf42766d7af78f12")]

// rule initBusyCell(.KList)=>`<busy>`(`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0684bf26697219a45407cda377fd8a6f26c911dc548ad148dd42132f5f242ada), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortBusyCell{},R} (
      LblinitBusyCell{}(),
     \and{SortBusyCell{}} (
       Lbl'-LT-'busy'-GT-'{}(Lbl'Stop'Set{}()),
        \top{SortBusyCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("0684bf26697219a45407cda377fd8a6f26c911dc548ad148dd42132f5f242ada")]

// rule initClassDataCell(.KList)=>`ClassDataCellMapItem`(initClassNameCell(.KList),`<classData>`(initClassNameCell(.KList),initBaseClassCell(.KList),initDeclarationsCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f2fad24f0762d024a28f148985df9e087aa88c82d5bfad701adddd20d6f20c30), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortClassDataCellMap{},R} (
      LblinitClassDataCell{}(),
     \and{SortClassDataCellMap{}} (
       LblClassDataCellMapItem{}(LblinitClassNameCell{}(),Lbl'-LT-'classData'-GT-'{}(LblinitClassNameCell{}(),LblinitBaseClassCell{}(),LblinitDeclarationsCell{}())),
        \top{SortClassDataCellMap{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("f2fad24f0762d024a28f148985df9e087aa88c82d5bfad701adddd20d6f20c30")]

// rule initClassNameCell(.KList)=>`<className>`(#token("Main","Id")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(32445181853ae3b6dd32e841757ea3310bb1ad55df3aba2a7054110e18ccd041), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortClassNameCell{},R} (
      LblinitClassNameCell{}(),
     \and{SortClassNameCell{}} (
       Lbl'-LT-'className'-GT-'{}(\dv{SortId{}}("Main")),
        \top{SortClassNameCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("32445181853ae3b6dd32e841757ea3310bb1ad55df3aba2a7054110e18ccd041")]

// rule initClassesCell(.KList)=>`<classes>`(`.ClassDataCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(58024c52e5dcf2e689098177b31234cad3ad529d21fe21007a1bee0fb69a5be2), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortClassesCell{},R} (
      LblinitClassesCell{}(),
     \and{SortClassesCell{}} (
       Lbl'-LT-'classes'-GT-'{}(Lbl'Stop'ClassDataCellMap{}()),
        \top{SortClassesCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("58024c52e5dcf2e689098177b31234cad3ad529d21fe21007a1bee0fb69a5be2")]

// rule initControlCell(.KList)=>`<control>`(initFstackCell(.KList),initXstackCell(.KList),initCrntObjCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(268216dd19e2bfb4c23fdf39aa5a923135c2b603bb93e29db0492ad7dd6dcc55), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortControlCell{},R} (
      LblinitControlCell{}(),
     \and{SortControlCell{}} (
       Lbl'-LT-'control'-GT-'{}(LblinitFstackCell{}(),LblinitXstackCell{}(),LblinitCrntObjCell{}()),
        \top{SortControlCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("268216dd19e2bfb4c23fdf39aa5a923135c2b603bb93e29db0492ad7dd6dcc55")]

// rule initCrntClassCell(.KList)=>`<crntClass>`(#token("Object","Id")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a2685b980f6270ef683ec3d5c809dd417d2b97b0acaa5426a24770e918f5eac8), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortCrntClassCell{},R} (
      LblinitCrntClassCell{}(),
     \and{SortCrntClassCell{}} (
       Lbl'-LT-'crntClass'-GT-'{}(\dv{SortId{}}("Object")),
        \top{SortCrntClassCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("a2685b980f6270ef683ec3d5c809dd417d2b97b0acaa5426a24770e918f5eac8")]

// rule initCrntObjCell(.KList)=>`<crntObj>`(initCrntClassCell(.KList),initEnvStackCell(.KList),`.LocationCell`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31096c087e09c11e7c557b200084997bc7f9a5773bf3df3424792f05b6b513c1), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortCrntObjCell{},R} (
      LblinitCrntObjCell{}(),
     \and{SortCrntObjCell{}} (
       Lbl'-LT-'crntObj'-GT-'{}(LblinitCrntClassCell{}(),LblinitEnvStackCell{}(),Lbl'Stop'LocationCell{}()),
        \top{SortCrntObjCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("31096c087e09c11e7c557b200084997bc7f9a5773bf3df3424792f05b6b513c1")]

// rule initDeclarationsCell(.KList)=>`<declarations>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2594726f1ce62a4c28eb029711e191e3c6693bbcaf00c20723e7352da6363758), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortDeclarationsCell{},R} (
      LblinitDeclarationsCell{}(),
     \and{SortDeclarationsCell{}} (
       Lbl'-LT-'declarations'-GT-'{}(dotk{}()),
        \top{SortDeclarationsCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("2594726f1ce62a4c28eb029711e191e3c6693bbcaf00c20723e7352da6363758")]

// rule initEnvCell(.KList)=>`<env>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(00d428bbba5e1be4a85aba1c6d8e92413cb67f2b9e9b8fc00940b647db49b07a), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortEnvCell{},R} (
      LblinitEnvCell{}(),
     \and{SortEnvCell{}} (
       Lbl'-LT-'env'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortEnvCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("00d428bbba5e1be4a85aba1c6d8e92413cb67f2b9e9b8fc00940b647db49b07a")]

// rule initEnvStackCell(.KList)=>`<envStack>`(`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(88ed62578b100c7d0c760a9e2352e98d049131d4cd2c68d68091bd201518e29d), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortEnvStackCell{},R} (
      LblinitEnvStackCell{}(),
     \and{SortEnvStackCell{}} (
       Lbl'-LT-'envStack'-GT-'{}(Lbl'Stop'List{}()),
        \top{SortEnvStackCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("88ed62578b100c7d0c760a9e2352e98d049131d4cd2c68d68091bd201518e29d")]

// rule initFstackCell(.KList)=>`<fstack>`(`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27e90acb9ab8156291dc44e43cb2d9b690636cdeeab086b7a22c66f34416dc64), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortFstackCell{},R} (
      LblinitFstackCell{}(),
     \and{SortFstackCell{}} (
       Lbl'-LT-'fstack'-GT-'{}(Lbl'Stop'List{}()),
        \top{SortFstackCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("27e90acb9ab8156291dc44e43cb2d9b690636cdeeab086b7a22c66f34416dc64")]

// rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortGeneratedCounterCell{},R} (
      LblinitGeneratedCounterCell{}(),
     \and{SortGeneratedCounterCell{}} (
       Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortGeneratedCounterCell{}}())))
  [initializer{}()]

// rule initGeneratedTopCell(Init)=>`<generatedTop>`(initTCell(Init),initGeneratedCounterCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      LblinitGeneratedTopCell{}(X0:SortMap{}),
     \and{SortGeneratedTopCell{}} (
       Lbl'-LT-'generatedTop'-GT-'{}(LblinitTCell{}(VarInit:SortMap{}),LblinitGeneratedCounterCell{}()),
        \top{SortGeneratedTopCell{}}())))
  [initializer{}()]

// rule initHoldsCell(.KList)=>`<holds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9be8c90b7f6b23856b1ed3707ade1cf2a855a2cf6e34743812741545dc4b1b5b), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortHoldsCell{},R} (
      LblinitHoldsCell{}(),
     \and{SortHoldsCell{}} (
       Lbl'-LT-'holds'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortHoldsCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("9be8c90b7f6b23856b1ed3707ade1cf2a855a2cf6e34743812741545dc4b1b5b")]

// rule initIdCell(.KList)=>`<id>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2a06b6a27a201eff054d451215437e05883ac11cae719271694b12cb59b7c6df), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortIdCell{},R} (
      LblinitIdCell{}(),
     \and{SortIdCell{}} (
       Lbl'-LT-'id'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortIdCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("2a06b6a27a201eff054d451215437e05883ac11cae719271694b12cb59b7c6df")]

// rule initInputCell(.KList)=>`<input>`(`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ea51a9117410a9b1e5e988ea175c3bc93b8d6da4fa891d89cf05260c172ba308), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInputCell{},R} (
      LblinitInputCell{}(),
     \and{SortInputCell{}} (
       Lbl'-LT-'input'-GT-'{}(Lbl'Stop'List{}()),
        \top{SortInputCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("ea51a9117410a9b1e5e988ea175c3bc93b8d6da4fa891d89cf05260c172ba308")]

// rule initKCell(Init)=>`<k>`(inj{Stmt,KItem}(`project:Stmt`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$PGM","KConfigVar")))))~>`execute_KOOL_KItem`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e9263ff3ce4d8caf1cdfa9711eabed7dbb073076213064c5b4034711bb0a1690), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      LblinitKCell{}(X0:SortMap{}),
     \and{SortKCell{}} (
       Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblproject'Coln'Stmt{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))),dotk{}()))),kseq{}(Lblexecute'Unds'KOOL'Unds'KItem{}(),dotk{}()))),
        \top{SortKCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("e9263ff3ce4d8caf1cdfa9711eabed7dbb073076213064c5b4034711bb0a1690")]

// rule initLocationCell(.KList)=>`<location>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7cac8580bba7416973ae585bb91e21ea2c05f4c52dbffe556b37c07ee883645f), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortLocationCell{},R} (
      LblinitLocationCell{}(),
     \and{SortLocationCell{}} (
       Lbl'-LT-'location'-GT-'{}(dotk{}()),
        \top{SortLocationCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("7cac8580bba7416973ae585bb91e21ea2c05f4c52dbffe556b37c07ee883645f")]

// rule initNextLocCell(.KList)=>`<nextLoc>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4fce38c9043a703557a44ac26d031234b8e1aef6e96c923d401287f09f8295f2), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortNextLocCell{},R} (
      LblinitNextLocCell{}(),
     \and{SortNextLocCell{}} (
       Lbl'-LT-'nextLoc'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortNextLocCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("4fce38c9043a703557a44ac26d031234b8e1aef6e96c923d401287f09f8295f2")]

// rule initOutputCell(.KList)=>`<output>`(`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(38119d3126aa08974a426b0e17033cce669defae598d59fcc472a00521aaa5b5), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortOutputCell{},R} (
      LblinitOutputCell{}(),
     \and{SortOutputCell{}} (
       Lbl'-LT-'output'-GT-'{}(Lbl'Stop'List{}()),
        \top{SortOutputCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("38119d3126aa08974a426b0e17033cce669defae598d59fcc472a00521aaa5b5")]

// rule initStoreCell(.KList)=>`<store>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(25c9fd48ffb4ae6d3301adb7ee16d732c9e7eff638e62fef57a687c62281f5ee), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortStoreCell{},R} (
      LblinitStoreCell{}(),
     \and{SortStoreCell{}} (
       Lbl'-LT-'store'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortStoreCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("25c9fd48ffb4ae6d3301adb7ee16d732c9e7eff638e62fef57a687c62281f5ee")]

// rule initTCell(Init)=>`<T>`(initThreadsCell(Init),initStoreCell(.KList),initBusyCell(.KList),initTerminatedCell(.KList),initInputCell(.KList),initOutputCell(.KList),initNextLocCell(.KList),initClassesCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7eafcb7aa01f2267a36c77068e1730ac8f0732211f67a71b67291cbf3d618447), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortTCell{},R} (
      LblinitTCell{}(X0:SortMap{}),
     \and{SortTCell{}} (
       Lbl'-LT-'T'-GT-'{}(LblinitThreadsCell{}(VarInit:SortMap{}),LblinitStoreCell{}(),LblinitBusyCell{}(),LblinitTerminatedCell{}(),LblinitInputCell{}(),LblinitOutputCell{}(),LblinitNextLocCell{}(),LblinitClassesCell{}()),
        \top{SortTCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("7eafcb7aa01f2267a36c77068e1730ac8f0732211f67a71b67291cbf3d618447")]

// rule initTerminatedCell(.KList)=>`<terminated>`(`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(41229aeff886e23baf75c294f7c63ef7311feea4a480497b71875dc0c1d0870e), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortTerminatedCell{},R} (
      LblinitTerminatedCell{}(),
     \and{SortTerminatedCell{}} (
       Lbl'-LT-'terminated'-GT-'{}(Lbl'Stop'Set{}()),
        \top{SortTerminatedCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("41229aeff886e23baf75c294f7c63ef7311feea4a480497b71875dc0c1d0870e")]

// rule initThreadCell(Init)=>`ThreadCellSetItem`(`<thread>`(initKCell(Init),initControlCell(.KList),initEnvCell(.KList),initHoldsCell(.KList),initIdCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e70bcf83cf5a5e132688633ade7433d5a96ad9ecfa78eff8e449198c631a0f13), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortThreadCellSet{},R} (
      LblinitThreadCell{}(X0:SortMap{}),
     \and{SortThreadCellSet{}} (
       LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(LblinitKCell{}(VarInit:SortMap{}),LblinitControlCell{}(),LblinitEnvCell{}(),LblinitHoldsCell{}(),LblinitIdCell{}())),
        \top{SortThreadCellSet{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("e70bcf83cf5a5e132688633ade7433d5a96ad9ecfa78eff8e449198c631a0f13")]

// rule initThreadsCell(Init)=>`<threads>`(initThreadCell(Init)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3e08d3c475b64c7e4b7a4038d9a7c5dd428a06793741278eb7bb82d182f92b0c), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortThreadsCell{},R} (
      LblinitThreadsCell{}(X0:SortMap{}),
     \and{SortThreadsCell{}} (
       Lbl'-LT-'threads'-GT-'{}(LblinitThreadCell{}(VarInit:SortMap{})),
        \top{SortThreadsCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("3e08d3c475b64c7e4b7a4038d9a7c5dd428a06793741278eb7bb82d182f92b0c")]

// rule initXstackCell(.KList)=>`<xstack>`(`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(db25bb916116d20f3b0e316ee2f347665b6e04924ffcb24584fc63a9e5f9b36e), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortXstackCell{},R} (
      LblinitXstackCell{}(),
     \and{SortXstackCell{}} (
       Lbl'-LT-'xstack'-GT-'{}(Lbl'Stop'List{}()),
        \top{SortXstackCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("db25bb916116d20f3b0e316ee2f347665b6e04924ffcb24584fc63a9e5f9b36e")]

// rule isBaseClassCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBaseClassCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBaseClassCell{}, SortKItem{}}(Var'Unds'Gen1:SortBaseClassCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBaseClassCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBaseClassCell(inj{BaseClassCell,KItem}(BaseClassCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBaseClassCell{}, SortKItem{}}(VarBaseClassCell:SortBaseClassCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBaseClassCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isBaseClassCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBaseClassCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBaseClassCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortBaseClassCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBaseClassCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBaseClassCellOpt(inj{BaseClassCellOpt,KItem}(BaseClassCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBaseClassCellOpt{}, SortKItem{}}(VarBaseClassCellOpt:SortBaseClassCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBaseClassCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isBlock(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBlock{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBlock{}, SortKItem{}}(Var'Unds'Gen0:SortBlock{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBlock{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBlock(inj{Block,KItem}(Block))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlock{}, SortKItem{}}(VarBlock:SortBlock{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBlock{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isBool(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'Gen0:SortBool{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBool(inj{Bool,KItem}(Bool))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isBusyCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBusyCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBusyCell{}, SortKItem{}}(Var'Unds'Gen1:SortBusyCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBusyCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBusyCell(inj{BusyCell,KItem}(BusyCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBusyCell{}, SortKItem{}}(VarBusyCell:SortBusyCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBusyCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isBusyCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBusyCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBusyCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortBusyCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBusyCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBusyCellOpt(inj{BusyCellOpt,KItem}(BusyCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBusyCellOpt{}, SortKItem{}}(VarBusyCellOpt:SortBusyCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBusyCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassDataCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortClassDataCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassDataCell{}, SortKItem{}}(Var'Unds'Gen0:SortClassDataCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassDataCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassDataCell(inj{ClassDataCell,KItem}(ClassDataCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassDataCell{}, SortKItem{}}(VarClassDataCell:SortClassDataCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassDataCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassDataCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortClassDataCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassDataCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortClassDataCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassDataCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassDataCellFragment(inj{ClassDataCellFragment,KItem}(ClassDataCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassDataCellFragment{}, SortKItem{}}(VarClassDataCellFragment:SortClassDataCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassDataCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassDataCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortClassDataCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassDataCellMap{}, SortKItem{}}(Var'Unds'Gen1:SortClassDataCellMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassDataCellMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassDataCellMap(inj{ClassDataCellMap,KItem}(ClassDataCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassDataCellMap{}, SortKItem{}}(VarClassDataCellMap:SortClassDataCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassDataCellMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassNameCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortClassNameCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassNameCell{}, SortKItem{}}(Var'Unds'Gen1:SortClassNameCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassNameCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassNameCell(inj{ClassNameCell,KItem}(ClassNameCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassNameCell{}, SortKItem{}}(VarClassNameCell:SortClassNameCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassNameCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassNameCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortClassNameCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassNameCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortClassNameCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassNameCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassNameCellOpt(inj{ClassNameCellOpt,KItem}(ClassNameCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassNameCellOpt{}, SortKItem{}}(VarClassNameCellOpt:SortClassNameCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassNameCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassesCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortClassesCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassesCell{}, SortKItem{}}(Var'Unds'Gen1:SortClassesCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassesCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassesCell(inj{ClassesCell,KItem}(ClassesCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassesCell{}, SortKItem{}}(VarClassesCell:SortClassesCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassesCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassesCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortClassesCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassesCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortClassesCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassesCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassesCellFragment(inj{ClassesCellFragment,KItem}(ClassesCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassesCellFragment{}, SortKItem{}}(VarClassesCellFragment:SortClassesCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassesCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassesCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortClassesCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassesCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortClassesCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassesCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassesCellOpt(inj{ClassesCellOpt,KItem}(ClassesCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassesCellOpt{}, SortKItem{}}(VarClassesCellOpt:SortClassesCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassesCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isControlCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortControlCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortControlCell{}, SortKItem{}}(Var'Unds'Gen0:SortControlCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisControlCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isControlCell(inj{ControlCell,KItem}(ControlCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortControlCell{}, SortKItem{}}(VarControlCell:SortControlCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisControlCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isControlCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortControlCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortControlCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortControlCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisControlCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isControlCellFragment(inj{ControlCellFragment,KItem}(ControlCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortControlCellFragment{}, SortKItem{}}(VarControlCellFragment:SortControlCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisControlCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isControlCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortControlCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortControlCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortControlCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisControlCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isControlCellOpt(inj{ControlCellOpt,KItem}(ControlCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortControlCellOpt{}, SortKItem{}}(VarControlCellOpt:SortControlCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisControlCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isCrntClassCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortCrntClassCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCrntClassCell{}, SortKItem{}}(Var'Unds'Gen0:SortCrntClassCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCrntClassCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isCrntClassCell(inj{CrntClassCell,KItem}(CrntClassCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCrntClassCell{}, SortKItem{}}(VarCrntClassCell:SortCrntClassCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCrntClassCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isCrntClassCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortCrntClassCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCrntClassCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortCrntClassCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCrntClassCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isCrntClassCellOpt(inj{CrntClassCellOpt,KItem}(CrntClassCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCrntClassCellOpt{}, SortKItem{}}(VarCrntClassCellOpt:SortCrntClassCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCrntClassCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isCrntObjCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortCrntObjCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCrntObjCell{}, SortKItem{}}(Var'Unds'Gen0:SortCrntObjCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCrntObjCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isCrntObjCell(inj{CrntObjCell,KItem}(CrntObjCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCrntObjCell{}, SortKItem{}}(VarCrntObjCell:SortCrntObjCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCrntObjCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isCrntObjCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortCrntObjCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCrntObjCellFragment{}, SortKItem{}}(Var'Unds'Gen0:SortCrntObjCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCrntObjCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isCrntObjCellFragment(inj{CrntObjCellFragment,KItem}(CrntObjCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCrntObjCellFragment{}, SortKItem{}}(VarCrntObjCellFragment:SortCrntObjCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCrntObjCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isCrntObjCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortCrntObjCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCrntObjCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortCrntObjCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCrntObjCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isCrntObjCellOpt(inj{CrntObjCellOpt,KItem}(CrntObjCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCrntObjCellOpt{}, SortKItem{}}(VarCrntObjCellOpt:SortCrntObjCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCrntObjCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isDeclarationsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortDeclarationsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortDeclarationsCell{}, SortKItem{}}(Var'Unds'Gen0:SortDeclarationsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisDeclarationsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isDeclarationsCell(inj{DeclarationsCell,KItem}(DeclarationsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDeclarationsCell{}, SortKItem{}}(VarDeclarationsCell:SortDeclarationsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisDeclarationsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isDeclarationsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortDeclarationsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortDeclarationsCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortDeclarationsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisDeclarationsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isDeclarationsCellOpt(inj{DeclarationsCellOpt,KItem}(DeclarationsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDeclarationsCellOpt{}, SortKItem{}}(VarDeclarationsCellOpt:SortDeclarationsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisDeclarationsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isEnvCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortEnvCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortEnvCell{}, SortKItem{}}(Var'Unds'Gen1:SortEnvCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisEnvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isEnvCell(inj{EnvCell,KItem}(EnvCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCell{}, SortKItem{}}(VarEnvCell:SortEnvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisEnvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isEnvCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortEnvCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortEnvCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortEnvCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisEnvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isEnvCellOpt(inj{EnvCellOpt,KItem}(EnvCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCellOpt{}, SortKItem{}}(VarEnvCellOpt:SortEnvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisEnvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isEnvStackCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortEnvStackCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortEnvStackCell{}, SortKItem{}}(Var'Unds'Gen1:SortEnvStackCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisEnvStackCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isEnvStackCell(inj{EnvStackCell,KItem}(EnvStackCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvStackCell{}, SortKItem{}}(VarEnvStackCell:SortEnvStackCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisEnvStackCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isEnvStackCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortEnvStackCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortEnvStackCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortEnvStackCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisEnvStackCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isEnvStackCellOpt(inj{EnvStackCellOpt,KItem}(EnvStackCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvStackCellOpt{}, SortKItem{}}(VarEnvStackCellOpt:SortEnvStackCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisEnvStackCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isExp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortExp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isExp(inj{Exp,KItem}(Exp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExp{}, SortKItem{}}(VarExp:SortExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isExps(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortExps{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExps{}, SortKItem{}}(Var'Unds'Gen1:SortExps{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisExps{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isExps(inj{Exps,KItem}(Exps))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExps{}, SortKItem{}}(VarExps:SortExps{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisExps{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isFloat(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortFloat{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFloat{}, SortKItem{}}(Var'Unds'Gen1:SortFloat{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisFloat{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isFloat(inj{Float,KItem}(Float))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarFloat:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisFloat{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isFstackCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortFstackCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFstackCell{}, SortKItem{}}(Var'Unds'Gen1:SortFstackCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisFstackCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isFstackCell(inj{FstackCell,KItem}(FstackCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFstackCell{}, SortKItem{}}(VarFstackCell:SortFstackCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisFstackCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isFstackCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortFstackCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFstackCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortFstackCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisFstackCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isFstackCellOpt(inj{FstackCellOpt,KItem}(FstackCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFstackCellOpt{}, SortKItem{}}(VarFstackCellOpt:SortFstackCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisFstackCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isGeneratedCounterCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedCounterCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isGeneratedCounterCell(inj{GeneratedCounterCell,KItem}(GeneratedCounterCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isGeneratedCounterCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedCounterCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedCounterCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isGeneratedCounterCellOpt(inj{GeneratedCounterCellOpt,KItem}(GeneratedCounterCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isGeneratedTopCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedTopCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedTopCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isGeneratedTopCell(inj{GeneratedTopCell,KItem}(GeneratedTopCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isGeneratedTopCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortGeneratedTopCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(Var'Unds'Gen0:SortGeneratedTopCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isGeneratedTopCellFragment(inj{GeneratedTopCellFragment,KItem}(GeneratedTopCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isHoldsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortHoldsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortHoldsCell{}, SortKItem{}}(Var'Unds'Gen1:SortHoldsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisHoldsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isHoldsCell(inj{HoldsCell,KItem}(HoldsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortHoldsCell{}, SortKItem{}}(VarHoldsCell:SortHoldsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisHoldsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isHoldsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortHoldsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortHoldsCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortHoldsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisHoldsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isHoldsCellOpt(inj{HoldsCellOpt,KItem}(HoldsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortHoldsCellOpt{}, SortKItem{}}(VarHoldsCellOpt:SortHoldsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisHoldsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isIOError(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIOError{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOError{}, SortKItem{}}(Var'Unds'Gen1:SortIOError{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOError{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isIOError(inj{IOError,KItem}(IOError))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOError{}, SortKItem{}}(VarIOError:SortIOError{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOError{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isIOFile(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortIOFile{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOFile{}, SortKItem{}}(Var'Unds'Gen0:SortIOFile{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOFile{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isIOFile(inj{IOFile,KItem}(IOFile))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOFile{}, SortKItem{}}(VarIOFile:SortIOFile{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOFile{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isIOInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortIOInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOInt{}, SortKItem{}}(Var'Unds'Gen0:SortIOInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isIOInt(inj{IOInt,KItem}(IOInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOInt{}, SortKItem{}}(VarIOInt:SortIOInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isIOString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIOString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOString{}, SortKItem{}}(Var'Unds'Gen1:SortIOString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isIOString(inj{IOString,KItem}(IOString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOString{}, SortKItem{}}(VarIOString:SortIOString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isId(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isId(inj{Id,KItem}(Id))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarId:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isIdCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIdCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIdCell{}, SortKItem{}}(Var'Unds'Gen1:SortIdCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIdCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isIdCell(inj{IdCell,KItem}(IdCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCell{}, SortKItem{}}(VarIdCell:SortIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIdCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isIdCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIdCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIdCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortIdCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIdCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isIdCellOpt(inj{IdCellOpt,KItem}(IdCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCellOpt{}, SortKItem{}}(VarIdCellOpt:SortIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIdCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isIds(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortIds{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIds{}, SortKItem{}}(Var'Unds'Gen0:SortIds{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIds{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isIds(inj{Ids,KItem}(Ids))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIds{}, SortKItem{}}(VarIds:SortIds{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIds{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isInputCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortInputCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInputCell{}, SortKItem{}}(Var'Unds'Gen1:SortInputCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInputCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isInputCell(inj{InputCell,KItem}(InputCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInputCell{}, SortKItem{}}(VarInputCell:SortInputCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInputCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isInputCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortInputCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInputCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortInputCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInputCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isInputCellOpt(inj{InputCellOpt,KItem}(InputCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInputCellOpt{}, SortKItem{}}(VarInputCellOpt:SortInputCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInputCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'Gen1:SortInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isInt(inj{Int,KItem}(Int))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isK(K)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisK{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCell{}, SortKItem{}}(Var'Unds'Gen1:SortKCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKCell(inj{KCell,KItem}(KCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortKCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortKCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKCellOpt(inj{KCellOpt,KItem}(KCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKConfigVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKConfigVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKConfigVar{}, SortKItem{}}(Var'Unds'Gen1:SortKConfigVar{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKConfigVar(inj{KConfigVar,KItem}(KConfigVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(Var'Unds'Gen1:SortKItem{},dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKItem(KItem)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarKItem:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKResult(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKResult{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKResult{}, SortKItem{}}(Var'Unds'Gen1:SortKResult{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKResult(inj{KResult,KItem}(KResult))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarKResult:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortList{}, SortKItem{}}(Var'Unds'Gen0:SortList{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isList(inj{List,KItem}(List))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isLocationCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortLocationCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLocationCell{}, SortKItem{}}(Var'Unds'Gen0:SortLocationCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisLocationCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isLocationCell(inj{LocationCell,KItem}(LocationCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocationCell{}, SortKItem{}}(VarLocationCell:SortLocationCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisLocationCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isLocationCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortLocationCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLocationCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortLocationCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisLocationCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isLocationCellOpt(inj{LocationCellOpt,KItem}(LocationCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocationCellOpt{}, SortKItem{}}(VarLocationCellOpt:SortLocationCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisLocationCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMap{}, SortKItem{}}(Var'Unds'Gen1:SortMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isMap(inj{Map,KItem}(Map))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isNextLocCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortNextLocCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextLocCell{}, SortKItem{}}(Var'Unds'Gen0:SortNextLocCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisNextLocCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isNextLocCell(inj{NextLocCell,KItem}(NextLocCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextLocCell{}, SortKItem{}}(VarNextLocCell:SortNextLocCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisNextLocCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isNextLocCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortNextLocCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextLocCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortNextLocCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisNextLocCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isNextLocCellOpt(inj{NextLocCellOpt,KItem}(NextLocCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextLocCellOpt{}, SortKItem{}}(VarNextLocCellOpt:SortNextLocCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisNextLocCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isOutputCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortOutputCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOutputCell{}, SortKItem{}}(Var'Unds'Gen0:SortOutputCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOutputCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isOutputCell(inj{OutputCell,KItem}(OutputCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCell{}, SortKItem{}}(VarOutputCell:SortOutputCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOutputCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isOutputCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortOutputCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOutputCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortOutputCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOutputCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isOutputCellOpt(inj{OutputCellOpt,KItem}(OutputCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCellOpt{}, SortKItem{}}(VarOutputCellOpt:SortOutputCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOutputCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortSet{}, SortKItem{}}(Var'Unds'Gen0:SortSet{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isSet(inj{Set,KItem}(Set))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStmt{}, SortKItem{}}(Var'Unds'Gen0:SortStmt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStmt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isStmt(inj{Stmt,KItem}(Stmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmt{}, SortKItem{}}(VarStmt:SortStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStmt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isStoreCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortStoreCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStoreCell{}, SortKItem{}}(Var'Unds'Gen1:SortStoreCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStoreCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isStoreCell(inj{StoreCell,KItem}(StoreCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCell{}, SortKItem{}}(VarStoreCell:SortStoreCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStoreCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isStoreCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortStoreCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortStoreCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStoreCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isStoreCellOpt(inj{StoreCellOpt,KItem}(StoreCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(VarStoreCellOpt:SortStoreCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStoreCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isStream(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortStream{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStream{}, SortKItem{}}(Var'Unds'Gen1:SortStream{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStream{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isStream(inj{Stream,KItem}(Stream))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStream{}, SortKItem{}}(VarStream:SortStream{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStream{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'Gen1:SortString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isString(inj{String,KItem}(String))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarString:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCell{}, SortKItem{}}(Var'Unds'Gen1:SortTCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTCell(inj{TCell,KItem}(TCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCell{}, SortKItem{}}(VarTCell:SortTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortTCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTCellFragment(inj{TCellFragment,KItem}(TCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarTCellFragment:SortTCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortTCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTCellOpt(inj{TCellOpt,KItem}(TCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarTCellOpt:SortTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTerminatedCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTerminatedCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTerminatedCell{}, SortKItem{}}(Var'Unds'Gen0:SortTerminatedCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTerminatedCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTerminatedCell(inj{TerminatedCell,KItem}(TerminatedCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTerminatedCell{}, SortKItem{}}(VarTerminatedCell:SortTerminatedCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTerminatedCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTerminatedCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTerminatedCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTerminatedCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortTerminatedCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTerminatedCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTerminatedCellOpt(inj{TerminatedCellOpt,KItem}(TerminatedCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTerminatedCellOpt{}, SortKItem{}}(VarTerminatedCellOpt:SortTerminatedCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTerminatedCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isThreadCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortThreadCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadCell{}, SortKItem{}}(Var'Unds'Gen1:SortThreadCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isThreadCell(inj{ThreadCell,KItem}(ThreadCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCell{}, SortKItem{}}(VarThreadCell:SortThreadCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isThreadCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortThreadCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortThreadCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isThreadCellFragment(inj{ThreadCellFragment,KItem}(ThreadCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCellFragment{}, SortKItem{}}(VarThreadCellFragment:SortThreadCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isThreadCellSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortThreadCellSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadCellSet{}, SortKItem{}}(Var'Unds'Gen1:SortThreadCellSet{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadCellSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isThreadCellSet(inj{ThreadCellSet,KItem}(ThreadCellSet))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCellSet{}, SortKItem{}}(VarThreadCellSet:SortThreadCellSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadCellSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isThreadsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortThreadsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadsCell{}, SortKItem{}}(Var'Unds'Gen0:SortThreadsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isThreadsCell(inj{ThreadsCell,KItem}(ThreadsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCell{}, SortKItem{}}(VarThreadsCell:SortThreadsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isThreadsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortThreadsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadsCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortThreadsCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadsCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isThreadsCellFragment(inj{ThreadsCellFragment,KItem}(ThreadsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCellFragment{}, SortKItem{}}(VarThreadsCellFragment:SortThreadsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadsCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isThreadsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortThreadsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadsCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortThreadsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isThreadsCellOpt(inj{ThreadsCellOpt,KItem}(ThreadsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCellOpt{}, SortKItem{}}(VarThreadsCellOpt:SortThreadsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isVal(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortVal{}, SortKItem{}}(Var'Unds'Gen1:SortVal{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisVal{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isVal(inj{Val,KItem}(Val))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVal{}, SortKItem{}}(VarVal:SortVal{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisVal{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isVals(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortVals{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortVals{}, SortKItem{}}(Var'Unds'Gen1:SortVals{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisVals{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isVals(inj{Vals,KItem}(Vals))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVals{}, SortKItem{}}(VarVals:SortVals{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisVals{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isXstackCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortXstackCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortXstackCell{}, SortKItem{}}(Var'Unds'Gen0:SortXstackCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisXstackCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isXstackCell(inj{XstackCell,KItem}(XstackCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortXstackCell{}, SortKItem{}}(VarXstackCell:SortXstackCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisXstackCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isXstackCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortXstackCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortXstackCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortXstackCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisXstackCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isXstackCellOpt(inj{XstackCellOpt,KItem}(XstackCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortXstackCellOpt{}, SortKItem{}}(VarXstackCellOpt:SortXstackCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisXstackCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule `lookupMember(_,_)_KOOL_Exp_List_Id`(`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(_Gen0,Env)),Rest),X)=>`lookupMember(_,_)_KOOL_Exp_List_Id`(Rest,X) requires `notBool_`(`Set:in`(inj{Id,KItem}(X),`keys(_)_MAP_Set_Map`(Env))) ensures #token("true","Bool") [UNIQUE_ID(3ab6fa4adedaee1c533b54446036d29b8a9ab71f99ca797e41bdb5c8a28db2b4), org.kframework.attributes.Location(Location(509,8,511,33)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarEnv:SortMap{}))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortList{}, R} (
            X0:SortList{},
            Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Var'Unds'Gen0:SortId{},VarEnv:SortMap{})),VarRest:SortList{})
          ),\and{R} (
          \in{SortId{}, R} (
            X1:SortId{},
            VarX:SortId{}
          ),
          \top{R} ()
        ))),
    \equals{SortExp{},R} (
      LbllookupMember'LParUndsCommUndsRParUnds'KOOL'Unds'Exp'Unds'List'Unds'Id{}(X0:SortList{},X1:SortId{}),
     \and{SortExp{}} (
       LbllookupMember'LParUndsCommUndsRParUnds'KOOL'Unds'Exp'Unds'List'Unds'Id{}(VarRest:SortList{},VarX:SortId{}),
        \top{SortExp{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(509,8,511,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("3ab6fa4adedaee1c533b54446036d29b8a9ab71f99ca797e41bdb5c8a28db2b4")]

// rule `lookupMember(_,_)_KOOL_Exp_List_Id`(`_List_`(`ListItem`(`envStackFrame(_,_)_KOOL_KItem_Id_Map`(_Gen0,`_Map_`(`_|->_`(inj{Id,KItem}(X),inj{Int,KItem}(L)),_Gen1))),_Gen2),X)=>`lookup(_)_KOOL_Exp_Int`(L) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8049595515185e99b829b87e2c76599c4e00bd2976fcb784207c39651eba9351), org.kframework.attributes.Location(Location(505,8,506,17)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortList{}, R} (
            X0:SortList{},
            Lbl'Unds'List'Unds'{}(LblListItem{}(LblenvStackFrame'LParUndsCommUndsRParUnds'KOOL'Unds'KItem'Unds'Id'Unds'Map{}(Var'Unds'Gen0:SortId{},Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})),Var'Unds'Gen1:SortMap{}))),Var'Unds'Gen2:SortList{})
          ),\and{R} (
          \in{SortId{}, R} (
            X1:SortId{},
            VarX:SortId{}
          ),
          \top{R} ()
        ))),
    \equals{SortExp{},R} (
      LbllookupMember'LParUndsCommUndsRParUnds'KOOL'Unds'Exp'Unds'List'Unds'Id{}(X0:SortList{},X1:SortId{}),
     \and{SortExp{}} (
       Lbllookup'LParUndsRParUnds'KOOL'Unds'Exp'Unds'Int{}(VarL:SortInt{}),
        \top{SortExp{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(505,8,506,17)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8049595515185e99b829b87e2c76599c4e00bd2976fcb784207c39651eba9351")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6), org.kframework.attributes.Location(Location(1247,8,1247,57)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI1:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1247,8,1247,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3), org.kframework.attributes.Location(Location(1248,8,1248,57)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI2:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1248,8,1248,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3")]

// rule `mkDecls(_,_)_KOOL_Stmt_Ids_Vals`(`.List{"_,__KOOL-SYNTAX_Ids_Id_Ids"}_Ids`(.KList),`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList))=>inj{Block,Stmt}(`{}_KOOL-SYNTAX_Block`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6902ff323eb8b14789cf363571ac446ce225b26798816c4536d0997eeb154454), org.kframework.attributes.Location(Location(205,8,205,33)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIds{}, R} (
            X0:SortIds{},
            Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids{}()
          ),\and{R} (
          \in{SortVals{}, R} (
            X1:SortVals{},
            Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()
          ),
          \top{R} ()
        ))),
    \equals{SortStmt{},R} (
      LblmkDecls'LParUndsCommUndsRParUnds'KOOL'Unds'Stmt'Unds'Ids'Unds'Vals{}(X0:SortIds{},X1:SortVals{}),
     \and{SortStmt{}} (
       inj{SortBlock{}, SortStmt{}}(Lbl'LBraRBraUnds'KOOL-SYNTAX'Unds'Block{}()),
        \top{SortStmt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(205,8,205,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6902ff323eb8b14789cf363571ac446ce225b26798816c4536d0997eeb154454")]

// rule `mkDecls(_,_)_KOOL_Stmt_Ids_Vals`(`_,__KOOL-SYNTAX_Ids_Id_Ids`(X,Xs),`_,__KOOL-SYNTAX_Vals_Val_Vals`(V,Vs))=>`___KOOL-SYNTAX_Stmt_Stmt_Stmt`(`var_;_KOOL-SYNTAX_Stmt_Exps`(`_,__KOOL-SYNTAX_Exps_Exp_Exps`(`_=__KOOL-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(X),inj{Val,Exp}(V)),inj{Vals,Exps}(`.List{"_,__KOOL-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),`mkDecls(_,_)_KOOL_Stmt_Ids_Vals`(Xs,Vs)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5dbb2d869949cf0d524ab00d891953541fa58d8a4dd8986ea5578310c31b4333), org.kframework.attributes.Location(Location(201,8,201,76)), org.kframework.attributes.Source(Source(/home/qwyng/kool/kool.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIds{}, R} (
            X0:SortIds{},
            Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids{}(VarX:SortId{},VarXs:SortIds{})
          ),\and{R} (
          \in{SortVals{}, R} (
            X1:SortVals{},
            Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(VarV:SortVal{},VarVs:SortVals{})
          ),
          \top{R} ()
        ))),
    \equals{SortStmt{},R} (
      LblmkDecls'LParUndsCommUndsRParUnds'KOOL'Unds'Stmt'Unds'Ids'Unds'Vals{}(X0:SortIds{},X1:SortVals{}),
     \and{SortStmt{}} (
       Lbl'UndsUndsUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lblvar'UndsSClnUnds'KOOL-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsEqlsUndsUnds'KOOL-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVal{}, SortExp{}}(VarV:SortVal{})),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),LblmkDecls'LParUndsCommUndsRParUnds'KOOL'Unds'Stmt'Unds'Ids'Unds'Vals{}(VarXs:SortIds{},VarVs:SortVals{})),
        \top{SortStmt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(201,8,201,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5dbb2d869949cf0d524ab00d891953541fa58d8a4dd8986ea5578310c31b4333")]

// rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415), org.kframework.attributes.Location(Location(929,8,929,29)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(929,8,929,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415")]

// rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c), org.kframework.attributes.Location(Location(928,8,928,29)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(928,8,928,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c")]

// rule `project:#tempFile:fd`(#tempFile(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOFile{}, R} (
            X0:SortIOFile{},
            Lbl'Hash'tempFile{}(VarK0:SortString{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'ColnHash'tempFile'Coln'fd{}(X0:SortIOFile{}),
     \and{SortInt{}} (
       VarK1:SortInt{},
        \top{SortInt{}}())))
  []

// rule `project:#tempFile:path`(#tempFile(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOFile{}, R} (
            X0:SortIOFile{},
            Lbl'Hash'tempFile{}(VarK0:SortString{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      Lblproject'ColnHash'tempFile'Coln'path{}(X0:SortIOFile{}),
     \and{SortString{}} (
       VarK0:SortString{},
        \top{SortString{}}())))
  []

// rule `project:#unknownIOError:errno`(#unknownIOError(K0))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOError{}, R} (
            X0:SortIOError{},
            Lbl'Hash'unknownIOError{}(VarK0:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'ColnHash'unknownIOError'Coln'errno{}(X0:SortIOError{}),
     \and{SortInt{}} (
       VarK0:SortInt{},
        \top{SortInt{}}())))
  []

// rule `project:BaseClassCell`(inj{BaseClassCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBaseClassCell{}, SortKItem{}}(VarK:SortBaseClassCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBaseClassCell{},R} (
      Lblproject'Coln'BaseClassCell{}(X0:SortK{}),
     \and{SortBaseClassCell{}} (
       VarK:SortBaseClassCell{},
        \top{SortBaseClassCell{}}())))
  [projection{}()]

// rule `project:BaseClassCellOpt`(inj{BaseClassCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBaseClassCellOpt{}, SortKItem{}}(VarK:SortBaseClassCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBaseClassCellOpt{},R} (
      Lblproject'Coln'BaseClassCellOpt{}(X0:SortK{}),
     \and{SortBaseClassCellOpt{}} (
       VarK:SortBaseClassCellOpt{},
        \top{SortBaseClassCellOpt{}}())))
  [projection{}()]

// rule `project:Block`(inj{Block,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlock{}, SortKItem{}}(VarK:SortBlock{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBlock{},R} (
      Lblproject'Coln'Block{}(X0:SortK{}),
     \and{SortBlock{}} (
       VarK:SortBlock{},
        \top{SortBlock{}}())))
  [projection{}()]

// rule `project:Bool`(inj{Bool,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarK:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      Lblproject'Coln'Bool{}(X0:SortK{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [projection{}()]

// rule `project:BusyCell`(inj{BusyCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBusyCell{}, SortKItem{}}(VarK:SortBusyCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBusyCell{},R} (
      Lblproject'Coln'BusyCell{}(X0:SortK{}),
     \and{SortBusyCell{}} (
       VarK:SortBusyCell{},
        \top{SortBusyCell{}}())))
  [projection{}()]

// rule `project:BusyCellOpt`(inj{BusyCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBusyCellOpt{}, SortKItem{}}(VarK:SortBusyCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBusyCellOpt{},R} (
      Lblproject'Coln'BusyCellOpt{}(X0:SortK{}),
     \and{SortBusyCellOpt{}} (
       VarK:SortBusyCellOpt{},
        \top{SortBusyCellOpt{}}())))
  [projection{}()]

// rule `project:ClassDataCell`(inj{ClassDataCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassDataCell{}, SortKItem{}}(VarK:SortClassDataCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassDataCell{},R} (
      Lblproject'Coln'ClassDataCell{}(X0:SortK{}),
     \and{SortClassDataCell{}} (
       VarK:SortClassDataCell{},
        \top{SortClassDataCell{}}())))
  [projection{}()]

// rule `project:ClassDataCellFragment`(inj{ClassDataCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassDataCellFragment{}, SortKItem{}}(VarK:SortClassDataCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassDataCellFragment{},R} (
      Lblproject'Coln'ClassDataCellFragment{}(X0:SortK{}),
     \and{SortClassDataCellFragment{}} (
       VarK:SortClassDataCellFragment{},
        \top{SortClassDataCellFragment{}}())))
  [projection{}()]

// rule `project:ClassDataCellMap`(inj{ClassDataCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassDataCellMap{}, SortKItem{}}(VarK:SortClassDataCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassDataCellMap{},R} (
      Lblproject'Coln'ClassDataCellMap{}(X0:SortK{}),
     \and{SortClassDataCellMap{}} (
       VarK:SortClassDataCellMap{},
        \top{SortClassDataCellMap{}}())))
  [projection{}()]

// rule `project:ClassNameCell`(inj{ClassNameCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassNameCell{}, SortKItem{}}(VarK:SortClassNameCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassNameCell{},R} (
      Lblproject'Coln'ClassNameCell{}(X0:SortK{}),
     \and{SortClassNameCell{}} (
       VarK:SortClassNameCell{},
        \top{SortClassNameCell{}}())))
  [projection{}()]

// rule `project:ClassNameCellOpt`(inj{ClassNameCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassNameCellOpt{}, SortKItem{}}(VarK:SortClassNameCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassNameCellOpt{},R} (
      Lblproject'Coln'ClassNameCellOpt{}(X0:SortK{}),
     \and{SortClassNameCellOpt{}} (
       VarK:SortClassNameCellOpt{},
        \top{SortClassNameCellOpt{}}())))
  [projection{}()]

// rule `project:ClassesCell`(inj{ClassesCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassesCell{}, SortKItem{}}(VarK:SortClassesCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassesCell{},R} (
      Lblproject'Coln'ClassesCell{}(X0:SortK{}),
     \and{SortClassesCell{}} (
       VarK:SortClassesCell{},
        \top{SortClassesCell{}}())))
  [projection{}()]

// rule `project:ClassesCellFragment`(inj{ClassesCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassesCellFragment{}, SortKItem{}}(VarK:SortClassesCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassesCellFragment{},R} (
      Lblproject'Coln'ClassesCellFragment{}(X0:SortK{}),
     \and{SortClassesCellFragment{}} (
       VarK:SortClassesCellFragment{},
        \top{SortClassesCellFragment{}}())))
  [projection{}()]

// rule `project:ClassesCellOpt`(inj{ClassesCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassesCellOpt{}, SortKItem{}}(VarK:SortClassesCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassesCellOpt{},R} (
      Lblproject'Coln'ClassesCellOpt{}(X0:SortK{}),
     \and{SortClassesCellOpt{}} (
       VarK:SortClassesCellOpt{},
        \top{SortClassesCellOpt{}}())))
  [projection{}()]

// rule `project:ControlCell`(inj{ControlCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortControlCell{}, SortKItem{}}(VarK:SortControlCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortControlCell{},R} (
      Lblproject'Coln'ControlCell{}(X0:SortK{}),
     \and{SortControlCell{}} (
       VarK:SortControlCell{},
        \top{SortControlCell{}}())))
  [projection{}()]

// rule `project:ControlCellFragment`(inj{ControlCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortControlCellFragment{}, SortKItem{}}(VarK:SortControlCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortControlCellFragment{},R} (
      Lblproject'Coln'ControlCellFragment{}(X0:SortK{}),
     \and{SortControlCellFragment{}} (
       VarK:SortControlCellFragment{},
        \top{SortControlCellFragment{}}())))
  [projection{}()]

// rule `project:ControlCellOpt`(inj{ControlCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortControlCellOpt{}, SortKItem{}}(VarK:SortControlCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortControlCellOpt{},R} (
      Lblproject'Coln'ControlCellOpt{}(X0:SortK{}),
     \and{SortControlCellOpt{}} (
       VarK:SortControlCellOpt{},
        \top{SortControlCellOpt{}}())))
  [projection{}()]

// rule `project:CrntClassCell`(inj{CrntClassCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCrntClassCell{}, SortKItem{}}(VarK:SortCrntClassCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCrntClassCell{},R} (
      Lblproject'Coln'CrntClassCell{}(X0:SortK{}),
     \and{SortCrntClassCell{}} (
       VarK:SortCrntClassCell{},
        \top{SortCrntClassCell{}}())))
  [projection{}()]

// rule `project:CrntClassCellOpt`(inj{CrntClassCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCrntClassCellOpt{}, SortKItem{}}(VarK:SortCrntClassCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCrntClassCellOpt{},R} (
      Lblproject'Coln'CrntClassCellOpt{}(X0:SortK{}),
     \and{SortCrntClassCellOpt{}} (
       VarK:SortCrntClassCellOpt{},
        \top{SortCrntClassCellOpt{}}())))
  [projection{}()]

// rule `project:CrntObjCell`(inj{CrntObjCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCrntObjCell{}, SortKItem{}}(VarK:SortCrntObjCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCrntObjCell{},R} (
      Lblproject'Coln'CrntObjCell{}(X0:SortK{}),
     \and{SortCrntObjCell{}} (
       VarK:SortCrntObjCell{},
        \top{SortCrntObjCell{}}())))
  [projection{}()]

// rule `project:CrntObjCellFragment`(inj{CrntObjCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCrntObjCellFragment{}, SortKItem{}}(VarK:SortCrntObjCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCrntObjCellFragment{},R} (
      Lblproject'Coln'CrntObjCellFragment{}(X0:SortK{}),
     \and{SortCrntObjCellFragment{}} (
       VarK:SortCrntObjCellFragment{},
        \top{SortCrntObjCellFragment{}}())))
  [projection{}()]

// rule `project:CrntObjCellOpt`(inj{CrntObjCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCrntObjCellOpt{}, SortKItem{}}(VarK:SortCrntObjCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCrntObjCellOpt{},R} (
      Lblproject'Coln'CrntObjCellOpt{}(X0:SortK{}),
     \and{SortCrntObjCellOpt{}} (
       VarK:SortCrntObjCellOpt{},
        \top{SortCrntObjCellOpt{}}())))
  [projection{}()]

// rule `project:DeclarationsCell`(inj{DeclarationsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDeclarationsCell{}, SortKItem{}}(VarK:SortDeclarationsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortDeclarationsCell{},R} (
      Lblproject'Coln'DeclarationsCell{}(X0:SortK{}),
     \and{SortDeclarationsCell{}} (
       VarK:SortDeclarationsCell{},
        \top{SortDeclarationsCell{}}())))
  [projection{}()]

// rule `project:DeclarationsCellOpt`(inj{DeclarationsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDeclarationsCellOpt{}, SortKItem{}}(VarK:SortDeclarationsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortDeclarationsCellOpt{},R} (
      Lblproject'Coln'DeclarationsCellOpt{}(X0:SortK{}),
     \and{SortDeclarationsCellOpt{}} (
       VarK:SortDeclarationsCellOpt{},
        \top{SortDeclarationsCellOpt{}}())))
  [projection{}()]

// rule `project:EnvCell`(inj{EnvCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCell{}, SortKItem{}}(VarK:SortEnvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortEnvCell{},R} (
      Lblproject'Coln'EnvCell{}(X0:SortK{}),
     \and{SortEnvCell{}} (
       VarK:SortEnvCell{},
        \top{SortEnvCell{}}())))
  [projection{}()]

// rule `project:EnvCellOpt`(inj{EnvCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCellOpt{}, SortKItem{}}(VarK:SortEnvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortEnvCellOpt{},R} (
      Lblproject'Coln'EnvCellOpt{}(X0:SortK{}),
     \and{SortEnvCellOpt{}} (
       VarK:SortEnvCellOpt{},
        \top{SortEnvCellOpt{}}())))
  [projection{}()]

// rule `project:EnvStackCell`(inj{EnvStackCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvStackCell{}, SortKItem{}}(VarK:SortEnvStackCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortEnvStackCell{},R} (
      Lblproject'Coln'EnvStackCell{}(X0:SortK{}),
     \and{SortEnvStackCell{}} (
       VarK:SortEnvStackCell{},
        \top{SortEnvStackCell{}}())))
  [projection{}()]

// rule `project:EnvStackCellOpt`(inj{EnvStackCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvStackCellOpt{}, SortKItem{}}(VarK:SortEnvStackCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortEnvStackCellOpt{},R} (
      Lblproject'Coln'EnvStackCellOpt{}(X0:SortK{}),
     \and{SortEnvStackCellOpt{}} (
       VarK:SortEnvStackCellOpt{},
        \top{SortEnvStackCellOpt{}}())))
  [projection{}()]

// rule `project:Exp`(inj{Exp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExp{}, SortKItem{}}(VarK:SortExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortExp{},R} (
      Lblproject'Coln'Exp{}(X0:SortK{}),
     \and{SortExp{}} (
       VarK:SortExp{},
        \top{SortExp{}}())))
  [projection{}()]

// rule `project:Exps`(inj{Exps,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExps{}, SortKItem{}}(VarK:SortExps{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortExps{},R} (
      Lblproject'Coln'Exps{}(X0:SortK{}),
     \and{SortExps{}} (
       VarK:SortExps{},
        \top{SortExps{}}())))
  [projection{}()]

// rule `project:Float`(inj{Float,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarK:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortFloat{},R} (
      Lblproject'Coln'Float{}(X0:SortK{}),
     \and{SortFloat{}} (
       VarK:SortFloat{},
        \top{SortFloat{}}())))
  [projection{}()]

// rule `project:FstackCell`(inj{FstackCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFstackCell{}, SortKItem{}}(VarK:SortFstackCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortFstackCell{},R} (
      Lblproject'Coln'FstackCell{}(X0:SortK{}),
     \and{SortFstackCell{}} (
       VarK:SortFstackCell{},
        \top{SortFstackCell{}}())))
  [projection{}()]

// rule `project:FstackCellOpt`(inj{FstackCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFstackCellOpt{}, SortKItem{}}(VarK:SortFstackCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortFstackCellOpt{},R} (
      Lblproject'Coln'FstackCellOpt{}(X0:SortK{}),
     \and{SortFstackCellOpt{}} (
       VarK:SortFstackCellOpt{},
        \top{SortFstackCellOpt{}}())))
  [projection{}()]

// rule `project:GeneratedCounterCell`(inj{GeneratedCounterCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarK:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      Lblproject'Coln'GeneratedCounterCell{}(X0:SortK{}),
     \and{SortGeneratedCounterCell{}} (
       VarK:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  [projection{}()]

// rule `project:GeneratedCounterCellOpt`(inj{GeneratedCounterCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarK:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCellOpt{},R} (
      Lblproject'Coln'GeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortGeneratedCounterCellOpt{}} (
       VarK:SortGeneratedCounterCellOpt{},
        \top{SortGeneratedCounterCellOpt{}}())))
  [projection{}()]

// rule `project:GeneratedTopCell`(inj{GeneratedTopCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarK:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      Lblproject'Coln'GeneratedTopCell{}(X0:SortK{}),
     \and{SortGeneratedTopCell{}} (
       VarK:SortGeneratedTopCell{},
        \top{SortGeneratedTopCell{}}())))
  [projection{}()]

// rule `project:GeneratedTopCellFragment`(inj{GeneratedTopCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarK:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCellFragment{},R} (
      Lblproject'Coln'GeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortGeneratedTopCellFragment{}} (
       VarK:SortGeneratedTopCellFragment{},
        \top{SortGeneratedTopCellFragment{}}())))
  [projection{}()]

// rule `project:HoldsCell`(inj{HoldsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortHoldsCell{}, SortKItem{}}(VarK:SortHoldsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortHoldsCell{},R} (
      Lblproject'Coln'HoldsCell{}(X0:SortK{}),
     \and{SortHoldsCell{}} (
       VarK:SortHoldsCell{},
        \top{SortHoldsCell{}}())))
  [projection{}()]

// rule `project:HoldsCellOpt`(inj{HoldsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortHoldsCellOpt{}, SortKItem{}}(VarK:SortHoldsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortHoldsCellOpt{},R} (
      Lblproject'Coln'HoldsCellOpt{}(X0:SortK{}),
     \and{SortHoldsCellOpt{}} (
       VarK:SortHoldsCellOpt{},
        \top{SortHoldsCellOpt{}}())))
  [projection{}()]

// rule `project:IOError`(inj{IOError,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOError{}, SortKItem{}}(VarK:SortIOError{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOError{},R} (
      Lblproject'Coln'IOError{}(X0:SortK{}),
     \and{SortIOError{}} (
       VarK:SortIOError{},
        \top{SortIOError{}}())))
  [projection{}()]

// rule `project:IOFile`(inj{IOFile,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOFile{}, SortKItem{}}(VarK:SortIOFile{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOFile{},R} (
      Lblproject'Coln'IOFile{}(X0:SortK{}),
     \and{SortIOFile{}} (
       VarK:SortIOFile{},
        \top{SortIOFile{}}())))
  [projection{}()]

// rule `project:IOInt`(inj{IOInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOInt{}, SortKItem{}}(VarK:SortIOInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOInt{},R} (
      Lblproject'Coln'IOInt{}(X0:SortK{}),
     \and{SortIOInt{}} (
       VarK:SortIOInt{},
        \top{SortIOInt{}}())))
  [projection{}()]

// rule `project:IOString`(inj{IOString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOString{}, SortKItem{}}(VarK:SortIOString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOString{},R} (
      Lblproject'Coln'IOString{}(X0:SortK{}),
     \and{SortIOString{}} (
       VarK:SortIOString{},
        \top{SortIOString{}}())))
  [projection{}()]

// rule `project:Id`(inj{Id,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarK:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortId{},R} (
      Lblproject'Coln'Id{}(X0:SortK{}),
     \and{SortId{}} (
       VarK:SortId{},
        \top{SortId{}}())))
  [projection{}()]

// rule `project:IdCell`(inj{IdCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCell{}, SortKItem{}}(VarK:SortIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIdCell{},R} (
      Lblproject'Coln'IdCell{}(X0:SortK{}),
     \and{SortIdCell{}} (
       VarK:SortIdCell{},
        \top{SortIdCell{}}())))
  [projection{}()]

// rule `project:IdCellOpt`(inj{IdCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCellOpt{}, SortKItem{}}(VarK:SortIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIdCellOpt{},R} (
      Lblproject'Coln'IdCellOpt{}(X0:SortK{}),
     \and{SortIdCellOpt{}} (
       VarK:SortIdCellOpt{},
        \top{SortIdCellOpt{}}())))
  [projection{}()]

// rule `project:Ids`(inj{Ids,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIds{}, SortKItem{}}(VarK:SortIds{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIds{},R} (
      Lblproject'Coln'Ids{}(X0:SortK{}),
     \and{SortIds{}} (
       VarK:SortIds{},
        \top{SortIds{}}())))
  [projection{}()]

// rule `project:InputCell`(inj{InputCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInputCell{}, SortKItem{}}(VarK:SortInputCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInputCell{},R} (
      Lblproject'Coln'InputCell{}(X0:SortK{}),
     \and{SortInputCell{}} (
       VarK:SortInputCell{},
        \top{SortInputCell{}}())))
  [projection{}()]

// rule `project:InputCellOpt`(inj{InputCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInputCellOpt{}, SortKItem{}}(VarK:SortInputCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInputCellOpt{},R} (
      Lblproject'Coln'InputCellOpt{}(X0:SortK{}),
     \and{SortInputCellOpt{}} (
       VarK:SortInputCellOpt{},
        \top{SortInputCellOpt{}}())))
  [projection{}()]

// rule `project:Int`(inj{Int,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarK:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'Coln'Int{}(X0:SortK{}),
     \and{SortInt{}} (
       VarK:SortInt{},
        \top{SortInt{}}())))
  [projection{}()]

// rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortK{},R} (
      Lblproject'Coln'K{}(X0:SortK{}),
     \and{SortK{}} (
       VarK:SortK{},
        \top{SortK{}}())))
  [projection{}()]

// rule `project:KCell`(inj{KCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarK:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      Lblproject'Coln'KCell{}(X0:SortK{}),
     \and{SortKCell{}} (
       VarK:SortKCell{},
        \top{SortKCell{}}())))
  [projection{}()]

// rule `project:KCellOpt`(inj{KCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarK:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCellOpt{},R} (
      Lblproject'Coln'KCellOpt{}(X0:SortK{}),
     \and{SortKCellOpt{}} (
       VarK:SortKCellOpt{},
        \top{SortKCellOpt{}}())))
  [projection{}()]

// rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarK:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKItem{},R} (
      Lblproject'Coln'KItem{}(X0:SortK{}),
     \and{SortKItem{}} (
       VarK:SortKItem{},
        \top{SortKItem{}}())))
  [projection{}()]

// rule `project:KResult`(inj{KResult,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarK:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKResult{},R} (
      Lblproject'Coln'KResult{}(X0:SortK{}),
     \and{SortKResult{}} (
       VarK:SortKResult{},
        \top{SortKResult{}}())))
  [projection{}()]

// rule `project:List`(inj{List,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarK:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortList{},R} (
      Lblproject'Coln'List{}(X0:SortK{}),
     \and{SortList{}} (
       VarK:SortList{},
        \top{SortList{}}())))
  [projection{}()]

// rule `project:LocationCell`(inj{LocationCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocationCell{}, SortKItem{}}(VarK:SortLocationCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortLocationCell{},R} (
      Lblproject'Coln'LocationCell{}(X0:SortK{}),
     \and{SortLocationCell{}} (
       VarK:SortLocationCell{},
        \top{SortLocationCell{}}())))
  [projection{}()]

// rule `project:LocationCellOpt`(inj{LocationCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocationCellOpt{}, SortKItem{}}(VarK:SortLocationCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortLocationCellOpt{},R} (
      Lblproject'Coln'LocationCellOpt{}(X0:SortK{}),
     \and{SortLocationCellOpt{}} (
       VarK:SortLocationCellOpt{},
        \top{SortLocationCellOpt{}}())))
  [projection{}()]

// rule `project:Map`(inj{Map,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarK:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortMap{},R} (
      Lblproject'Coln'Map{}(X0:SortK{}),
     \and{SortMap{}} (
       VarK:SortMap{},
        \top{SortMap{}}())))
  [projection{}()]

// rule `project:NextLocCell`(inj{NextLocCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextLocCell{}, SortKItem{}}(VarK:SortNextLocCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortNextLocCell{},R} (
      Lblproject'Coln'NextLocCell{}(X0:SortK{}),
     \and{SortNextLocCell{}} (
       VarK:SortNextLocCell{},
        \top{SortNextLocCell{}}())))
  [projection{}()]

// rule `project:NextLocCellOpt`(inj{NextLocCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextLocCellOpt{}, SortKItem{}}(VarK:SortNextLocCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortNextLocCellOpt{},R} (
      Lblproject'Coln'NextLocCellOpt{}(X0:SortK{}),
     \and{SortNextLocCellOpt{}} (
       VarK:SortNextLocCellOpt{},
        \top{SortNextLocCellOpt{}}())))
  [projection{}()]

// rule `project:OutputCell`(inj{OutputCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCell{}, SortKItem{}}(VarK:SortOutputCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOutputCell{},R} (
      Lblproject'Coln'OutputCell{}(X0:SortK{}),
     \and{SortOutputCell{}} (
       VarK:SortOutputCell{},
        \top{SortOutputCell{}}())))
  [projection{}()]

// rule `project:OutputCellOpt`(inj{OutputCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCellOpt{}, SortKItem{}}(VarK:SortOutputCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOutputCellOpt{},R} (
      Lblproject'Coln'OutputCellOpt{}(X0:SortK{}),
     \and{SortOutputCellOpt{}} (
       VarK:SortOutputCellOpt{},
        \top{SortOutputCellOpt{}}())))
  [projection{}()]

// rule `project:Set`(inj{Set,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarK:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortSet{},R} (
      Lblproject'Coln'Set{}(X0:SortK{}),
     \and{SortSet{}} (
       VarK:SortSet{},
        \top{SortSet{}}())))
  [projection{}()]

// rule `project:Stmt`(inj{Stmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmt{}, SortKItem{}}(VarK:SortStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStmt{},R} (
      Lblproject'Coln'Stmt{}(X0:SortK{}),
     \and{SortStmt{}} (
       VarK:SortStmt{},
        \top{SortStmt{}}())))
  [projection{}()]

// rule `project:StoreCell`(inj{StoreCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCell{}, SortKItem{}}(VarK:SortStoreCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStoreCell{},R} (
      Lblproject'Coln'StoreCell{}(X0:SortK{}),
     \and{SortStoreCell{}} (
       VarK:SortStoreCell{},
        \top{SortStoreCell{}}())))
  [projection{}()]

// rule `project:StoreCellOpt`(inj{StoreCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(VarK:SortStoreCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStoreCellOpt{},R} (
      Lblproject'Coln'StoreCellOpt{}(X0:SortK{}),
     \and{SortStoreCellOpt{}} (
       VarK:SortStoreCellOpt{},
        \top{SortStoreCellOpt{}}())))
  [projection{}()]

// rule `project:Stream`(inj{Stream,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStream{}, SortKItem{}}(VarK:SortStream{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStream{},R} (
      Lblproject'Coln'Stream{}(X0:SortK{}),
     \and{SortStream{}} (
       VarK:SortStream{},
        \top{SortStream{}}())))
  [projection{}()]

// rule `project:String`(inj{String,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarK:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      Lblproject'Coln'String{}(X0:SortK{}),
     \and{SortString{}} (
       VarK:SortString{},
        \top{SortString{}}())))
  [projection{}()]

// rule `project:TCell`(inj{TCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCell{}, SortKItem{}}(VarK:SortTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCell{},R} (
      Lblproject'Coln'TCell{}(X0:SortK{}),
     \and{SortTCell{}} (
       VarK:SortTCell{},
        \top{SortTCell{}}())))
  [projection{}()]

// rule `project:TCellFragment`(inj{TCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarK:SortTCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCellFragment{},R} (
      Lblproject'Coln'TCellFragment{}(X0:SortK{}),
     \and{SortTCellFragment{}} (
       VarK:SortTCellFragment{},
        \top{SortTCellFragment{}}())))
  [projection{}()]

// rule `project:TCellOpt`(inj{TCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarK:SortTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCellOpt{},R} (
      Lblproject'Coln'TCellOpt{}(X0:SortK{}),
     \and{SortTCellOpt{}} (
       VarK:SortTCellOpt{},
        \top{SortTCellOpt{}}())))
  [projection{}()]

// rule `project:TerminatedCell`(inj{TerminatedCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTerminatedCell{}, SortKItem{}}(VarK:SortTerminatedCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTerminatedCell{},R} (
      Lblproject'Coln'TerminatedCell{}(X0:SortK{}),
     \and{SortTerminatedCell{}} (
       VarK:SortTerminatedCell{},
        \top{SortTerminatedCell{}}())))
  [projection{}()]

// rule `project:TerminatedCellOpt`(inj{TerminatedCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTerminatedCellOpt{}, SortKItem{}}(VarK:SortTerminatedCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTerminatedCellOpt{},R} (
      Lblproject'Coln'TerminatedCellOpt{}(X0:SortK{}),
     \and{SortTerminatedCellOpt{}} (
       VarK:SortTerminatedCellOpt{},
        \top{SortTerminatedCellOpt{}}())))
  [projection{}()]

// rule `project:ThreadCell`(inj{ThreadCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCell{}, SortKItem{}}(VarK:SortThreadCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadCell{},R} (
      Lblproject'Coln'ThreadCell{}(X0:SortK{}),
     \and{SortThreadCell{}} (
       VarK:SortThreadCell{},
        \top{SortThreadCell{}}())))
  [projection{}()]

// rule `project:ThreadCellFragment`(inj{ThreadCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCellFragment{}, SortKItem{}}(VarK:SortThreadCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadCellFragment{},R} (
      Lblproject'Coln'ThreadCellFragment{}(X0:SortK{}),
     \and{SortThreadCellFragment{}} (
       VarK:SortThreadCellFragment{},
        \top{SortThreadCellFragment{}}())))
  [projection{}()]

// rule `project:ThreadCellSet`(inj{ThreadCellSet,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCellSet{}, SortKItem{}}(VarK:SortThreadCellSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadCellSet{},R} (
      Lblproject'Coln'ThreadCellSet{}(X0:SortK{}),
     \and{SortThreadCellSet{}} (
       VarK:SortThreadCellSet{},
        \top{SortThreadCellSet{}}())))
  [projection{}()]

// rule `project:ThreadsCell`(inj{ThreadsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCell{}, SortKItem{}}(VarK:SortThreadsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadsCell{},R} (
      Lblproject'Coln'ThreadsCell{}(X0:SortK{}),
     \and{SortThreadsCell{}} (
       VarK:SortThreadsCell{},
        \top{SortThreadsCell{}}())))
  [projection{}()]

// rule `project:ThreadsCellFragment`(inj{ThreadsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCellFragment{}, SortKItem{}}(VarK:SortThreadsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadsCellFragment{},R} (
      Lblproject'Coln'ThreadsCellFragment{}(X0:SortK{}),
     \and{SortThreadsCellFragment{}} (
       VarK:SortThreadsCellFragment{},
        \top{SortThreadsCellFragment{}}())))
  [projection{}()]

// rule `project:ThreadsCellOpt`(inj{ThreadsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCellOpt{}, SortKItem{}}(VarK:SortThreadsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadsCellOpt{},R} (
      Lblproject'Coln'ThreadsCellOpt{}(X0:SortK{}),
     \and{SortThreadsCellOpt{}} (
       VarK:SortThreadsCellOpt{},
        \top{SortThreadsCellOpt{}}())))
  [projection{}()]

// rule `project:Val`(inj{Val,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVal{}, SortKItem{}}(VarK:SortVal{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortVal{},R} (
      Lblproject'Coln'Val{}(X0:SortK{}),
     \and{SortVal{}} (
       VarK:SortVal{},
        \top{SortVal{}}())))
  [projection{}()]

// rule `project:Vals`(inj{Vals,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVals{}, SortKItem{}}(VarK:SortVals{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortVals{},R} (
      Lblproject'Coln'Vals{}(X0:SortK{}),
     \and{SortVals{}} (
       VarK:SortVals{},
        \top{SortVals{}}())))
  [projection{}()]

// rule `project:XstackCell`(inj{XstackCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortXstackCell{}, SortKItem{}}(VarK:SortXstackCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortXstackCell{},R} (
      Lblproject'Coln'XstackCell{}(X0:SortK{}),
     \and{SortXstackCell{}} (
       VarK:SortXstackCell{},
        \top{SortXstackCell{}}())))
  [projection{}()]

// rule `project:XstackCellOpt`(inj{XstackCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortXstackCellOpt{}, SortKItem{}}(VarK:SortXstackCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortXstackCellOpt{},R} (
      Lblproject'Coln'XstackCellOpt{}(X0:SortK{}),
     \and{SortXstackCellOpt{}} (
       VarK:SortXstackCellOpt{},
        \top{SortXstackCellOpt{}}())))
  [projection{}()]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,Count)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToReplace,Replacement,`_-Int_`(Count,#token("1","Int")))) requires `_>Int_`(Count,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9), org.kframework.attributes.Location(Location(1705,8,1708,30)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarCount:SortInt{}
          ),
          \top{R} ()
        ))))),
    \equals{SortString{},R} (
      Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
     \and{SortString{}} (
       Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToReplace:SortString{},VarReplacement:SortString{},Lbl'Unds'-Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1705,8,1708,30)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9")]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,_Gen0,_Gen1,#token("0","Int"))=>Source requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5), org.kframework.attributes.Location(Location(1709,8,1709,49)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'Gen1:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            \dv{SortInt{}}("0")
          ),
          \top{R} ()
        ))))),
    \equals{SortString{},R} (
      Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
     \and{SortString{}} (
       VarSource:SortString{},
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1709,8,1709,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5")]

// rule `replaceAll(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToReplace)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5), org.kframework.attributes.Location(Location(1710,8,1710,154)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{})),
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1710,8,1710,154)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source))) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c), org.kframework.attributes.Location(Location(1698,8,1700,66)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{}))),
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1698,8,1700,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,_Gen0)=>Source requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34), org.kframework.attributes.Location(Location(1701,8,1702,57)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'Gen0:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       VarSource:SortString{},
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1701,8,1702,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`rfindString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205), org.kframework.attributes.Location(Location(1690,8,1690,182)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1690,8,1690,182)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6), org.kframework.attributes.Location(Location(1691,8,1691,33)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'Gen1:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("-1"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1691,8,1691,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6")]

// rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f), org.kframework.attributes.Location(Location(1237,8,1237,164)), org.kframework.attributes.Source(Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1237,8,1237,164)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/z2nc07jr9v2lv1iwzd6rh32xx4m6j1v3-k-5.6.23-10b067278aadb763b3a57a1f168559b1a872a59e-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f")]


// priority groups
endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,1,588,10)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/kool/kool.md)")]
